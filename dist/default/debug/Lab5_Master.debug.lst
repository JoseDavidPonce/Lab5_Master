

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 00:05:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.10
    38                           ; Generated 31/07/2019 GMT
    39                           ; 
    40                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0013                     _SSPBUF	set	19
   384  000C                     _PIR1bits	set	12
   385  000B                     _INTCONbits	set	11
   386  0014                     _SSPCON	set	20
   387  0014                     _SSPCONbits	set	20
   388  0008                     _PORTDbits	set	8
   389  0008                     _PORTD	set	8
   390  0006                     _PORTB	set	6
   391  0091                     _SSPCON2bits	set	145
   392  0094                     _SSPSTATbits	set	148
   393  008C                     _PIE1bits	set	140
   394  0087                     _TRISCbits	set	135
   395  0094                     _SSPSTAT	set	148
   396  0093                     _SSPADD	set	147
   397  0091                     _SSPCON2	set	145
   398  0088                     _TRISD	set	136
   399  0086                     _TRISB	set	134
   400  0189                     _ANSELH	set	393
   401  0188                     _ANSEL	set	392
   402                           
   403                           	psect	strings
   404  0800                     __pstrings:	
   405  0800                     stringtab:	
   406  0800                     __stringtab:	
   407  0800                     stringcode:	
   408                           ;	String table - string pointers are 1 byte each
   409                           
   410  0800                     stringdir:	
   411  0800  3008               	movlw	high stringdir
   412  0801  008A               	movwf	10
   413  0802  0804               	movf	4,w
   414  0803  0A84               	incf	4,f
   415  0804  0782               	addwf	2,f
   416  0805                     __stringbase:	
   417  0805  3400               	retlw	0
   418  0806                     __end_of__stringtab:	
   419  0806                     STR_1:	
   420  0806  3450               	retlw	80	;'P'
   421  0807  346F               	retlw	111	;'o'
   422  0808  3474               	retlw	116	;'t'
   423  0809  3420               	retlw	32	;' '
   424  080A  3420               	retlw	32	;' '
   425  080B  3420               	retlw	32	;' '
   426  080C  3446               	retlw	70	;'F'
   427  080D  346F               	retlw	111	;'o'
   428  080E  3474               	retlw	116	;'t'
   429  080F  346F               	retlw	111	;'o'
   430  0810  3420               	retlw	32	;' '
   431  0811  3420               	retlw	32	;' '
   432  0812  3443               	retlw	67	;'C'
   433  0813  346F               	retlw	111	;'o'
   434  0814  346E               	retlw	110	;'n'
   435  0815  3474               	retlw	116	;'t'
   436  0816  3400               	retlw	0
   437  0817                     STR_2:	
   438  0817  342E               	retlw	46	;'.'
   439  0818  3400               	retlw	0
   440  0817                     
   441                           ; #config settings
   442  0000                     
   443                           	psect	cinit
   444  07F3                     start_initialization:	
   445  07F3                     __initialization:	
   446                           
   447                           ; Clear objects allocated to BANK0
   448  07F3  1383               	bcf	3,7	;select IRP bank0
   449  07F4  304D               	movlw	low __pbssBANK0
   450  07F5  0084               	movwf	4
   451  07F6  306E               	movlw	low (__pbssBANK0+33)
   452  07F7  120A  158A  25EA  120A  118A  	fcall	clear_ram0
   453  07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456  07FC                     __end_of__initialization:	
   457  07FC  0183               	clrf	3
   458  07FD  120A  118A  2AB4   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	bssBANK0
   461  004D                     __pbssBANK0:	
   462  004D                     _fotof:	
   463  004D                     	ds	4
   464  0051                     _potf:	
   465  0051                     	ds	4
   466  0055                     _temfoto:	
   467  0055                     	ds	2
   468  0057                     _tempot:	
   469  0057                     	ds	2
   470  0059                     _charcont2:	
   471  0059                     	ds	1
   472  005A                     _charcont1:	
   473  005A                     	ds	1
   474  005B                     _charpot3:	
   475  005B                     	ds	1
   476  005C                     _charfoto3:	
   477  005C                     	ds	1
   478  005D                     _charpot2:	
   479  005D                     	ds	1
   480  005E                     _charfoto2:	
   481  005E                     	ds	1
   482  005F                     _charpot1:	
   483  005F                     	ds	1
   484  0060                     _charfoto1:	
   485  0060                     	ds	1
   486  0061                     _dececont:	
   487  0061                     	ds	1
   488  0062                     _unicont:	
   489  0062                     	ds	1
   490  0063                     _deci2foto:	
   491  0063                     	ds	1
   492  0064                     _deci1foto:	
   493  0064                     	ds	1
   494  0065                     _unifoto:	
   495  0065                     	ds	1
   496  0066                     _a:	
   497  0066                     	ds	1
   498  0067                     _deci2pot:	
   499  0067                     	ds	1
   500  0068                     _deci1pot:	
   501  0068                     	ds	1
   502  0069                     _unipot:	
   503  0069                     	ds	1
   504  006A                     _cont:	
   505  006A                     	ds	1
   506  006B                     _foto:	
   507  006B                     	ds	1
   508  006C                     _pot:	
   509  006C                     	ds	1
   510  006D                     _address:	
   511  006D                     	ds	1
   512                           
   513                           	psect	clrtext
   514  0DEA                     clear_ram0:	
   515                           ;	Called with FSR containing the base address, and
   516                           ;	W with the last address+1
   517                           
   518  0DEA  0064               	clrwdt	;clear the watchdog before getting into this loop
   519  0DEB                     clrloop0:	
   520  0DEB  0180               	clrf	0	;clear RAM location pointed to by FSR
   521  0DEC  0A84               	incf	4,f	;increment pointer
   522  0DED  0604               	xorwf	4,w	;XOR with final address
   523  0DEE  1903               	btfsc	3,2	;have we reached the end yet?
   524  0DEF  3400               	retlw	0	;all done for this memory range, return
   525  0DF0  0604               	xorwf	4,w	;XOR again to restore value
   526  0DF1  2DEB               	goto	clrloop0	;do the next byte
   527                           
   528                           	psect	cstackCOMMON
   529  0070                     __pcstackCOMMON:	
   530  0070                     ?_Init_Port:	
   531  0070                     ??_Init_Port:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_LCD_INIT:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_LCD_WRITE_STRING:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_Start_I2C_Master:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_Start_I2C_Master:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_Write_I2C_Master:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_Stop_I2C_Master:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_Stop_I2C_Master:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_obtener_unidades:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_obtener_decenas:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_convertir_a_ascii:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_convertir_a_ascii:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_LCD_WRITE_CHAR:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ??_LCD_WRITE_CHAR:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_LCD_CMD:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_LCD_CMD:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_Wait_I2C_Master:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ??_Wait_I2C_Master:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?__Umul8_16:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?___awdiv:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0070                     ?___lwmod:	
   595                           ; 2 bytes @ 0x0
   596                           
   597  0070                     ?___lldiv:	
   598                           ; 2 bytes @ 0x0
   599                           
   600  0070                     ?___xxtofl:	
   601                           ; 4 bytes @ 0x0
   602                           
   603  0070                     __Umul8_16@multiplicand:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  0070                     Write_I2C_Master@a:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ___awdiv@divisor:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0070                     ___lwmod@divisor:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0070                     ___lldiv@divisor:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     ___xxtofl@val:	
   619                           ; 4 bytes @ 0x0
   620                           
   621                           
   622                           ; 4 bytes @ 0x0
   623  0070                     	ds	1
   624  0071                     convertir_a_ascii@a:	
   625                           
   626                           ; 1 bytes @ 0x1
   627  0071                     	ds	1
   628  0072                     ??_Write_I2C_Master:	
   629  0072                     ??__Umul8_16:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     convertir_a_ascii@temporal:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     LCD_CMD@a:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     LCD_WRITE_CHAR@a:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ___awdiv@dividend:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ___lwmod@dividend:	
   645                           ; 2 bytes @ 0x2
   646                           
   647                           
   648                           ; 2 bytes @ 0x2
   649  0072                     	ds	1
   650  0073                     ??_LCD_INIT:	
   651  0073                     ?_LCD_SET_CURSOR:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ??_LCD_WRITE_STRING:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     LCD_SET_CURSOR@b:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     LCD_WRITE_STRING@i:	
   661                           ; 1 bytes @ 0x3
   662                           
   663                           
   664                           ; 2 bytes @ 0x3
   665  0073                     	ds	1
   666  0074                     ??_LCD_SET_CURSOR:	
   667  0074                     ??___awdiv:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ??___lwmod:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ??___xxtofl:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     __Umul8_16@product:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ___lldiv@dividend:	
   680                           ; 2 bytes @ 0x4
   681                           
   682                           
   683                           ; 4 bytes @ 0x4
   684  0074                     	ds	1
   685  0075                     LCD_SET_CURSOR@a:	
   686  0075                     LCD_WRITE_STRING@a:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     ___awdiv@counter:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     ___lwmod@counter:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 1 bytes @ 0x5
   697  0075                     	ds	1
   698  0076                     LCD_SET_CURSOR@temporal:	
   699  0076                     ___awdiv@sign:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     __Umul8_16@word_mpld:	
   703                           ; 1 bytes @ 0x6
   704                           
   705                           
   706                           ; 2 bytes @ 0x6
   707  0076                     	ds	1
   708  0077                     ___awdiv@quotient:	
   709                           
   710                           ; 2 bytes @ 0x7
   711  0077                     	ds	1
   712  0078                     ??___lldiv:	
   713  0078                     ___xxtofl@sign:	
   714                           ; 1 bytes @ 0x8
   715                           
   716  0078                     __Umul8_16@multiplier:	
   717                           ; 1 bytes @ 0x8
   718                           
   719                           
   720                           ; 1 bytes @ 0x8
   721  0078                     	ds	1
   722  0079                     ?___awmod:	
   723  0079                     ___xxtofl@exp:	
   724                           ; 2 bytes @ 0x9
   725                           
   726  0079                     ___awmod@divisor:	
   727                           ; 1 bytes @ 0x9
   728                           
   729  0079                     ___lldiv@quotient:	
   730                           ; 2 bytes @ 0x9
   731                           
   732                           
   733                           ; 4 bytes @ 0x9
   734  0079                     	ds	1
   735  007A                     ___xxtofl@arg:	
   736                           
   737                           ; 4 bytes @ 0xA
   738  007A                     	ds	1
   739  007B                     ___awmod@dividend:	
   740                           
   741                           ; 2 bytes @ 0xB
   742  007B                     	ds	2
   743  007D                     ??___awmod:	
   744  007D                     ___lldiv@counter:	
   745                           ; 1 bytes @ 0xD
   746                           
   747                           
   748                           ; 1 bytes @ 0xD
   749  007D                     	ds	1
   750  007E                     ??_obtener_decimal_1:	
   751  007E                     ??_obtener_decimal_2:	
   752                           ; 1 bytes @ 0xE
   753                           
   754                           
   755                           	psect	cstackBANK0
   756  0020                     __pcstackBANK0:	
   757                           ; 1 bytes @ 0xE
   758                           
   759  0020                     ?_Init_I2C_Master:	
   760  0020                     ?___flmul:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ___awmod@counter:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0020                     Init_I2C_Master@b:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0020                     ___flmul@b:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  0020                     	ds	1
   775  0021                     ___awmod@sign:	
   776                           
   777                           ; 1 bytes @ 0x1
   778  0021                     	ds	1
   779  0022                     ??_obtener_unidades:	
   780  0022                     ??_obtener_decenas:	
   781                           ; 1 bytes @ 0x2
   782                           
   783                           
   784                           ; 1 bytes @ 0x2
   785  0022                     	ds	2
   786  0024                     ??_Init_I2C_Master:	
   787  0024                     ___flmul@a:	
   788                           ; 1 bytes @ 0x4
   789                           
   790                           
   791                           ; 4 bytes @ 0x4
   792  0024                     	ds	1
   793  0025                     obtener_unidades@a:	
   794  0025                     obtener_decenas@a:	
   795                           ; 1 bytes @ 0x5
   796                           
   797                           
   798                           ; 1 bytes @ 0x5
   799  0025                     	ds	1
   800  0026                     obtener_unidades@temporal:	
   801  0026                     obtener_decenas@temporal:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 1 bytes @ 0x6
   806  0026                     	ds	2
   807  0028                     ??___flmul:	
   808                           
   809                           ; 1 bytes @ 0x8
   810  0028                     	ds	5
   811  002D                     ___flmul@sign:	
   812                           
   813                           ; 1 bytes @ 0xD
   814  002D                     	ds	1
   815  002E                     ___flmul@grs:	
   816                           
   817                           ; 4 bytes @ 0xE
   818  002E                     	ds	4
   819  0032                     ___flmul@aexp:	
   820                           
   821                           ; 1 bytes @ 0x12
   822  0032                     	ds	1
   823  0033                     ___flmul@bexp:	
   824                           
   825                           ; 1 bytes @ 0x13
   826  0033                     	ds	1
   827  0034                     ___flmul@prod:	
   828                           
   829                           ; 4 bytes @ 0x14
   830  0034                     	ds	4
   831  0038                     ___flmul@temp:	
   832                           
   833                           ; 2 bytes @ 0x18
   834  0038                     	ds	2
   835  003A                     ?___fltol:	
   836  003A                     ___fltol@f1:	
   837                           ; 4 bytes @ 0x1A
   838                           
   839                           
   840                           ; 4 bytes @ 0x1A
   841  003A                     	ds	4
   842  003E                     ??___fltol:	
   843                           
   844                           ; 1 bytes @ 0x1E
   845  003E                     	ds	5
   846  0043                     ___fltol@sign1:	
   847                           
   848                           ; 1 bytes @ 0x23
   849  0043                     	ds	1
   850  0044                     ___fltol@exp1:	
   851                           
   852                           ; 1 bytes @ 0x24
   853  0044                     	ds	1
   854  0045                     ?_obtener_decimal_1:	
   855  0045                     ?_obtener_decimal_2:	
   856                           ; 1 bytes @ 0x25
   857                           
   858  0045                     obtener_decimal_1@a:	
   859                           ; 1 bytes @ 0x25
   860                           
   861  0045                     obtener_decimal_2@a:	
   862                           ; 4 bytes @ 0x25
   863                           
   864                           
   865                           ; 4 bytes @ 0x25
   866  0045                     	ds	4
   867  0049                     obtener_decimal_1@temporal:	
   868  0049                     obtener_decimal_2@temporal:	
   869                           ; 2 bytes @ 0x29
   870                           
   871                           
   872                           ; 2 bytes @ 0x29
   873  0049                     	ds	2
   874  004B                     ??_main:	
   875                           
   876                           ; 1 bytes @ 0x2B
   877  004B                     	ds	2
   878                           
   879                           	psect	maintext
   880  02B4                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 51 in file "Main_master.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : B00/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          0       2       0       0       0
   903 ;;      Totals:         0       2       0       0       0
   904 ;;Total ram usage:        2 bytes
   905 ;; Hardware stack levels required when called:    3
   906 ;; This function calls:
   907 ;;		_Init_I2C_Master
   908 ;;		_Init_Port
   909 ;;		_LCD_INIT
   910 ;;		_LCD_SET_CURSOR
   911 ;;		_LCD_WRITE_CHAR
   912 ;;		_LCD_WRITE_STRING
   913 ;;		_Start_I2C_Master
   914 ;;		_Stop_I2C_Master
   915 ;;		_Write_I2C_Master
   916 ;;		___flmul
   917 ;;		___fltol
   918 ;;		___xxtofl
   919 ;;		_convertir_a_ascii
   920 ;;		_obtener_decenas
   921 ;;		_obtener_decimal_1
   922 ;;		_obtener_decimal_2
   923 ;;		_obtener_unidades
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _main
   931  02B4                     _main:	
   932  02B4                     l1901:	
   933                           ;incstack = 0
   934                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   935                           
   936                           
   937                           ;Main_master.c: 52:     Init_Port();
   938  02B4  120A  158A  260E  120A  118A  	fcall	_Init_Port
   939  02B9                     l1903:	
   940                           
   941                           ;Main_master.c: 53:     Init_I2C_Master(100000);
   942  02B9  3000               	movlw	0
   943  02BA  1283               	bcf	3,5	;RP0=0, select bank0
   944  02BB  1303               	bcf	3,6	;RP1=0, select bank0
   945  02BC  00A3               	movwf	Init_I2C_Master@b+3
   946  02BD  3001               	movlw	1
   947  02BE  00A2               	movwf	Init_I2C_Master@b+2
   948  02BF  3086               	movlw	134
   949  02C0  00A1               	movwf	Init_I2C_Master@b+1
   950  02C1  30A0               	movlw	160
   951  02C2  00A0               	movwf	Init_I2C_Master@b
   952  02C3  120A  158A  2742  120A  118A  	fcall	_Init_I2C_Master
   953  02C8                     l1905:	
   954                           
   955                           ;Main_master.c: 54:     LCD_INIT();
   956  02C8  120A  118A  2003  120A  118A  	fcall	_LCD_INIT
   957  02CD                     l1907:	
   958                           
   959                           ;Main_master.c: 56:         LCD_SET_CURSOR (1,1);
   960  02CD  01F3               	clrf	LCD_SET_CURSOR@b
   961  02CE  0AF3               	incf	LCD_SET_CURSOR@b,f
   962  02CF  3001               	movlw	1
   963  02D0  120A  158A  2670  120A  118A  	fcall	_LCD_SET_CURSOR
   964  02D5                     l1909:	
   965                           
   966                           ;Main_master.c: 57:         LCD_WRITE_STRING ("Pot   Foto  Cont");
   967  02D5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   968  02D6  120A  158A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
   969  02DB                     l1911:	
   970                           
   971                           ;Main_master.c: 58:         Start_I2C_Master();
   972  02DB  120A  158A  25F2  120A  118A  	fcall	_Start_I2C_Master
   973  02E0                     l1913:	
   974                           
   975                           ;Main_master.c: 59:         Write_I2C_Master(0x11);
   976  02E0  3011               	movlw	17
   977  02E1  00F0               	movwf	Write_I2C_Master@a
   978  02E2  3000               	movlw	0
   979  02E3  00F1               	movwf	Write_I2C_Master@a+1
   980  02E4  120A  158A  2604  120A  118A  	fcall	_Write_I2C_Master
   981  02E9                     l1915:	
   982                           
   983                           ;Main_master.c: 60:         pot = 125;
   984  02E9  307D               	movlw	125
   985  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   986  02EB  1303               	bcf	3,6	;RP1=0, select bank0
   987  02EC  00CB               	movwf	??_main
   988  02ED  084B               	movf	??_main,w
   989  02EE  00EC               	movwf	_pot
   990  02EF                     l1917:	
   991                           
   992                           ;Main_master.c: 65:         Stop_I2C_Master();
   993  02EF  120A  158A  25FB  120A  118A  	fcall	_Stop_I2C_Master
   994  02F4                     l1919:	
   995                           
   996                           ;Main_master.c: 66:         _delay((unsigned long)((50)*(4000000/4000.0)));
   997  02F4  3041               	movlw	65
   998  02F5  1283               	bcf	3,5	;RP0=0, select bank0
   999  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1000  02F7  00CC               	movwf	??_main+1
  1001  02F8  30ED               	movlw	237
  1002  02F9  00CB               	movwf	??_main
  1003  02FA                     u2077:	
  1004  02FA  0BCB               	decfsz	??_main,f
  1005  02FB  2AFA               	goto	u2077
  1006  02FC  0BCC               	decfsz	??_main+1,f
  1007  02FD  2AFA               	goto	u2077
  1008  02FE  2AFF               	nop2
  1009  02FF                     l1921:	
  1010                           
  1011                           ;Main_master.c: 68:         potf = pot*(5.0/255);
  1012  02FF  303C               	movlw	60
  1013  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0302  00A3               	movwf	___flmul@b+3
  1016  0303  30A0               	movlw	160
  1017  0304  00A2               	movwf	___flmul@b+2
  1018  0305  30A0               	movlw	160
  1019  0306  00A1               	movwf	___flmul@b+1
  1020  0307  30A1               	movlw	161
  1021  0308  00A0               	movwf	___flmul@b
  1022  0309  3000               	movlw	0
  1023  030A  00F3               	movwf	___xxtofl@val+3
  1024  030B  3000               	movlw	0
  1025  030C  00F2               	movwf	___xxtofl@val+2
  1026  030D  3000               	movlw	0
  1027  030E  00F1               	movwf	___xxtofl@val+1
  1028  030F  307D               	movlw	125
  1029  0310  00F0               	movwf	___xxtofl@val
  1030  0311  3001               	movlw	1
  1031  0312  120A  118A  21FA  120A  118A  	fcall	___xxtofl
  1032  0317  0873               	movf	?___xxtofl+3,w
  1033  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1035  031A  00A7               	movwf	___flmul@a+3
  1036  031B  0872               	movf	?___xxtofl+2,w
  1037  031C  00A6               	movwf	___flmul@a+2
  1038  031D  0871               	movf	?___xxtofl+1,w
  1039  031E  00A5               	movwf	___flmul@a+1
  1040  031F  0870               	movf	?___xxtofl,w
  1041  0320  00A4               	movwf	___flmul@a
  1042  0321  120A  118A  2492  120A  118A  	fcall	___flmul
  1043  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0328  0823               	movf	?___flmul+3,w
  1046  0329  00D4               	movwf	_potf+3
  1047  032A  0822               	movf	?___flmul+2,w
  1048  032B  00D3               	movwf	_potf+2
  1049  032C  0821               	movf	?___flmul+1,w
  1050  032D  00D2               	movwf	_potf+1
  1051  032E  0820               	movf	?___flmul,w
  1052  032F  00D1               	movwf	_potf
  1053  0330                     l1923:	
  1054                           
  1055                           ;Main_master.c: 69:         fotof = foto*(5.0/255);
  1056  0330  3000               	movlw	0
  1057  0331  00D0               	movwf	_fotof+3
  1058  0332  3000               	movlw	0
  1059  0333  00CF               	movwf	_fotof+2
  1060  0334  3000               	movlw	0
  1061  0335  00CE               	movwf	_fotof+1
  1062  0336  3000               	movlw	0
  1063  0337  00CD               	movwf	_fotof
  1064  0338                     l1925:	
  1065                           
  1066                           ;Main_master.c: 72:         unipot = obtener_unidades(potf);
  1067  0338  0854               	movf	_potf+3,w
  1068  0339  00BD               	movwf	___fltol@f1+3
  1069  033A  0853               	movf	_potf+2,w
  1070  033B  00BC               	movwf	___fltol@f1+2
  1071  033C  0852               	movf	_potf+1,w
  1072  033D  00BB               	movwf	___fltol@f1+1
  1073  033E  0851               	movf	_potf,w
  1074  033F  00BA               	movwf	___fltol@f1
  1075  0340  120A  118A  217E  120A  118A  	fcall	___fltol
  1076  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0347  083A               	movf	?___fltol,w
  1079  0348  120A  158A  2655  120A  118A  	fcall	_obtener_unidades
  1080  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1081  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1082  034F  00CB               	movwf	??_main
  1083  0350  084B               	movf	??_main,w
  1084  0351  00E9               	movwf	_unipot
  1085  0352                     l1927:	
  1086                           
  1087                           ;Main_master.c: 73:         deci1pot = obtener_decimal_1(potf);
  1088  0352  0854               	movf	_potf+3,w
  1089  0353  00C8               	movwf	obtener_decimal_1@a+3
  1090  0354  0853               	movf	_potf+2,w
  1091  0355  00C7               	movwf	obtener_decimal_1@a+2
  1092  0356  0852               	movf	_potf+1,w
  1093  0357  00C6               	movwf	obtener_decimal_1@a+1
  1094  0358  0851               	movf	_potf,w
  1095  0359  00C5               	movwf	obtener_decimal_1@a
  1096  035A  120A  158A  277E  120A  118A  	fcall	_obtener_decimal_1
  1097  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0361  00CB               	movwf	??_main
  1100  0362  084B               	movf	??_main,w
  1101  0363  00E8               	movwf	_deci1pot
  1102  0364                     l1929:	
  1103                           
  1104                           ;Main_master.c: 74:         deci2pot = obtener_decimal_2(potf);
  1105  0364  0854               	movf	_potf+3,w
  1106  0365  00C8               	movwf	obtener_decimal_2@a+3
  1107  0366  0853               	movf	_potf+2,w
  1108  0367  00C7               	movwf	obtener_decimal_2@a+2
  1109  0368  0852               	movf	_potf+1,w
  1110  0369  00C6               	movwf	obtener_decimal_2@a+1
  1111  036A  0851               	movf	_potf,w
  1112  036B  00C5               	movwf	obtener_decimal_2@a
  1113  036C  120A  158A  27BF  120A  118A  	fcall	_obtener_decimal_2
  1114  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0373  00CB               	movwf	??_main
  1117  0374  084B               	movf	??_main,w
  1118  0375  00E7               	movwf	_deci2pot
  1119  0376                     l1931:	
  1120                           
  1121                           ;Main_master.c: 76:         unifoto = obtener_unidades(fotof);
  1122  0376  0850               	movf	_fotof+3,w
  1123  0377  00BD               	movwf	___fltol@f1+3
  1124  0378  084F               	movf	_fotof+2,w
  1125  0379  00BC               	movwf	___fltol@f1+2
  1126  037A  084E               	movf	_fotof+1,w
  1127  037B  00BB               	movwf	___fltol@f1+1
  1128  037C  084D               	movf	_fotof,w
  1129  037D  00BA               	movwf	___fltol@f1
  1130  037E  120A  118A  217E  120A  118A  	fcall	___fltol
  1131  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0385  083A               	movf	?___fltol,w
  1134  0386  120A  158A  2655  120A  118A  	fcall	_obtener_unidades
  1135  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1136  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1137  038D  00CB               	movwf	??_main
  1138  038E  084B               	movf	??_main,w
  1139  038F  00E5               	movwf	_unifoto
  1140  0390                     l1933:	
  1141                           
  1142                           ;Main_master.c: 77:         deci1foto = obtener_decimal_1(fotof);
  1143  0390  0850               	movf	_fotof+3,w
  1144  0391  00C8               	movwf	obtener_decimal_1@a+3
  1145  0392  084F               	movf	_fotof+2,w
  1146  0393  00C7               	movwf	obtener_decimal_1@a+2
  1147  0394  084E               	movf	_fotof+1,w
  1148  0395  00C6               	movwf	obtener_decimal_1@a+1
  1149  0396  084D               	movf	_fotof,w
  1150  0397  00C5               	movwf	obtener_decimal_1@a
  1151  0398  120A  158A  277E  120A  118A  	fcall	_obtener_decimal_1
  1152  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1153  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1154  039F  00CB               	movwf	??_main
  1155  03A0  084B               	movf	??_main,w
  1156  03A1  00E4               	movwf	_deci1foto
  1157  03A2                     l1935:	
  1158                           
  1159                           ;Main_master.c: 78:         deci2foto = obtener_decimal_2(fotof);
  1160  03A2  0850               	movf	_fotof+3,w
  1161  03A3  00C8               	movwf	obtener_decimal_2@a+3
  1162  03A4  084F               	movf	_fotof+2,w
  1163  03A5  00C7               	movwf	obtener_decimal_2@a+2
  1164  03A6  084E               	movf	_fotof+1,w
  1165  03A7  00C6               	movwf	obtener_decimal_2@a+1
  1166  03A8  084D               	movf	_fotof,w
  1167  03A9  00C5               	movwf	obtener_decimal_2@a
  1168  03AA  120A  158A  27BF  120A  118A  	fcall	_obtener_decimal_2
  1169  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1170  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1171  03B1  00CB               	movwf	??_main
  1172  03B2  084B               	movf	??_main,w
  1173  03B3  00E3               	movwf	_deci2foto
  1174  03B4                     l1937:	
  1175                           
  1176                           ;Main_master.c: 80:         unicont = obtener_unidades(cont);
  1177  03B4  3000               	movlw	0
  1178  03B5  120A  158A  2655  120A  118A  	fcall	_obtener_unidades
  1179  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1180  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1181  03BC  00CB               	movwf	??_main
  1182  03BD  084B               	movf	??_main,w
  1183  03BE  00E2               	movwf	_unicont
  1184  03BF                     l1939:	
  1185                           
  1186                           ;Main_master.c: 81:         dececont = obtener_decenas(cont);
  1187  03BF  3000               	movlw	0
  1188  03C0  120A  158A  26E0  120A  118A  	fcall	_obtener_decenas
  1189  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1190  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1191  03C7  00CB               	movwf	??_main
  1192  03C8  084B               	movf	??_main,w
  1193  03C9  00E1               	movwf	_dececont
  1194  03CA                     l1941:	
  1195                           
  1196                           ;Main_master.c: 83:         charpot1 = convertir_a_ascii(unipot);
  1197  03CA  0869               	movf	_unipot,w
  1198  03CB  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1199  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1200  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1201  03D2  00CB               	movwf	??_main
  1202  03D3  084B               	movf	??_main,w
  1203  03D4  00DF               	movwf	_charpot1
  1204  03D5                     l1943:	
  1205                           
  1206                           ;Main_master.c: 84:         charpot2 = convertir_a_ascii(deci1pot);
  1207  03D5  0868               	movf	_deci1pot,w
  1208  03D6  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1209  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1210  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1211  03DD  00CB               	movwf	??_main
  1212  03DE  084B               	movf	??_main,w
  1213  03DF  00DD               	movwf	_charpot2
  1214  03E0                     l1945:	
  1215                           
  1216                           ;Main_master.c: 85:         charpot3 = convertir_a_ascii(deci2pot);
  1217  03E0  0867               	movf	_deci2pot,w
  1218  03E1  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1219  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1220  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1221  03E8  00CB               	movwf	??_main
  1222  03E9  084B               	movf	??_main,w
  1223  03EA  00DB               	movwf	_charpot3
  1224  03EB                     l1947:	
  1225                           
  1226                           ;Main_master.c: 87:         charfoto1 = convertir_a_ascii(unifoto);
  1227  03EB  0865               	movf	_unifoto,w
  1228  03EC  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1229  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1230  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1231  03F3  00CB               	movwf	??_main
  1232  03F4  084B               	movf	??_main,w
  1233  03F5  00E0               	movwf	_charfoto1
  1234  03F6                     l1949:	
  1235                           
  1236                           ;Main_master.c: 88:         charfoto2 = convertir_a_ascii(deci1foto);
  1237  03F6  0864               	movf	_deci1foto,w
  1238  03F7  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1239  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1240  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1241  03FE  00CB               	movwf	??_main
  1242  03FF  084B               	movf	??_main,w
  1243  0400  00DE               	movwf	_charfoto2
  1244  0401                     l1951:	
  1245                           
  1246                           ;Main_master.c: 89:         charfoto3 = convertir_a_ascii(deci2foto);
  1247  0401  0863               	movf	_deci2foto,w
  1248  0402  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1249  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0409  00CB               	movwf	??_main
  1252  040A  084B               	movf	??_main,w
  1253  040B  00DC               	movwf	_charfoto3
  1254  040C                     l1953:	
  1255                           
  1256                           ;Main_master.c: 91:         charcont1 = convertir_a_ascii(unicont);
  1257  040C  0862               	movf	_unicont,w
  1258  040D  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1259  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0414  00CB               	movwf	??_main
  1262  0415  084B               	movf	??_main,w
  1263  0416  00DA               	movwf	_charcont1
  1264  0417                     l1955:	
  1265                           
  1266                           ;Main_master.c: 92:         charcont2 = convertir_a_ascii(dececont);
  1267  0417  0861               	movf	_dececont,w
  1268  0418  120A  158A  25E2  120A  118A  	fcall	_convertir_a_ascii
  1269  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1270  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1271  041F  00CB               	movwf	??_main
  1272  0420  084B               	movf	??_main,w
  1273  0421  00D9               	movwf	_charcont2
  1274  0422                     l1957:	
  1275                           
  1276                           ;Main_master.c: 94:         LCD_SET_CURSOR (2,1);
  1277  0422  01F3               	clrf	LCD_SET_CURSOR@b
  1278  0423  0AF3               	incf	LCD_SET_CURSOR@b,f
  1279  0424  3002               	movlw	2
  1280  0425  120A  158A  2670  120A  118A  	fcall	_LCD_SET_CURSOR
  1281  042A                     l1959:	
  1282                           
  1283                           ;Main_master.c: 95:         LCD_WRITE_CHAR (charpot1);
  1284  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1285  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1286  042C  085F               	movf	_charpot1,w
  1287  042D  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1288  0432                     l1961:	
  1289                           
  1290                           ;Main_master.c: 96:         LCD_WRITE_STRING(".");
  1291  0432  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1292  0433  120A  158A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1293  0438                     l1963:	
  1294                           
  1295                           ;Main_master.c: 97:         LCD_WRITE_CHAR (charpot2);
  1296  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1298  043A  085D               	movf	_charpot2,w
  1299  043B  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1300  0440                     l1965:	
  1301                           
  1302                           ;Main_master.c: 98:         LCD_WRITE_CHAR (charpot3);
  1303  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0442  085B               	movf	_charpot3,w
  1306  0443  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1307  0448                     l1967:	
  1308                           
  1309                           ;Main_master.c: 100:         LCD_SET_CURSOR (2,7);
  1310  0448  3007               	movlw	7
  1311  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1312  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1313  044B  00CB               	movwf	??_main
  1314  044C  084B               	movf	??_main,w
  1315  044D  00F3               	movwf	LCD_SET_CURSOR@b
  1316  044E  3002               	movlw	2
  1317  044F  120A  158A  2670  120A  118A  	fcall	_LCD_SET_CURSOR
  1318  0454                     l1969:	
  1319                           
  1320                           ;Main_master.c: 101:         LCD_WRITE_CHAR (charfoto1);
  1321  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0456  0860               	movf	_charfoto1,w
  1324  0457  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1325  045C                     l1971:	
  1326                           
  1327                           ;Main_master.c: 102:         LCD_WRITE_STRING(".");
  1328  045C  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1329  045D  120A  158A  2694  120A  118A  	fcall	_LCD_WRITE_STRING
  1330  0462                     l1973:	
  1331                           
  1332                           ;Main_master.c: 103:         LCD_WRITE_CHAR (charfoto2);
  1333  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0464  085E               	movf	_charfoto2,w
  1336  0465  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1337  046A                     l1975:	
  1338                           
  1339                           ;Main_master.c: 104:         LCD_WRITE_CHAR (charfoto3);
  1340  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1341  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1342  046C  085C               	movf	_charfoto3,w
  1343  046D  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1344  0472                     l1977:	
  1345                           
  1346                           ;Main_master.c: 106:         LCD_SET_CURSOR (2,13);
  1347  0472  300D               	movlw	13
  1348  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0475  00CB               	movwf	??_main
  1351  0476  084B               	movf	??_main,w
  1352  0477  00F3               	movwf	LCD_SET_CURSOR@b
  1353  0478  3002               	movlw	2
  1354  0479  120A  158A  2670  120A  118A  	fcall	_LCD_SET_CURSOR
  1355  047E                     l1979:	
  1356                           
  1357                           ;Main_master.c: 107:         LCD_WRITE_CHAR (charcont1);
  1358  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1359  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0480  085A               	movf	_charcont1,w
  1361  0481  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1362  0486                     l1981:	
  1363                           
  1364                           ;Main_master.c: 108:         LCD_WRITE_CHAR (charcont2);
  1365  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0488  0859               	movf	_charcont2,w
  1368  0489  120A  158A  263E  120A  118A  	fcall	_LCD_WRITE_CHAR
  1369  048E  2ACD               	goto	l1907
  1370  048F  120A  118A  2800   	ljmp	start
  1371  0492                     __end_of_main:	
  1372                           
  1373                           	psect	text1
  1374  0E55                     __ptext1:	
  1375 ;; *************** function _obtener_unidades *****************
  1376 ;; Defined at:
  1377 ;;		line 122 in file "Main_master.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  a               1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  a               1    5[BANK0 ] unsigned char 
  1382 ;;  temporal        1    6[BANK0 ] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      unsigned char 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         0       2       0       0       0
  1394 ;;      Temps:          0       3       0       0       0
  1395 ;;      Totals:         0       5       0       0       0
  1396 ;;Total ram usage:        5 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    1
  1399 ;; This function calls:
  1400 ;;		___awmod
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _obtener_unidades
  1408  0E55                     _obtener_unidades:	
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _obtener_unidades: [wreg+status,2+status,0+pclath+cstack]
  1412                           ;obtener_unidades@a stored from wreg
  1413  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0E57  00A5               	movwf	obtener_unidades@a
  1416  0E58                     l1823:	
  1417                           
  1418                           ;Main_master.c: 123:     uint8_t temporal;;Main_master.c: 124:     temporal = a%10;
  1419  0E58  300A               	movlw	10
  1420  0E59  00F9               	movwf	___awmod@divisor
  1421  0E5A  3000               	movlw	0
  1422  0E5B  00FA               	movwf	___awmod@divisor+1
  1423  0E5C  0825               	movf	obtener_unidades@a,w
  1424  0E5D  00A2               	movwf	??_obtener_unidades
  1425  0E5E  01A3               	clrf	??_obtener_unidades+1
  1426  0E5F  0822               	movf	??_obtener_unidades,w
  1427  0E60  00FB               	movwf	___awmod@dividend
  1428  0E61  0823               	movf	??_obtener_unidades+1,w
  1429  0E62  00FC               	movwf	___awmod@dividend+1
  1430  0E63  120A  118A  2056  120A  158A  	fcall	___awmod
  1431  0E68  0879               	movf	?___awmod,w
  1432  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0E6B  00A4               	movwf	??_obtener_unidades+2
  1435  0E6C  0824               	movf	??_obtener_unidades+2,w
  1436  0E6D  00A6               	movwf	obtener_unidades@temporal
  1437  0E6E                     l1825:	
  1438                           
  1439                           ;Main_master.c: 125:     return temporal;
  1440  0E6E  0826               	movf	obtener_unidades@temporal,w
  1441  0E6F                     l106:	
  1442  0E6F  0008               	return
  1443  0E70                     __end_of_obtener_unidades:	
  1444                           
  1445                           	psect	text2
  1446  0FBF                     __ptext2:	
  1447 ;; *************** function _obtener_decimal_2 *****************
  1448 ;; Defined at:
  1449 ;;		line 139 in file "Main_master.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  a               4   37[BANK0 ] float 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  temporal        2   41[BANK0 ] unsigned int 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       4       0       0       0
  1464 ;;      Locals:         0       2       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       6       0       0       0
  1467 ;;Total ram usage:        6 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    2
  1470 ;; This function calls:
  1471 ;;		___flmul
  1472 ;;		___fltol
  1473 ;;		___lwmod
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           
  1480                           ;psect for function _obtener_decimal_2
  1481  0FBF                     _obtener_decimal_2:	
  1482  0FBF                     l1837:	
  1483                           ;incstack = 0
  1484                           ; Regs used in _obtener_decimal_2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1485                           
  1486                           
  1487                           ;Main_master.c: 140:     uint16_t temporal;;Main_master.c: 141:     temporal = (a*100);
  1488  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0FC1  0848               	movf	obtener_decimal_2@a+3,w
  1491  0FC2  00A7               	movwf	___flmul@a+3
  1492  0FC3  0847               	movf	obtener_decimal_2@a+2,w
  1493  0FC4  00A6               	movwf	___flmul@a+2
  1494  0FC5  0846               	movf	obtener_decimal_2@a+1,w
  1495  0FC6  00A5               	movwf	___flmul@a+1
  1496  0FC7  0845               	movf	obtener_decimal_2@a,w
  1497  0FC8  00A4               	movwf	___flmul@a
  1498  0FC9  3042               	movlw	66
  1499  0FCA  00A3               	movwf	___flmul@b+3
  1500  0FCB  30C8               	movlw	200
  1501  0FCC  00A2               	movwf	___flmul@b+2
  1502  0FCD  3000               	movlw	0
  1503  0FCE  00A1               	movwf	___flmul@b+1
  1504  0FCF  3000               	movlw	0
  1505  0FD0  00A0               	movwf	___flmul@b
  1506  0FD1  120A  118A  2492  120A  158A  	fcall	___flmul
  1507  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0FD8  0823               	movf	?___flmul+3,w
  1510  0FD9  00BD               	movwf	___fltol@f1+3
  1511  0FDA  0822               	movf	?___flmul+2,w
  1512  0FDB  00BC               	movwf	___fltol@f1+2
  1513  0FDC  0821               	movf	?___flmul+1,w
  1514  0FDD  00BB               	movwf	___fltol@f1+1
  1515  0FDE  0820               	movf	?___flmul,w
  1516  0FDF  00BA               	movwf	___fltol@f1
  1517  0FE0  120A  118A  217E  120A  158A  	fcall	___fltol
  1518  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0FE7  083B               	movf	?___fltol+1,w
  1521  0FE8  00CA               	movwf	obtener_decimal_2@temporal+1
  1522  0FE9  083A               	movf	?___fltol,w
  1523  0FEA  00C9               	movwf	obtener_decimal_2@temporal
  1524  0FEB                     l1839:	
  1525                           
  1526                           ;Main_master.c: 142:     temporal = temporal%10;
  1527  0FEB  300A               	movlw	10
  1528  0FEC  00F0               	movwf	___lwmod@divisor
  1529  0FED  3000               	movlw	0
  1530  0FEE  00F1               	movwf	___lwmod@divisor+1
  1531  0FEF  084A               	movf	obtener_decimal_2@temporal+1,w
  1532  0FF0  00F3               	movwf	___lwmod@dividend+1
  1533  0FF1  0849               	movf	obtener_decimal_2@temporal,w
  1534  0FF2  00F2               	movwf	___lwmod@dividend
  1535  0FF3  120A  158A  2708  120A  158A  	fcall	___lwmod
  1536  0FF8  0871               	movf	?___lwmod+1,w
  1537  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0FFB  00CA               	movwf	obtener_decimal_2@temporal+1
  1540  0FFC  0870               	movf	?___lwmod,w
  1541  0FFD  00C9               	movwf	obtener_decimal_2@temporal
  1542  0FFE                     l1841:	
  1543                           
  1544                           ;Main_master.c: 143:     return temporal;
  1545  0FFE  0849               	movf	obtener_decimal_2@temporal,w
  1546  0FFF                     l115:	
  1547  0FFF  0008               	return
  1548  1000                     __end_of_obtener_decimal_2:	
  1549                           
  1550                           	psect	text3
  1551  0F7E                     __ptext3:	
  1552 ;; *************** function _obtener_decimal_1 *****************
  1553 ;; Defined at:
  1554 ;;		line 133 in file "Main_master.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  a               4   37[BANK0 ] float 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  temporal        2   41[BANK0 ] unsigned int 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      unsigned char 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       4       0       0       0
  1569 ;;      Locals:         0       2       0       0       0
  1570 ;;      Temps:          0       0       0       0       0
  1571 ;;      Totals:         0       6       0       0       0
  1572 ;;Total ram usage:        6 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    2
  1575 ;; This function calls:
  1576 ;;		___flmul
  1577 ;;		___fltol
  1578 ;;		___lwmod
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _obtener_decimal_1
  1586  0F7E                     _obtener_decimal_1:	
  1587  0F7E                     l1829:	
  1588                           ;incstack = 0
  1589                           ; Regs used in _obtener_decimal_1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1590                           
  1591                           
  1592                           ;Main_master.c: 134:     uint16_t temporal;;Main_master.c: 135:     temporal = (a*10);
  1593  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0F80  0848               	movf	obtener_decimal_1@a+3,w
  1596  0F81  00A7               	movwf	___flmul@a+3
  1597  0F82  0847               	movf	obtener_decimal_1@a+2,w
  1598  0F83  00A6               	movwf	___flmul@a+2
  1599  0F84  0846               	movf	obtener_decimal_1@a+1,w
  1600  0F85  00A5               	movwf	___flmul@a+1
  1601  0F86  0845               	movf	obtener_decimal_1@a,w
  1602  0F87  00A4               	movwf	___flmul@a
  1603  0F88  3041               	movlw	65
  1604  0F89  00A3               	movwf	___flmul@b+3
  1605  0F8A  3020               	movlw	32
  1606  0F8B  00A2               	movwf	___flmul@b+2
  1607  0F8C  3000               	movlw	0
  1608  0F8D  00A1               	movwf	___flmul@b+1
  1609  0F8E  3000               	movlw	0
  1610  0F8F  00A0               	movwf	___flmul@b
  1611  0F90  120A  118A  2492  120A  158A  	fcall	___flmul
  1612  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0F97  0823               	movf	?___flmul+3,w
  1615  0F98  00BD               	movwf	___fltol@f1+3
  1616  0F99  0822               	movf	?___flmul+2,w
  1617  0F9A  00BC               	movwf	___fltol@f1+2
  1618  0F9B  0821               	movf	?___flmul+1,w
  1619  0F9C  00BB               	movwf	___fltol@f1+1
  1620  0F9D  0820               	movf	?___flmul,w
  1621  0F9E  00BA               	movwf	___fltol@f1
  1622  0F9F  120A  118A  217E  120A  158A  	fcall	___fltol
  1623  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1625  0FA6  083B               	movf	?___fltol+1,w
  1626  0FA7  00CA               	movwf	obtener_decimal_1@temporal+1
  1627  0FA8  083A               	movf	?___fltol,w
  1628  0FA9  00C9               	movwf	obtener_decimal_1@temporal
  1629  0FAA                     l1831:	
  1630                           
  1631                           ;Main_master.c: 136:     temporal = temporal%10;
  1632  0FAA  300A               	movlw	10
  1633  0FAB  00F0               	movwf	___lwmod@divisor
  1634  0FAC  3000               	movlw	0
  1635  0FAD  00F1               	movwf	___lwmod@divisor+1
  1636  0FAE  084A               	movf	obtener_decimal_1@temporal+1,w
  1637  0FAF  00F3               	movwf	___lwmod@dividend+1
  1638  0FB0  0849               	movf	obtener_decimal_1@temporal,w
  1639  0FB1  00F2               	movwf	___lwmod@dividend
  1640  0FB2  120A  158A  2708  120A  158A  	fcall	___lwmod
  1641  0FB7  0871               	movf	?___lwmod+1,w
  1642  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0FBA  00CA               	movwf	obtener_decimal_1@temporal+1
  1645  0FBB  0870               	movf	?___lwmod,w
  1646  0FBC  00C9               	movwf	obtener_decimal_1@temporal
  1647  0FBD                     l1833:	
  1648                           
  1649                           ;Main_master.c: 137:     return temporal;
  1650  0FBD  0849               	movf	obtener_decimal_1@temporal,w
  1651  0FBE                     l112:	
  1652  0FBE  0008               	return
  1653  0FBF                     __end_of_obtener_decimal_1:	
  1654                           
  1655                           	psect	text4
  1656  0F08                     __ptext4:	
  1657 ;; *************** function ___lwmod *****************
  1658 ;; Defined at:
  1659 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  divisor         2    0[COMMON] unsigned int 
  1662 ;;  dividend        2    2[COMMON] unsigned int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  counter         1    5[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    0[COMMON] unsigned int 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         4       0       0       0       0
  1675 ;;      Locals:         1       0       0       0       0
  1676 ;;      Temps:          1       0       0       0       0
  1677 ;;      Totals:         6       0       0       0       0
  1678 ;;Total ram usage:        6 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_obtener_decimal_1
  1684 ;;		_obtener_decimal_2
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function ___lwmod
  1690  0F08                     ___lwmod:	
  1691  0F08                     l1587:	
  1692                           ;incstack = 0
  1693                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1694                           
  1695  0F08  0870               	movf	___lwmod@divisor,w
  1696  0F09  0471               	iorwf	___lwmod@divisor+1,w
  1697  0F0A  1903               	btfsc	3,2
  1698  0F0B  2F0D               	goto	u1451
  1699  0F0C  2F0E               	goto	u1450
  1700  0F0D                     u1451:	
  1701  0F0D  2F3D               	goto	l1605
  1702  0F0E                     u1450:	
  1703  0F0E                     l1589:	
  1704  0F0E  01F5               	clrf	___lwmod@counter
  1705  0F0F  0AF5               	incf	___lwmod@counter,f
  1706  0F10  2F1C               	goto	l1595
  1707  0F11                     l1591:	
  1708  0F11  3001               	movlw	1
  1709  0F12                     u1465:	
  1710  0F12  1003               	clrc
  1711  0F13  0DF0               	rlf	___lwmod@divisor,f
  1712  0F14  0DF1               	rlf	___lwmod@divisor+1,f
  1713  0F15  3EFF               	addlw	-1
  1714  0F16  1D03               	skipz
  1715  0F17  2F12               	goto	u1465
  1716  0F18                     l1593:	
  1717  0F18  3001               	movlw	1
  1718  0F19  00F4               	movwf	??___lwmod
  1719  0F1A  0874               	movf	??___lwmod,w
  1720  0F1B  07F5               	addwf	___lwmod@counter,f
  1721  0F1C                     l1595:	
  1722  0F1C  1FF1               	btfss	___lwmod@divisor+1,7
  1723  0F1D  2F1F               	goto	u1471
  1724  0F1E  2F20               	goto	u1470
  1725  0F1F                     u1471:	
  1726  0F1F  2F11               	goto	l1591
  1727  0F20                     u1470:	
  1728  0F20                     l1597:	
  1729  0F20  0871               	movf	___lwmod@divisor+1,w
  1730  0F21  0273               	subwf	___lwmod@dividend+1,w
  1731  0F22  1D03               	skipz
  1732  0F23  2F26               	goto	u1485
  1733  0F24  0870               	movf	___lwmod@divisor,w
  1734  0F25  0272               	subwf	___lwmod@dividend,w
  1735  0F26                     u1485:	
  1736  0F26  1C03               	skipc
  1737  0F27  2F29               	goto	u1481
  1738  0F28  2F2A               	goto	u1480
  1739  0F29                     u1481:	
  1740  0F29  2F30               	goto	l1601
  1741  0F2A                     u1480:	
  1742  0F2A                     l1599:	
  1743  0F2A  0870               	movf	___lwmod@divisor,w
  1744  0F2B  02F2               	subwf	___lwmod@dividend,f
  1745  0F2C  0871               	movf	___lwmod@divisor+1,w
  1746  0F2D  1C03               	skipc
  1747  0F2E  03F3               	decf	___lwmod@dividend+1,f
  1748  0F2F  02F3               	subwf	___lwmod@dividend+1,f
  1749  0F30                     l1601:	
  1750  0F30  3001               	movlw	1
  1751  0F31                     u1495:	
  1752  0F31  1003               	clrc
  1753  0F32  0CF1               	rrf	___lwmod@divisor+1,f
  1754  0F33  0CF0               	rrf	___lwmod@divisor,f
  1755  0F34  3EFF               	addlw	-1
  1756  0F35  1D03               	skipz
  1757  0F36  2F31               	goto	u1495
  1758  0F37                     l1603:	
  1759  0F37  3001               	movlw	1
  1760  0F38  02F5               	subwf	___lwmod@counter,f
  1761  0F39  1D03               	btfss	3,2
  1762  0F3A  2F3C               	goto	u1501
  1763  0F3B  2F3D               	goto	u1500
  1764  0F3C                     u1501:	
  1765  0F3C  2F20               	goto	l1597
  1766  0F3D                     u1500:	
  1767  0F3D                     l1605:	
  1768  0F3D  0873               	movf	___lwmod@dividend+1,w
  1769  0F3E  00F1               	movwf	?___lwmod+1
  1770  0F3F  0872               	movf	___lwmod@dividend,w
  1771  0F40  00F0               	movwf	?___lwmod
  1772  0F41                     l575:	
  1773  0F41  0008               	return
  1774  0F42                     __end_of___lwmod:	
  1775                           
  1776                           	psect	text5
  1777  017E                     __ptext5:	
  1778 ;; *************** function ___fltol *****************
  1779 ;; Defined at:
  1780 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  f1              4   26[BANK0 ] unsigned int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  exp1            1   36[BANK0 ] unsigned char 
  1785 ;;  sign1           1   35[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  4   26[BANK0 ] long 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       4       0       0       0
  1796 ;;      Locals:         0       2       0       0       0
  1797 ;;      Temps:          0       5       0       0       0
  1798 ;;      Totals:         0      11       0       0       0
  1799 ;;Total ram usage:       11 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;;		_obtener_decimal_1
  1806 ;;		_obtener_decimal_2
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function ___fltol
  1812  017E                     ___fltol:	
  1813  017E                     l1551:	
  1814                           ;incstack = 0
  1815                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1816                           
  1817  017E  1003               	clrc
  1818  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0181  0D3C               	rlf	___fltol@f1+2,w
  1821  0182  0D3D               	rlf	___fltol@f1+3,w
  1822  0183  00BE               	movwf	??___fltol
  1823  0184  083E               	movf	??___fltol,w
  1824  0185  00C4               	movwf	___fltol@exp1
  1825  0186  0844               	movf	___fltol@exp1,w
  1826  0187  1D03               	btfss	3,2
  1827  0188  298A               	goto	u1351
  1828  0189  298B               	goto	u1350
  1829  018A                     u1351:	
  1830  018A  2994               	goto	l1557
  1831  018B                     u1350:	
  1832  018B                     l1553:	
  1833  018B  3000               	movlw	0
  1834  018C  00BD               	movwf	?___fltol+3
  1835  018D  3000               	movlw	0
  1836  018E  00BC               	movwf	?___fltol+2
  1837  018F  3000               	movlw	0
  1838  0190  00BB               	movwf	?___fltol+1
  1839  0191  3000               	movlw	0
  1840  0192  00BA               	movwf	?___fltol
  1841  0193  29F9               	goto	l479
  1842  0194                     l1557:	
  1843  0194  083A               	movf	___fltol@f1,w
  1844  0195  00BE               	movwf	??___fltol
  1845  0196  083B               	movf	___fltol@f1+1,w
  1846  0197  00BF               	movwf	??___fltol+1
  1847  0198  083C               	movf	___fltol@f1+2,w
  1848  0199  00C0               	movwf	??___fltol+2
  1849  019A  083D               	movf	___fltol@f1+3,w
  1850  019B  00C1               	movwf	??___fltol+3
  1851  019C  301F               	movlw	31
  1852  019D                     u1365:	
  1853  019D  1003               	clrc
  1854  019E  0CC1               	rrf	??___fltol+3,f
  1855  019F  0CC0               	rrf	??___fltol+2,f
  1856  01A0  0CBF               	rrf	??___fltol+1,f
  1857  01A1  0CBE               	rrf	??___fltol,f
  1858  01A2                     u1360:	
  1859  01A2  3EFF               	addlw	-1
  1860  01A3  1D03               	skipz
  1861  01A4  299D               	goto	u1365
  1862  01A5  083E               	movf	??___fltol,w
  1863  01A6  00C2               	movwf	??___fltol+4
  1864  01A7  0842               	movf	??___fltol+4,w
  1865  01A8  00C3               	movwf	___fltol@sign1
  1866  01A9                     l1559:	
  1867  01A9  17BC               	bsf	___fltol@f1+2,7
  1868  01AA                     l1561:	
  1869  01AA  30FF               	movlw	255
  1870  01AB  05BA               	andwf	___fltol@f1,f
  1871  01AC  30FF               	movlw	255
  1872  01AD  05BB               	andwf	___fltol@f1+1,f
  1873  01AE  30FF               	movlw	255
  1874  01AF  05BC               	andwf	___fltol@f1+2,f
  1875  01B0  3000               	movlw	0
  1876  01B1  05BD               	andwf	___fltol@f1+3,f
  1877  01B2                     l1563:	
  1878  01B2  3096               	movlw	150
  1879  01B3  02C4               	subwf	___fltol@exp1,f
  1880  01B4                     l1565:	
  1881  01B4  1FC4               	btfss	___fltol@exp1,7
  1882  01B5  29B7               	goto	u1371
  1883  01B6  29B8               	goto	u1370
  1884  01B7                     u1371:	
  1885  01B7  29D2               	goto	l1575
  1886  01B8                     u1370:	
  1887  01B8                     l1567:	
  1888  01B8  0844               	movf	___fltol@exp1,w
  1889  01B9  3A80               	xorlw	128
  1890  01BA  3E97               	addlw	151
  1891  01BB  1803               	skipnc
  1892  01BC  29BE               	goto	u1381
  1893  01BD  29BF               	goto	u1380
  1894  01BE                     u1381:	
  1895  01BE  29C0               	goto	l1573
  1896  01BF                     u1380:	
  1897  01BF  298B               	goto	l1553
  1898  01C0                     l1573:	
  1899  01C0  3001               	movlw	1
  1900  01C1                     u1395:	
  1901  01C1  1003               	clrc
  1902  01C2  0CBD               	rrf	___fltol@f1+3,f
  1903  01C3  0CBC               	rrf	___fltol@f1+2,f
  1904  01C4  0CBB               	rrf	___fltol@f1+1,f
  1905  01C5  0CBA               	rrf	___fltol@f1,f
  1906  01C6  3EFF               	addlw	-1
  1907  01C7  1D03               	skipz
  1908  01C8  29C1               	goto	u1395
  1909  01C9  3001               	movlw	1
  1910  01CA  00BE               	movwf	??___fltol
  1911  01CB  083E               	movf	??___fltol,w
  1912  01CC  07C4               	addwf	___fltol@exp1,f
  1913  01CD  1D03               	btfss	3,2
  1914  01CE  29D0               	goto	u1401
  1915  01CF  29D1               	goto	u1400
  1916  01D0                     u1401:	
  1917  01D0  29C0               	goto	l1573
  1918  01D1                     u1400:	
  1919  01D1  29E9               	goto	l1583
  1920  01D2                     l1575:	
  1921  01D2  3020               	movlw	32
  1922  01D3  0244               	subwf	___fltol@exp1,w
  1923  01D4  1C03               	skipc
  1924  01D5  29D7               	goto	u1411
  1925  01D6  29D8               	goto	u1410
  1926  01D7                     u1411:	
  1927  01D7  29E4               	goto	l486
  1928  01D8                     u1410:	
  1929  01D8  298B               	goto	l1553
  1930  01D9                     l1581:	
  1931  01D9  3001               	movlw	1
  1932  01DA  00BE               	movwf	??___fltol
  1933  01DB                     u1425:	
  1934  01DB  1003               	clrc
  1935  01DC  0DBA               	rlf	___fltol@f1,f
  1936  01DD  0DBB               	rlf	___fltol@f1+1,f
  1937  01DE  0DBC               	rlf	___fltol@f1+2,f
  1938  01DF  0DBD               	rlf	___fltol@f1+3,f
  1939  01E0  0BBE               	decfsz	??___fltol,f
  1940  01E1  29DB               	goto	u1425
  1941  01E2  3001               	movlw	1
  1942  01E3  02C4               	subwf	___fltol@exp1,f
  1943  01E4                     l486:	
  1944  01E4  0844               	movf	___fltol@exp1,w
  1945  01E5  1D03               	btfss	3,2
  1946  01E6  29E8               	goto	u1431
  1947  01E7  29E9               	goto	u1430
  1948  01E8                     u1431:	
  1949  01E8  29D9               	goto	l1581
  1950  01E9                     u1430:	
  1951  01E9                     l1583:	
  1952  01E9  0843               	movf	___fltol@sign1,w
  1953  01EA  1903               	btfsc	3,2
  1954  01EB  29ED               	goto	u1441
  1955  01EC  29EE               	goto	u1440
  1956  01ED                     u1441:	
  1957  01ED  29F9               	goto	l489
  1958  01EE                     u1440:	
  1959  01EE                     l1585:	
  1960  01EE  09BA               	comf	___fltol@f1,f
  1961  01EF  09BB               	comf	___fltol@f1+1,f
  1962  01F0  09BC               	comf	___fltol@f1+2,f
  1963  01F1  09BD               	comf	___fltol@f1+3,f
  1964  01F2  0ABA               	incf	___fltol@f1,f
  1965  01F3  1903               	skipnz
  1966  01F4  0ABB               	incf	___fltol@f1+1,f
  1967  01F5  1903               	skipnz
  1968  01F6  0ABC               	incf	___fltol@f1+2,f
  1969  01F7  1903               	skipnz
  1970  01F8  0ABD               	incf	___fltol@f1+3,f
  1971  01F9                     l489:	
  1972  01F9                     l479:	
  1973  01F9  0008               	return
  1974  01FA                     __end_of___fltol:	
  1975                           
  1976                           	psect	text6
  1977  0492                     __ptext6:	
  1978 ;; *************** function ___flmul *****************
  1979 ;; Defined at:
  1980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  b               4    0[BANK0 ] long 
  1983 ;;  a               4    4[BANK0 ] long 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  prod            4   20[BANK0 ] struct .
  1986 ;;  grs             4   14[BANK0 ] unsigned long 
  1987 ;;  temp            2   24[BANK0 ] struct .
  1988 ;;  bexp            1   19[BANK0 ] unsigned char 
  1989 ;;  aexp            1   18[BANK0 ] unsigned char 
  1990 ;;  sign            1   13[BANK0 ] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  4    0[BANK0 ] unsigned char 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       8       0       0       0
  2001 ;;      Locals:         0      13       0       0       0
  2002 ;;      Temps:          0       5       0       0       0
  2003 ;;      Totals:         0      26       0       0       0
  2004 ;;Total ram usage:       26 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    1
  2007 ;; This function calls:
  2008 ;;		__Umul8_16
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;;		_obtener_decimal_1
  2012 ;;		_obtener_decimal_2
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___flmul
  2018  0492                     ___flmul:	
  2019  0492                     l1609:	
  2020                           ;incstack = 0
  2021                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2022                           
  2023  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0494  0823               	movf	___flmul@b+3,w
  2026  0495  3980               	andlw	128
  2027  0496  00A8               	movwf	??___flmul
  2028  0497  0828               	movf	??___flmul,w
  2029  0498  00AD               	movwf	___flmul@sign
  2030  0499                     l1611:	
  2031  0499  0823               	movf	___flmul@b+3,w
  2032  049A  00A8               	movwf	??___flmul
  2033  049B  0728               	addwf	??___flmul,w
  2034  049C  00A9               	movwf	??___flmul+1
  2035  049D  0829               	movf	??___flmul+1,w
  2036  049E  00B3               	movwf	___flmul@bexp
  2037  049F                     l1613:	
  2038  049F  1FA2               	btfss	___flmul@b+2,7
  2039  04A0  2CA2               	goto	u1511
  2040  04A1  2CA3               	goto	u1510
  2041  04A2                     u1511:	
  2042  04A2  2CA4               	goto	l1617
  2043  04A3                     u1510:	
  2044  04A3                     l1615:	
  2045  04A3  1433               	bsf	___flmul@bexp,0
  2046  04A4                     l1617:	
  2047  04A4  0833               	movf	___flmul@bexp,w
  2048  04A5  1903               	btfsc	3,2
  2049  04A6  2CA8               	goto	u1521
  2050  04A7  2CA9               	goto	u1520
  2051  04A8                     u1521:	
  2052  04A8  2CB8               	goto	l1625
  2053  04A9                     u1520:	
  2054  04A9                     l1619:	
  2055  04A9  0A33               	incf	___flmul@bexp,w
  2056  04AA  1D03               	btfss	3,2
  2057  04AB  2CAD               	goto	u1531
  2058  04AC  2CAE               	goto	u1530
  2059  04AD                     u1531:	
  2060  04AD  2CB6               	goto	l1623
  2061  04AE                     u1530:	
  2062  04AE                     l1621:	
  2063  04AE  3000               	movlw	0
  2064  04AF  00A3               	movwf	___flmul@b+3
  2065  04B0  3000               	movlw	0
  2066  04B1  00A2               	movwf	___flmul@b+2
  2067  04B2  3000               	movlw	0
  2068  04B3  00A1               	movwf	___flmul@b+1
  2069  04B4  3000               	movlw	0
  2070  04B5  00A0               	movwf	___flmul@b
  2071  04B6                     l1623:	
  2072  04B6  17A2               	bsf	___flmul@b+2,7
  2073  04B7  2CC0               	goto	l1627
  2074  04B8                     l1625:	
  2075  04B8  3000               	movlw	0
  2076  04B9  00A3               	movwf	___flmul@b+3
  2077  04BA  3000               	movlw	0
  2078  04BB  00A2               	movwf	___flmul@b+2
  2079  04BC  3000               	movlw	0
  2080  04BD  00A1               	movwf	___flmul@b+1
  2081  04BE  3000               	movlw	0
  2082  04BF  00A0               	movwf	___flmul@b
  2083  04C0                     l1627:	
  2084  04C0  0827               	movf	___flmul@a+3,w
  2085  04C1  3980               	andlw	128
  2086  04C2  00A8               	movwf	??___flmul
  2087  04C3  0828               	movf	??___flmul,w
  2088  04C4  06AD               	xorwf	___flmul@sign,f
  2089  04C5                     l1629:	
  2090  04C5  0827               	movf	___flmul@a+3,w
  2091  04C6  00A8               	movwf	??___flmul
  2092  04C7  0728               	addwf	??___flmul,w
  2093  04C8  00A9               	movwf	??___flmul+1
  2094  04C9  0829               	movf	??___flmul+1,w
  2095  04CA  00B2               	movwf	___flmul@aexp
  2096  04CB                     l1631:	
  2097  04CB  1FA6               	btfss	___flmul@a+2,7
  2098  04CC  2CCE               	goto	u1541
  2099  04CD  2CCF               	goto	u1540
  2100  04CE                     u1541:	
  2101  04CE  2CD0               	goto	l1635
  2102  04CF                     u1540:	
  2103  04CF                     l1633:	
  2104  04CF  1432               	bsf	___flmul@aexp,0
  2105  04D0                     l1635:	
  2106  04D0  0832               	movf	___flmul@aexp,w
  2107  04D1  1903               	btfsc	3,2
  2108  04D2  2CD4               	goto	u1551
  2109  04D3  2CD5               	goto	u1550
  2110  04D4                     u1551:	
  2111  04D4  2CE4               	goto	l1643
  2112  04D5                     u1550:	
  2113  04D5                     l1637:	
  2114  04D5  0A32               	incf	___flmul@aexp,w
  2115  04D6  1D03               	btfss	3,2
  2116  04D7  2CD9               	goto	u1561
  2117  04D8  2CDA               	goto	u1560
  2118  04D9                     u1561:	
  2119  04D9  2CE2               	goto	l1641
  2120  04DA                     u1560:	
  2121  04DA                     l1639:	
  2122  04DA  3000               	movlw	0
  2123  04DB  00A7               	movwf	___flmul@a+3
  2124  04DC  3000               	movlw	0
  2125  04DD  00A6               	movwf	___flmul@a+2
  2126  04DE  3000               	movlw	0
  2127  04DF  00A5               	movwf	___flmul@a+1
  2128  04E0  3000               	movlw	0
  2129  04E1  00A4               	movwf	___flmul@a
  2130  04E2                     l1641:	
  2131  04E2  17A6               	bsf	___flmul@a+2,7
  2132  04E3  2CEC               	goto	l1645
  2133  04E4                     l1643:	
  2134  04E4  3000               	movlw	0
  2135  04E5  00A7               	movwf	___flmul@a+3
  2136  04E6  3000               	movlw	0
  2137  04E7  00A6               	movwf	___flmul@a+2
  2138  04E8  3000               	movlw	0
  2139  04E9  00A5               	movwf	___flmul@a+1
  2140  04EA  3000               	movlw	0
  2141  04EB  00A4               	movwf	___flmul@a
  2142  04EC                     l1645:	
  2143  04EC  0832               	movf	___flmul@aexp,w
  2144  04ED  1903               	btfsc	3,2
  2145  04EE  2CF0               	goto	u1571
  2146  04EF  2CF1               	goto	u1570
  2147  04F0                     u1571:	
  2148  04F0  2CF6               	goto	l1649
  2149  04F1                     u1570:	
  2150  04F1                     l1647:	
  2151  04F1  0833               	movf	___flmul@bexp,w
  2152  04F2  1D03               	btfss	3,2
  2153  04F3  2CF5               	goto	u1581
  2154  04F4  2CF6               	goto	u1580
  2155  04F5                     u1581:	
  2156  04F5  2CFF               	goto	l1653
  2157  04F6                     u1580:	
  2158  04F6                     l1649:	
  2159  04F6  3000               	movlw	0
  2160  04F7  00A3               	movwf	?___flmul+3
  2161  04F8  3000               	movlw	0
  2162  04F9  00A2               	movwf	?___flmul+2
  2163  04FA  3000               	movlw	0
  2164  04FB  00A1               	movwf	?___flmul+1
  2165  04FC  3000               	movlw	0
  2166  04FD  00A0               	movwf	?___flmul
  2167  04FE  2FF2               	goto	l682
  2168  04FF                     l1653:	
  2169  04FF  0820               	movf	___flmul@b,w
  2170  0500  00A8               	movwf	??___flmul
  2171  0501  0828               	movf	??___flmul,w
  2172  0502  00F0               	movwf	__Umul8_16@multiplicand
  2173  0503  0826               	movf	___flmul@a+2,w
  2174  0504  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2175  0509  0871               	movf	?__Umul8_16+1,w
  2176  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2177  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2178  050C  00B9               	movwf	___flmul@temp+1
  2179  050D  0870               	movf	?__Umul8_16,w
  2180  050E  00B8               	movwf	___flmul@temp
  2181  050F                     l1655:	
  2182  050F  0838               	movf	___flmul@temp,w
  2183  0510  00A8               	movwf	??___flmul
  2184  0511  01A9               	clrf	??___flmul+1
  2185  0512  01AA               	clrf	??___flmul+2
  2186  0513  01AB               	clrf	??___flmul+3
  2187  0514  082B               	movf	??___flmul+3,w
  2188  0515  00B1               	movwf	___flmul@grs+3
  2189  0516  082A               	movf	??___flmul+2,w
  2190  0517  00B0               	movwf	___flmul@grs+2
  2191  0518  0829               	movf	??___flmul+1,w
  2192  0519  00AF               	movwf	___flmul@grs+1
  2193  051A  0828               	movf	??___flmul,w
  2194  051B  00AE               	movwf	___flmul@grs
  2195  051C                     l1657:	
  2196  051C  0839               	movf	___flmul@temp+1,w
  2197  051D  00A8               	movwf	??___flmul
  2198  051E  01A9               	clrf	??___flmul+1
  2199  051F  01AA               	clrf	??___flmul+2
  2200  0520  01AB               	clrf	??___flmul+3
  2201  0521  082B               	movf	??___flmul+3,w
  2202  0522  00B7               	movwf	___flmul@prod+3
  2203  0523  082A               	movf	??___flmul+2,w
  2204  0524  00B6               	movwf	___flmul@prod+2
  2205  0525  0829               	movf	??___flmul+1,w
  2206  0526  00B5               	movwf	___flmul@prod+1
  2207  0527  0828               	movf	??___flmul,w
  2208  0528  00B4               	movwf	___flmul@prod
  2209  0529  0821               	movf	___flmul@b+1,w
  2210  052A  00A8               	movwf	??___flmul
  2211  052B  0828               	movf	??___flmul,w
  2212  052C  00F0               	movwf	__Umul8_16@multiplicand
  2213  052D  0825               	movf	___flmul@a+1,w
  2214  052E  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2215  0533  0871               	movf	?__Umul8_16+1,w
  2216  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0536  00B9               	movwf	___flmul@temp+1
  2219  0537  0870               	movf	?__Umul8_16,w
  2220  0538  00B8               	movwf	___flmul@temp
  2221  0539                     l1659:	
  2222  0539  0838               	movf	___flmul@temp,w
  2223  053A  00A8               	movwf	??___flmul
  2224  053B  01A9               	clrf	??___flmul+1
  2225  053C  01AA               	clrf	??___flmul+2
  2226  053D  01AB               	clrf	??___flmul+3
  2227  053E  0828               	movf	??___flmul,w
  2228  053F  07AE               	addwf	___flmul@grs,f
  2229  0540  0829               	movf	??___flmul+1,w
  2230  0541  1103               	clrz
  2231  0542  1803               	skipnc
  2232  0543  3E01               	addlw	1
  2233  0544  1903               	skipnz
  2234  0545  2D47               	goto	u1591
  2235  0546  07AF               	addwf	___flmul@grs+1,f
  2236  0547                     u1591:	
  2237  0547  082A               	movf	??___flmul+2,w
  2238  0548  1103               	clrz
  2239  0549  1803               	skipnc
  2240  054A  3E01               	addlw	1
  2241  054B  1903               	skipnz
  2242  054C  2D4E               	goto	u1592
  2243  054D  07B0               	addwf	___flmul@grs+2,f
  2244  054E                     u1592:	
  2245  054E  082B               	movf	??___flmul+3,w
  2246  054F  1103               	clrz
  2247  0550  1803               	skipnc
  2248  0551  3E01               	addlw	1
  2249  0552  1903               	skipnz
  2250  0553  2D55               	goto	u1593
  2251  0554  07B1               	addwf	___flmul@grs+3,f
  2252  0555                     u1593:	
  2253  0555                     l1661:	
  2254  0555  0839               	movf	___flmul@temp+1,w
  2255  0556  00A8               	movwf	??___flmul
  2256  0557  01A9               	clrf	??___flmul+1
  2257  0558  01AA               	clrf	??___flmul+2
  2258  0559  01AB               	clrf	??___flmul+3
  2259  055A  0828               	movf	??___flmul,w
  2260  055B  07B4               	addwf	___flmul@prod,f
  2261  055C  0829               	movf	??___flmul+1,w
  2262  055D  1103               	clrz
  2263  055E  1803               	skipnc
  2264  055F  3E01               	addlw	1
  2265  0560  1903               	skipnz
  2266  0561  2D63               	goto	u1601
  2267  0562  07B5               	addwf	___flmul@prod+1,f
  2268  0563                     u1601:	
  2269  0563  082A               	movf	??___flmul+2,w
  2270  0564  1103               	clrz
  2271  0565  1803               	skipnc
  2272  0566  3E01               	addlw	1
  2273  0567  1903               	skipnz
  2274  0568  2D6A               	goto	u1602
  2275  0569  07B6               	addwf	___flmul@prod+2,f
  2276  056A                     u1602:	
  2277  056A  082B               	movf	??___flmul+3,w
  2278  056B  1103               	clrz
  2279  056C  1803               	skipnc
  2280  056D  3E01               	addlw	1
  2281  056E  1903               	skipnz
  2282  056F  2D71               	goto	u1603
  2283  0570  07B7               	addwf	___flmul@prod+3,f
  2284  0571                     u1603:	
  2285  0571  0822               	movf	___flmul@b+2,w
  2286  0572  00A8               	movwf	??___flmul
  2287  0573  0828               	movf	??___flmul,w
  2288  0574  00F0               	movwf	__Umul8_16@multiplicand
  2289  0575  0824               	movf	___flmul@a,w
  2290  0576  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2291  057B  0871               	movf	?__Umul8_16+1,w
  2292  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2293  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2294  057E  00B9               	movwf	___flmul@temp+1
  2295  057F  0870               	movf	?__Umul8_16,w
  2296  0580  00B8               	movwf	___flmul@temp
  2297  0581                     l1663:	
  2298  0581  0838               	movf	___flmul@temp,w
  2299  0582  00A8               	movwf	??___flmul
  2300  0583  01A9               	clrf	??___flmul+1
  2301  0584  01AA               	clrf	??___flmul+2
  2302  0585  01AB               	clrf	??___flmul+3
  2303  0586  0828               	movf	??___flmul,w
  2304  0587  07AE               	addwf	___flmul@grs,f
  2305  0588  0829               	movf	??___flmul+1,w
  2306  0589  1103               	clrz
  2307  058A  1803               	skipnc
  2308  058B  3E01               	addlw	1
  2309  058C  1903               	skipnz
  2310  058D  2D8F               	goto	u1611
  2311  058E  07AF               	addwf	___flmul@grs+1,f
  2312  058F                     u1611:	
  2313  058F  082A               	movf	??___flmul+2,w
  2314  0590  1103               	clrz
  2315  0591  1803               	skipnc
  2316  0592  3E01               	addlw	1
  2317  0593  1903               	skipnz
  2318  0594  2D96               	goto	u1612
  2319  0595  07B0               	addwf	___flmul@grs+2,f
  2320  0596                     u1612:	
  2321  0596  082B               	movf	??___flmul+3,w
  2322  0597  1103               	clrz
  2323  0598  1803               	skipnc
  2324  0599  3E01               	addlw	1
  2325  059A  1903               	skipnz
  2326  059B  2D9D               	goto	u1613
  2327  059C  07B1               	addwf	___flmul@grs+3,f
  2328  059D                     u1613:	
  2329  059D                     l1665:	
  2330  059D  0839               	movf	___flmul@temp+1,w
  2331  059E  00A8               	movwf	??___flmul
  2332  059F  01A9               	clrf	??___flmul+1
  2333  05A0  01AA               	clrf	??___flmul+2
  2334  05A1  01AB               	clrf	??___flmul+3
  2335  05A2  0828               	movf	??___flmul,w
  2336  05A3  07B4               	addwf	___flmul@prod,f
  2337  05A4  0829               	movf	??___flmul+1,w
  2338  05A5  1103               	clrz
  2339  05A6  1803               	skipnc
  2340  05A7  3E01               	addlw	1
  2341  05A8  1903               	skipnz
  2342  05A9  2DAB               	goto	u1621
  2343  05AA  07B5               	addwf	___flmul@prod+1,f
  2344  05AB                     u1621:	
  2345  05AB  082A               	movf	??___flmul+2,w
  2346  05AC  1103               	clrz
  2347  05AD  1803               	skipnc
  2348  05AE  3E01               	addlw	1
  2349  05AF  1903               	skipnz
  2350  05B0  2DB2               	goto	u1622
  2351  05B1  07B6               	addwf	___flmul@prod+2,f
  2352  05B2                     u1622:	
  2353  05B2  082B               	movf	??___flmul+3,w
  2354  05B3  1103               	clrz
  2355  05B4  1803               	skipnc
  2356  05B5  3E01               	addlw	1
  2357  05B6  1903               	skipnz
  2358  05B7  2DB9               	goto	u1623
  2359  05B8  07B7               	addwf	___flmul@prod+3,f
  2360  05B9                     u1623:	
  2361  05B9                     l1667:	
  2362  05B9  3008               	movlw	8
  2363  05BA  00A8               	movwf	??___flmul
  2364  05BB                     u1635:	
  2365  05BB  1003               	clrc
  2366  05BC  0DAE               	rlf	___flmul@grs,f
  2367  05BD  0DAF               	rlf	___flmul@grs+1,f
  2368  05BE  0DB0               	rlf	___flmul@grs+2,f
  2369  05BF  0DB1               	rlf	___flmul@grs+3,f
  2370  05C0  0BA8               	decfsz	??___flmul,f
  2371  05C1  2DBB               	goto	u1635
  2372  05C2                     l1669:	
  2373  05C2  0821               	movf	___flmul@b+1,w
  2374  05C3  00A8               	movwf	??___flmul
  2375  05C4  0828               	movf	??___flmul,w
  2376  05C5  00F0               	movwf	__Umul8_16@multiplicand
  2377  05C6  0824               	movf	___flmul@a,w
  2378  05C7  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2379  05CC  0871               	movf	?__Umul8_16+1,w
  2380  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2381  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2382  05CF  00B9               	movwf	___flmul@temp+1
  2383  05D0  0870               	movf	?__Umul8_16,w
  2384  05D1  00B8               	movwf	___flmul@temp
  2385  05D2                     l1671:	
  2386  05D2  0838               	movf	___flmul@temp,w
  2387  05D3  00A8               	movwf	??___flmul
  2388  05D4  0839               	movf	___flmul@temp+1,w
  2389  05D5  00A9               	movwf	??___flmul+1
  2390  05D6  01AA               	clrf	??___flmul+2
  2391  05D7  01AB               	clrf	??___flmul+3
  2392  05D8  0828               	movf	??___flmul,w
  2393  05D9  07AE               	addwf	___flmul@grs,f
  2394  05DA  0829               	movf	??___flmul+1,w
  2395  05DB  1103               	clrz
  2396  05DC  1803               	skipnc
  2397  05DD  3E01               	addlw	1
  2398  05DE  1903               	skipnz
  2399  05DF  2DE1               	goto	u1641
  2400  05E0  07AF               	addwf	___flmul@grs+1,f
  2401  05E1                     u1641:	
  2402  05E1  082A               	movf	??___flmul+2,w
  2403  05E2  1103               	clrz
  2404  05E3  1803               	skipnc
  2405  05E4  3E01               	addlw	1
  2406  05E5  1903               	skipnz
  2407  05E6  2DE8               	goto	u1642
  2408  05E7  07B0               	addwf	___flmul@grs+2,f
  2409  05E8                     u1642:	
  2410  05E8  082B               	movf	??___flmul+3,w
  2411  05E9  1103               	clrz
  2412  05EA  1803               	skipnc
  2413  05EB  3E01               	addlw	1
  2414  05EC  1903               	skipnz
  2415  05ED  2DEF               	goto	u1643
  2416  05EE  07B1               	addwf	___flmul@grs+3,f
  2417  05EF                     u1643:	
  2418  05EF                     l1673:	
  2419  05EF  0820               	movf	___flmul@b,w
  2420  05F0  00A8               	movwf	??___flmul
  2421  05F1  0828               	movf	??___flmul,w
  2422  05F2  00F0               	movwf	__Umul8_16@multiplicand
  2423  05F3  0825               	movf	___flmul@a+1,w
  2424  05F4  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2425  05F9  0871               	movf	?__Umul8_16+1,w
  2426  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2427  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2428  05FC  00B9               	movwf	___flmul@temp+1
  2429  05FD  0870               	movf	?__Umul8_16,w
  2430  05FE  00B8               	movwf	___flmul@temp
  2431  05FF                     l1675:	
  2432  05FF  0838               	movf	___flmul@temp,w
  2433  0600  00A8               	movwf	??___flmul
  2434  0601  0839               	movf	___flmul@temp+1,w
  2435  0602  00A9               	movwf	??___flmul+1
  2436  0603  01AA               	clrf	??___flmul+2
  2437  0604  01AB               	clrf	??___flmul+3
  2438  0605  0828               	movf	??___flmul,w
  2439  0606  07AE               	addwf	___flmul@grs,f
  2440  0607  0829               	movf	??___flmul+1,w
  2441  0608  1103               	clrz
  2442  0609  1803               	skipnc
  2443  060A  3E01               	addlw	1
  2444  060B  1903               	skipnz
  2445  060C  2E0E               	goto	u1651
  2446  060D  07AF               	addwf	___flmul@grs+1,f
  2447  060E                     u1651:	
  2448  060E  082A               	movf	??___flmul+2,w
  2449  060F  1103               	clrz
  2450  0610  1803               	skipnc
  2451  0611  3E01               	addlw	1
  2452  0612  1903               	skipnz
  2453  0613  2E15               	goto	u1652
  2454  0614  07B0               	addwf	___flmul@grs+2,f
  2455  0615                     u1652:	
  2456  0615  082B               	movf	??___flmul+3,w
  2457  0616  1103               	clrz
  2458  0617  1803               	skipnc
  2459  0618  3E01               	addlw	1
  2460  0619  1903               	skipnz
  2461  061A  2E1C               	goto	u1653
  2462  061B  07B1               	addwf	___flmul@grs+3,f
  2463  061C                     u1653:	
  2464  061C                     l1677:	
  2465  061C  3008               	movlw	8
  2466  061D  00A8               	movwf	??___flmul
  2467  061E                     u1665:	
  2468  061E  1003               	clrc
  2469  061F  0DAE               	rlf	___flmul@grs,f
  2470  0620  0DAF               	rlf	___flmul@grs+1,f
  2471  0621  0DB0               	rlf	___flmul@grs+2,f
  2472  0622  0DB1               	rlf	___flmul@grs+3,f
  2473  0623  0BA8               	decfsz	??___flmul,f
  2474  0624  2E1E               	goto	u1665
  2475  0625  0820               	movf	___flmul@b,w
  2476  0626  00A8               	movwf	??___flmul
  2477  0627  0828               	movf	??___flmul,w
  2478  0628  00F0               	movwf	__Umul8_16@multiplicand
  2479  0629  0824               	movf	___flmul@a,w
  2480  062A  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2481  062F  0871               	movf	?__Umul8_16+1,w
  2482  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0632  00B9               	movwf	___flmul@temp+1
  2485  0633  0870               	movf	?__Umul8_16,w
  2486  0634  00B8               	movwf	___flmul@temp
  2487  0635                     l1679:	
  2488  0635  0838               	movf	___flmul@temp,w
  2489  0636  00A8               	movwf	??___flmul
  2490  0637  0839               	movf	___flmul@temp+1,w
  2491  0638  00A9               	movwf	??___flmul+1
  2492  0639  01AA               	clrf	??___flmul+2
  2493  063A  01AB               	clrf	??___flmul+3
  2494  063B  0828               	movf	??___flmul,w
  2495  063C  07AE               	addwf	___flmul@grs,f
  2496  063D  0829               	movf	??___flmul+1,w
  2497  063E  1103               	clrz
  2498  063F  1803               	skipnc
  2499  0640  3E01               	addlw	1
  2500  0641  1903               	skipnz
  2501  0642  2E44               	goto	u1671
  2502  0643  07AF               	addwf	___flmul@grs+1,f
  2503  0644                     u1671:	
  2504  0644  082A               	movf	??___flmul+2,w
  2505  0645  1103               	clrz
  2506  0646  1803               	skipnc
  2507  0647  3E01               	addlw	1
  2508  0648  1903               	skipnz
  2509  0649  2E4B               	goto	u1672
  2510  064A  07B0               	addwf	___flmul@grs+2,f
  2511  064B                     u1672:	
  2512  064B  082B               	movf	??___flmul+3,w
  2513  064C  1103               	clrz
  2514  064D  1803               	skipnc
  2515  064E  3E01               	addlw	1
  2516  064F  1903               	skipnz
  2517  0650  2E52               	goto	u1673
  2518  0651  07B1               	addwf	___flmul@grs+3,f
  2519  0652                     u1673:	
  2520  0652                     l1681:	
  2521  0652  0821               	movf	___flmul@b+1,w
  2522  0653  00A8               	movwf	??___flmul
  2523  0654  0828               	movf	??___flmul,w
  2524  0655  00F0               	movwf	__Umul8_16@multiplicand
  2525  0656  0826               	movf	___flmul@a+2,w
  2526  0657  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2527  065C  0871               	movf	?__Umul8_16+1,w
  2528  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2529  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2530  065F  00B9               	movwf	___flmul@temp+1
  2531  0660  0870               	movf	?__Umul8_16,w
  2532  0661  00B8               	movwf	___flmul@temp
  2533  0662  0838               	movf	___flmul@temp,w
  2534  0663  00A8               	movwf	??___flmul
  2535  0664  0839               	movf	___flmul@temp+1,w
  2536  0665  00A9               	movwf	??___flmul+1
  2537  0666  01AA               	clrf	??___flmul+2
  2538  0667  01AB               	clrf	??___flmul+3
  2539  0668  0828               	movf	??___flmul,w
  2540  0669  07B4               	addwf	___flmul@prod,f
  2541  066A  0829               	movf	??___flmul+1,w
  2542  066B  1103               	clrz
  2543  066C  1803               	skipnc
  2544  066D  3E01               	addlw	1
  2545  066E  1903               	skipnz
  2546  066F  2E71               	goto	u1681
  2547  0670  07B5               	addwf	___flmul@prod+1,f
  2548  0671                     u1681:	
  2549  0671  082A               	movf	??___flmul+2,w
  2550  0672  1103               	clrz
  2551  0673  1803               	skipnc
  2552  0674  3E01               	addlw	1
  2553  0675  1903               	skipnz
  2554  0676  2E78               	goto	u1682
  2555  0677  07B6               	addwf	___flmul@prod+2,f
  2556  0678                     u1682:	
  2557  0678  082B               	movf	??___flmul+3,w
  2558  0679  1103               	clrz
  2559  067A  1803               	skipnc
  2560  067B  3E01               	addlw	1
  2561  067C  1903               	skipnz
  2562  067D  2E7F               	goto	u1683
  2563  067E  07B7               	addwf	___flmul@prod+3,f
  2564  067F                     u1683:	
  2565  067F                     l1683:	
  2566  067F  0822               	movf	___flmul@b+2,w
  2567  0680  00A8               	movwf	??___flmul
  2568  0681  0828               	movf	??___flmul,w
  2569  0682  00F0               	movwf	__Umul8_16@multiplicand
  2570  0683  0825               	movf	___flmul@a+1,w
  2571  0684  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2572  0689  0871               	movf	?__Umul8_16+1,w
  2573  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2574  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2575  068C  00B9               	movwf	___flmul@temp+1
  2576  068D  0870               	movf	?__Umul8_16,w
  2577  068E  00B8               	movwf	___flmul@temp
  2578  068F                     l1685:	
  2579  068F  0838               	movf	___flmul@temp,w
  2580  0690  00A8               	movwf	??___flmul
  2581  0691  0839               	movf	___flmul@temp+1,w
  2582  0692  00A9               	movwf	??___flmul+1
  2583  0693  01AA               	clrf	??___flmul+2
  2584  0694  01AB               	clrf	??___flmul+3
  2585  0695  0828               	movf	??___flmul,w
  2586  0696  07B4               	addwf	___flmul@prod,f
  2587  0697  0829               	movf	??___flmul+1,w
  2588  0698  1103               	clrz
  2589  0699  1803               	skipnc
  2590  069A  3E01               	addlw	1
  2591  069B  1903               	skipnz
  2592  069C  2E9E               	goto	u1691
  2593  069D  07B5               	addwf	___flmul@prod+1,f
  2594  069E                     u1691:	
  2595  069E  082A               	movf	??___flmul+2,w
  2596  069F  1103               	clrz
  2597  06A0  1803               	skipnc
  2598  06A1  3E01               	addlw	1
  2599  06A2  1903               	skipnz
  2600  06A3  2EA5               	goto	u1692
  2601  06A4  07B6               	addwf	___flmul@prod+2,f
  2602  06A5                     u1692:	
  2603  06A5  082B               	movf	??___flmul+3,w
  2604  06A6  1103               	clrz
  2605  06A7  1803               	skipnc
  2606  06A8  3E01               	addlw	1
  2607  06A9  1903               	skipnz
  2608  06AA  2EAC               	goto	u1693
  2609  06AB  07B7               	addwf	___flmul@prod+3,f
  2610  06AC                     u1693:	
  2611  06AC  0822               	movf	___flmul@b+2,w
  2612  06AD  00A8               	movwf	??___flmul
  2613  06AE  0828               	movf	??___flmul,w
  2614  06AF  00F0               	movwf	__Umul8_16@multiplicand
  2615  06B0  0826               	movf	___flmul@a+2,w
  2616  06B1  120A  158A  26B9  120A  118A  	fcall	__Umul8_16
  2617  06B6  0871               	movf	?__Umul8_16+1,w
  2618  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2619  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2620  06B9  00B9               	movwf	___flmul@temp+1
  2621  06BA  0870               	movf	?__Umul8_16,w
  2622  06BB  00B8               	movwf	___flmul@temp
  2623  06BC                     l1687:	
  2624  06BC  0838               	movf	___flmul@temp,w
  2625  06BD  00A8               	movwf	??___flmul
  2626  06BE  0839               	movf	___flmul@temp+1,w
  2627  06BF  00A9               	movwf	??___flmul+1
  2628  06C0  01AA               	clrf	??___flmul+2
  2629  06C1  01AB               	clrf	??___flmul+3
  2630  06C2  3008               	movlw	8
  2631  06C3                     u1705:	
  2632  06C3  1003               	clrc
  2633  06C4  0DA8               	rlf	??___flmul,f
  2634  06C5  0DA9               	rlf	??___flmul+1,f
  2635  06C6  0DAA               	rlf	??___flmul+2,f
  2636  06C7  0DAB               	rlf	??___flmul+3,f
  2637  06C8                     u1700:	
  2638  06C8  3EFF               	addlw	-1
  2639  06C9  1D03               	skipz
  2640  06CA  2EC3               	goto	u1705
  2641  06CB  0828               	movf	??___flmul,w
  2642  06CC  07B4               	addwf	___flmul@prod,f
  2643  06CD  0829               	movf	??___flmul+1,w
  2644  06CE  1103               	clrz
  2645  06CF  1803               	skipnc
  2646  06D0  3E01               	addlw	1
  2647  06D1  1903               	skipnz
  2648  06D2  2ED4               	goto	u1711
  2649  06D3  07B5               	addwf	___flmul@prod+1,f
  2650  06D4                     u1711:	
  2651  06D4  082A               	movf	??___flmul+2,w
  2652  06D5  1103               	clrz
  2653  06D6  1803               	skipnc
  2654  06D7  3E01               	addlw	1
  2655  06D8  1903               	skipnz
  2656  06D9  2EDB               	goto	u1712
  2657  06DA  07B6               	addwf	___flmul@prod+2,f
  2658  06DB                     u1712:	
  2659  06DB  082B               	movf	??___flmul+3,w
  2660  06DC  1103               	clrz
  2661  06DD  1803               	skipnc
  2662  06DE  3E01               	addlw	1
  2663  06DF  1903               	skipnz
  2664  06E0  2EE2               	goto	u1713
  2665  06E1  07B7               	addwf	___flmul@prod+3,f
  2666  06E2                     u1713:	
  2667  06E2                     l1689:	
  2668  06E2  082E               	movf	___flmul@grs,w
  2669  06E3  00A8               	movwf	??___flmul
  2670  06E4  082F               	movf	___flmul@grs+1,w
  2671  06E5  00A9               	movwf	??___flmul+1
  2672  06E6  0830               	movf	___flmul@grs+2,w
  2673  06E7  00AA               	movwf	??___flmul+2
  2674  06E8  0831               	movf	___flmul@grs+3,w
  2675  06E9  00AB               	movwf	??___flmul+3
  2676  06EA  3018               	movlw	24
  2677  06EB                     u1725:	
  2678  06EB  1003               	clrc
  2679  06EC  0CAB               	rrf	??___flmul+3,f
  2680  06ED  0CAA               	rrf	??___flmul+2,f
  2681  06EE  0CA9               	rrf	??___flmul+1,f
  2682  06EF  0CA8               	rrf	??___flmul,f
  2683  06F0                     u1720:	
  2684  06F0  3EFF               	addlw	-1
  2685  06F1  1D03               	skipz
  2686  06F2  2EEB               	goto	u1725
  2687  06F3  0828               	movf	??___flmul,w
  2688  06F4  07B4               	addwf	___flmul@prod,f
  2689  06F5  0829               	movf	??___flmul+1,w
  2690  06F6  1103               	clrz
  2691  06F7  1803               	skipnc
  2692  06F8  3E01               	addlw	1
  2693  06F9  1903               	skipnz
  2694  06FA  2EFC               	goto	u1731
  2695  06FB  07B5               	addwf	___flmul@prod+1,f
  2696  06FC                     u1731:	
  2697  06FC  082A               	movf	??___flmul+2,w
  2698  06FD  1103               	clrz
  2699  06FE  1803               	skipnc
  2700  06FF  3E01               	addlw	1
  2701  0700  1903               	skipnz
  2702  0701  2F03               	goto	u1732
  2703  0702  07B6               	addwf	___flmul@prod+2,f
  2704  0703                     u1732:	
  2705  0703  082B               	movf	??___flmul+3,w
  2706  0704  1103               	clrz
  2707  0705  1803               	skipnc
  2708  0706  3E01               	addlw	1
  2709  0707  1903               	skipnz
  2710  0708  2F0A               	goto	u1733
  2711  0709  07B7               	addwf	___flmul@prod+3,f
  2712  070A                     u1733:	
  2713  070A                     l1691:	
  2714  070A  3008               	movlw	8
  2715  070B  00A8               	movwf	??___flmul
  2716  070C                     u1745:	
  2717  070C  1003               	clrc
  2718  070D  0DAE               	rlf	___flmul@grs,f
  2719  070E  0DAF               	rlf	___flmul@grs+1,f
  2720  070F  0DB0               	rlf	___flmul@grs+2,f
  2721  0710  0DB1               	rlf	___flmul@grs+3,f
  2722  0711  0BA8               	decfsz	??___flmul,f
  2723  0712  2F0C               	goto	u1745
  2724  0713                     l1693:	
  2725  0713  0833               	movf	___flmul@bexp,w
  2726  0714  0732               	addwf	___flmul@aexp,w
  2727  0715  00A8               	movwf	??___flmul
  2728  0716  01A9               	clrf	??___flmul+1
  2729  0717  0DA9               	rlf	??___flmul+1,f
  2730  0718  0828               	movf	??___flmul,w
  2731  0719  3E82               	addlw	130
  2732  071A  00B8               	movwf	___flmul@temp
  2733  071B  0829               	movf	??___flmul+1,w
  2734  071C  1803               	skipnc
  2735  071D  3E01               	addlw	1
  2736  071E  3EFF               	addlw	255
  2737  071F  00B9               	movwf	___flmul@temp+1
  2738  0720  2F3E               	goto	l1705
  2739  0721                     l1695:	
  2740  0721  3001               	movlw	1
  2741  0722  00A8               	movwf	??___flmul
  2742  0723                     u1755:	
  2743  0723  1003               	clrc
  2744  0724  0DB4               	rlf	___flmul@prod,f
  2745  0725  0DB5               	rlf	___flmul@prod+1,f
  2746  0726  0DB6               	rlf	___flmul@prod+2,f
  2747  0727  0DB7               	rlf	___flmul@prod+3,f
  2748  0728  0BA8               	decfsz	??___flmul,f
  2749  0729  2F23               	goto	u1755
  2750  072A                     l1697:	
  2751  072A  1FB1               	btfss	___flmul@grs+3,7
  2752  072B  2F2D               	goto	u1761
  2753  072C  2F2E               	goto	u1760
  2754  072D                     u1761:	
  2755  072D  2F2F               	goto	l1701
  2756  072E                     u1760:	
  2757  072E                     l1699:	
  2758  072E  1434               	bsf	___flmul@prod,0
  2759  072F                     l1701:	
  2760  072F  3001               	movlw	1
  2761  0730  00A8               	movwf	??___flmul
  2762  0731                     u1775:	
  2763  0731  1003               	clrc
  2764  0732  0DAE               	rlf	___flmul@grs,f
  2765  0733  0DAF               	rlf	___flmul@grs+1,f
  2766  0734  0DB0               	rlf	___flmul@grs+2,f
  2767  0735  0DB1               	rlf	___flmul@grs+3,f
  2768  0736  0BA8               	decfsz	??___flmul,f
  2769  0737  2F31               	goto	u1775
  2770  0738                     l1703:	
  2771  0738  30FF               	movlw	255
  2772  0739  07B8               	addwf	___flmul@temp,f
  2773  073A  1803               	skipnc
  2774  073B  0AB9               	incf	___flmul@temp+1,f
  2775  073C  30FF               	movlw	255
  2776  073D  07B9               	addwf	___flmul@temp+1,f
  2777  073E                     l1705:	
  2778  073E  1FB6               	btfss	___flmul@prod+2,7
  2779  073F  2F41               	goto	u1781
  2780  0740  2F42               	goto	u1780
  2781  0741                     u1781:	
  2782  0741  2F21               	goto	l1695
  2783  0742                     u1780:	
  2784  0742                     l1707:	
  2785  0742  01B2               	clrf	___flmul@aexp
  2786  0743                     l1709:	
  2787  0743  1FB1               	btfss	___flmul@grs+3,7
  2788  0744  2F46               	goto	u1791
  2789  0745  2F47               	goto	u1790
  2790  0746                     u1791:	
  2791  0746  2F63               	goto	l1717
  2792  0747                     u1790:	
  2793  0747                     l1711:	
  2794  0747  30FF               	movlw	255
  2795  0748  052E               	andwf	___flmul@grs,w
  2796  0749  00A8               	movwf	??___flmul
  2797  074A  30FF               	movlw	255
  2798  074B  052F               	andwf	___flmul@grs+1,w
  2799  074C  00A9               	movwf	??___flmul+1
  2800  074D  30FF               	movlw	255
  2801  074E  0530               	andwf	___flmul@grs+2,w
  2802  074F  00AA               	movwf	??___flmul+2
  2803  0750  307F               	movlw	127
  2804  0751  0531               	andwf	___flmul@grs+3,w
  2805  0752  00AB               	movwf	??___flmul+3
  2806  0753  082B               	movf	??___flmul+3,w
  2807  0754  042A               	iorwf	??___flmul+2,w
  2808  0755  0429               	iorwf	??___flmul+1,w
  2809  0756  0428               	iorwf	??___flmul,w
  2810  0757  1903               	skipnz
  2811  0758  2F5A               	goto	u1801
  2812  0759  2F5B               	goto	u1800
  2813  075A                     u1801:	
  2814  075A  2F5E               	goto	l688
  2815  075B                     u1800:	
  2816  075B                     l1713:	
  2817  075B  01B2               	clrf	___flmul@aexp
  2818  075C  0AB2               	incf	___flmul@aexp,f
  2819  075D  2F63               	goto	l1717
  2820  075E                     l688:	
  2821  075E  1C34               	btfss	___flmul@prod,0
  2822  075F  2F61               	goto	u1811
  2823  0760  2F62               	goto	u1810
  2824  0761                     u1811:	
  2825  0761  2F63               	goto	l1717
  2826  0762                     u1810:	
  2827  0762  2F5B               	goto	l1713
  2828  0763                     l1717:	
  2829  0763  0832               	movf	___flmul@aexp,w
  2830  0764  1903               	btfsc	3,2
  2831  0765  2F67               	goto	u1821
  2832  0766  2F68               	goto	u1820
  2833  0767                     u1821:	
  2834  0767  2F99               	goto	l1727
  2835  0768                     u1820:	
  2836  0768                     l1719:	
  2837  0768  3001               	movlw	1
  2838  0769  07B4               	addwf	___flmul@prod,f
  2839  076A  3000               	movlw	0
  2840  076B  1803               	skipnc
  2841  076C  3001               	movlw	1
  2842  076D  07B5               	addwf	___flmul@prod+1,f
  2843  076E  3000               	movlw	0
  2844  076F  1803               	skipnc
  2845  0770  3001               	movlw	1
  2846  0771  07B6               	addwf	___flmul@prod+2,f
  2847  0772  3000               	movlw	0
  2848  0773  1803               	skipnc
  2849  0774  3001               	movlw	1
  2850  0775  07B7               	addwf	___flmul@prod+3,f
  2851  0776                     l1721:	
  2852  0776  1C37               	btfss	___flmul@prod+3,0
  2853  0777  2F79               	goto	u1831
  2854  0778  2F7A               	goto	u1830
  2855  0779                     u1831:	
  2856  0779  2F99               	goto	l1727
  2857  077A                     u1830:	
  2858  077A                     l1723:	
  2859  077A  0834               	movf	___flmul@prod,w
  2860  077B  00A8               	movwf	??___flmul
  2861  077C  0835               	movf	___flmul@prod+1,w
  2862  077D  00A9               	movwf	??___flmul+1
  2863  077E  0836               	movf	___flmul@prod+2,w
  2864  077F  00AA               	movwf	??___flmul+2
  2865  0780  0837               	movf	___flmul@prod+3,w
  2866  0781  00AB               	movwf	??___flmul+3
  2867  0782  3001               	movlw	1
  2868  0783  00AC               	movwf	??___flmul+4
  2869  0784                     u1845:	
  2870  0784  0D2B               	rlf	??___flmul+3,w
  2871  0785  0CAB               	rrf	??___flmul+3,f
  2872  0786  0CAA               	rrf	??___flmul+2,f
  2873  0787  0CA9               	rrf	??___flmul+1,f
  2874  0788  0CA8               	rrf	??___flmul,f
  2875  0789                     u1840:	
  2876  0789  0BAC               	decfsz	??___flmul+4,f
  2877  078A  2F84               	goto	u1845
  2878  078B  082B               	movf	??___flmul+3,w
  2879  078C  00B7               	movwf	___flmul@prod+3
  2880  078D  082A               	movf	??___flmul+2,w
  2881  078E  00B6               	movwf	___flmul@prod+2
  2882  078F  0829               	movf	??___flmul+1,w
  2883  0790  00B5               	movwf	___flmul@prod+1
  2884  0791  0828               	movf	??___flmul,w
  2885  0792  00B4               	movwf	___flmul@prod
  2886  0793                     l1725:	
  2887  0793  3001               	movlw	1
  2888  0794  07B8               	addwf	___flmul@temp,f
  2889  0795  1803               	skipnc
  2890  0796  0AB9               	incf	___flmul@temp+1,f
  2891  0797  3000               	movlw	0
  2892  0798  07B9               	addwf	___flmul@temp+1,f
  2893  0799                     l1727:	
  2894  0799  0839               	movf	___flmul@temp+1,w
  2895  079A  3A80               	xorlw	128
  2896  079B  00FF               	movwf	btemp+1
  2897  079C  3080               	movlw	128
  2898  079D  027F               	subwf	btemp+1,w
  2899  079E  1D03               	skipz
  2900  079F  2FA2               	goto	u1855
  2901  07A0  30FF               	movlw	255
  2902  07A1  0238               	subwf	___flmul@temp,w
  2903  07A2                     u1855:	
  2904  07A2  1C03               	skipc
  2905  07A3  2FA5               	goto	u1851
  2906  07A4  2FA6               	goto	u1850
  2907  07A5                     u1851:	
  2908  07A5  2FB1               	goto	l1731
  2909  07A6                     u1850:	
  2910  07A6                     l1729:	
  2911  07A6  307F               	movlw	127
  2912  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2913  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2914  07A9  00B7               	movwf	___flmul@prod+3
  2915  07AA  3080               	movlw	128
  2916  07AB  00B6               	movwf	___flmul@prod+2
  2917  07AC  3000               	movlw	0
  2918  07AD  00B5               	movwf	___flmul@prod+1
  2919  07AE  3000               	movlw	0
  2920  07AF  00B4               	movwf	___flmul@prod
  2921  07B0  2FE6               	goto	l694
  2922  07B1                     l1731:	
  2923  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  2924  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  2925  07B3  0839               	movf	___flmul@temp+1,w
  2926  07B4  3A80               	xorlw	128
  2927  07B5  00FF               	movwf	btemp+1
  2928  07B6  3080               	movlw	128
  2929  07B7  027F               	subwf	btemp+1,w
  2930  07B8  1D03               	skipz
  2931  07B9  2FBC               	goto	u1865
  2932  07BA  3001               	movlw	1
  2933  07BB  0238               	subwf	___flmul@temp,w
  2934  07BC                     u1865:	
  2935  07BC  1803               	skipnc
  2936  07BD  2FBF               	goto	u1861
  2937  07BE  2FC0               	goto	u1860
  2938  07BF                     u1861:	
  2939  07BF  2FCC               	goto	l1737
  2940  07C0                     u1860:	
  2941  07C0                     l1733:	
  2942  07C0  3000               	movlw	0
  2943  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  2944  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  2945  07C3  00B7               	movwf	___flmul@prod+3
  2946  07C4  3000               	movlw	0
  2947  07C5  00B6               	movwf	___flmul@prod+2
  2948  07C6  3000               	movlw	0
  2949  07C7  00B5               	movwf	___flmul@prod+1
  2950  07C8  3000               	movlw	0
  2951  07C9  00B4               	movwf	___flmul@prod
  2952  07CA                     l1735:	
  2953  07CA  01AD               	clrf	___flmul@sign
  2954  07CB  2FE6               	goto	l694
  2955  07CC                     l1737:	
  2956  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2957  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2958  07CE  0838               	movf	___flmul@temp,w
  2959  07CF  00A8               	movwf	??___flmul
  2960  07D0  0828               	movf	??___flmul,w
  2961  07D1  00B3               	movwf	___flmul@bexp
  2962  07D2  30FF               	movlw	255
  2963  07D3  05B4               	andwf	___flmul@prod,f
  2964  07D4  30FF               	movlw	255
  2965  07D5  05B5               	andwf	___flmul@prod+1,f
  2966  07D6  307F               	movlw	127
  2967  07D7  05B6               	andwf	___flmul@prod+2,f
  2968  07D8  3000               	movlw	0
  2969  07D9  05B7               	andwf	___flmul@prod+3,f
  2970  07DA                     l1739:	
  2971  07DA  1C33               	btfss	___flmul@bexp,0
  2972  07DB  2FDD               	goto	u1871
  2973  07DC  2FDE               	goto	u1870
  2974  07DD                     u1871:	
  2975  07DD  2FDF               	goto	l1743
  2976  07DE                     u1870:	
  2977  07DE                     l1741:	
  2978  07DE  17B6               	bsf	___flmul@prod+2,7
  2979  07DF                     l1743:	
  2980  07DF  0833               	movf	___flmul@bexp,w
  2981  07E0  00A8               	movwf	??___flmul
  2982  07E1  1003               	clrc
  2983  07E2  0C28               	rrf	??___flmul,w
  2984  07E3  00A9               	movwf	??___flmul+1
  2985  07E4  0829               	movf	??___flmul+1,w
  2986  07E5  00B7               	movwf	___flmul@prod+3
  2987  07E6                     l694:	
  2988  07E6  082D               	movf	___flmul@sign,w
  2989  07E7  00A8               	movwf	??___flmul
  2990  07E8  0828               	movf	??___flmul,w
  2991  07E9  04B7               	iorwf	___flmul@prod+3,f
  2992  07EA                     l1745:	
  2993  07EA  0837               	movf	___flmul@prod+3,w
  2994  07EB  00A3               	movwf	?___flmul+3
  2995  07EC  0836               	movf	___flmul@prod+2,w
  2996  07ED  00A2               	movwf	?___flmul+2
  2997  07EE  0835               	movf	___flmul@prod+1,w
  2998  07EF  00A1               	movwf	?___flmul+1
  2999  07F0  0834               	movf	___flmul@prod,w
  3000  07F1  00A0               	movwf	?___flmul
  3001  07F2                     l682:	
  3002  07F2  0008               	return
  3003  07F3                     __end_of___flmul:	
  3004                           
  3005                           	psect	text7
  3006  0EB9                     __ptext7:	
  3007 ;; *************** function __Umul8_16 *****************
  3008 ;; Defined at:
  3009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  multiplier      1    wreg     unsigned char 
  3012 ;;  multiplicand    1    0[COMMON] unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  multiplier      1    8[COMMON] unsigned char 
  3015 ;;  word_mpld       2    6[COMMON] unsigned int 
  3016 ;;  product         2    4[COMMON] unsigned int 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  2    0[COMMON] unsigned int 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         2       0       0       0       0
  3027 ;;      Locals:         5       0       0       0       0
  3028 ;;      Temps:          2       0       0       0       0
  3029 ;;      Totals:         9       0       0       0       0
  3030 ;;Total ram usage:        9 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		___flmul
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function __Umul8_16
  3041  0EB9                     __Umul8_16:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3045                           ;__Umul8_16@multiplier stored from wreg
  3046  0EB9  00F8               	movwf	__Umul8_16@multiplier
  3047  0EBA                     l1409:	
  3048  0EBA  01F4               	clrf	__Umul8_16@product
  3049  0EBB  01F5               	clrf	__Umul8_16@product+1
  3050  0EBC                     l1411:	
  3051  0EBC  0870               	movf	__Umul8_16@multiplicand,w
  3052  0EBD  00F2               	movwf	??__Umul8_16
  3053  0EBE  01F3               	clrf	??__Umul8_16+1
  3054  0EBF  0872               	movf	??__Umul8_16,w
  3055  0EC0  00F6               	movwf	__Umul8_16@word_mpld
  3056  0EC1  0873               	movf	??__Umul8_16+1,w
  3057  0EC2  00F7               	movwf	__Umul8_16@word_mpld+1
  3058  0EC3                     l1413:	
  3059  0EC3  1C78               	btfss	__Umul8_16@multiplier,0
  3060  0EC4  2EC6               	goto	u1041
  3061  0EC5  2EC7               	goto	u1040
  3062  0EC6                     u1041:	
  3063  0EC6  2ECD               	goto	l739
  3064  0EC7                     u1040:	
  3065  0EC7                     l1415:	
  3066  0EC7  0876               	movf	__Umul8_16@word_mpld,w
  3067  0EC8  07F4               	addwf	__Umul8_16@product,f
  3068  0EC9  1803               	skipnc
  3069  0ECA  0AF5               	incf	__Umul8_16@product+1,f
  3070  0ECB  0877               	movf	__Umul8_16@word_mpld+1,w
  3071  0ECC  07F5               	addwf	__Umul8_16@product+1,f
  3072  0ECD                     l739:	
  3073  0ECD  3001               	movlw	1
  3074  0ECE                     u1055:	
  3075  0ECE  1003               	clrc
  3076  0ECF  0DF6               	rlf	__Umul8_16@word_mpld,f
  3077  0ED0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3078  0ED1  3EFF               	addlw	-1
  3079  0ED2  1D03               	skipz
  3080  0ED3  2ECE               	goto	u1055
  3081  0ED4  1003               	clrc
  3082  0ED5  0CF8               	rrf	__Umul8_16@multiplier,f
  3083  0ED6                     l1417:	
  3084  0ED6  0878               	movf	__Umul8_16@multiplier,w
  3085  0ED7  1D03               	btfss	3,2
  3086  0ED8  2EDA               	goto	u1061
  3087  0ED9  2EDB               	goto	u1060
  3088  0EDA                     u1061:	
  3089  0EDA  2EC3               	goto	l1413
  3090  0EDB                     u1060:	
  3091  0EDB                     l1419:	
  3092  0EDB  0875               	movf	__Umul8_16@product+1,w
  3093  0EDC  00F1               	movwf	?__Umul8_16+1
  3094  0EDD  0874               	movf	__Umul8_16@product,w
  3095  0EDE  00F0               	movwf	?__Umul8_16
  3096  0EDF                     l741:	
  3097  0EDF  0008               	return
  3098  0EE0                     __end_of__Umul8_16:	
  3099                           
  3100                           	psect	text8
  3101  0EE0                     __ptext8:	
  3102 ;; *************** function _obtener_decenas *****************
  3103 ;; Defined at:
  3104 ;;		line 127 in file "Main_master.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  a               1    wreg     unsigned char 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  a               1    5[BANK0 ] unsigned char 
  3109 ;;  temporal        1    6[BANK0 ] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      unsigned char 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3119 ;;      Params:         0       0       0       0       0
  3120 ;;      Locals:         0       2       0       0       0
  3121 ;;      Temps:          0       3       0       0       0
  3122 ;;      Totals:         0       5       0       0       0
  3123 ;;Total ram usage:        5 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    1
  3126 ;; This function calls:
  3127 ;;		___awdiv
  3128 ;;		___awmod
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _obtener_decenas
  3136  0EE0                     _obtener_decenas:	
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _obtener_decenas: [wreg+status,2+status,0+pclath+cstack]
  3140                           ;obtener_decenas@a stored from wreg
  3141  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0EE2  00A5               	movwf	obtener_decenas@a
  3144  0EE3                     l1845:	
  3145                           
  3146                           ;Main_master.c: 128:     uint8_t temporal;;Main_master.c: 129:     temporal = (a/10)%10;
  3147  0EE3  300A               	movlw	10
  3148  0EE4  00F9               	movwf	___awmod@divisor
  3149  0EE5  3000               	movlw	0
  3150  0EE6  00FA               	movwf	___awmod@divisor+1
  3151  0EE7  300A               	movlw	10
  3152  0EE8  00F0               	movwf	___awdiv@divisor
  3153  0EE9  3000               	movlw	0
  3154  0EEA  00F1               	movwf	___awdiv@divisor+1
  3155  0EEB  0825               	movf	obtener_decenas@a,w
  3156  0EEC  00A2               	movwf	??_obtener_decenas
  3157  0EED  01A3               	clrf	??_obtener_decenas+1
  3158  0EEE  0822               	movf	??_obtener_decenas,w
  3159  0EEF  00F2               	movwf	___awdiv@dividend
  3160  0EF0  0823               	movf	??_obtener_decenas+1,w
  3161  0EF1  00F3               	movwf	___awdiv@dividend+1
  3162  0EF2  120A  118A  2117  120A  158A  	fcall	___awdiv
  3163  0EF7  0871               	movf	?___awdiv+1,w
  3164  0EF8  00FC               	movwf	___awmod@dividend+1
  3165  0EF9  0870               	movf	?___awdiv,w
  3166  0EFA  00FB               	movwf	___awmod@dividend
  3167  0EFB  120A  118A  2056  120A  158A  	fcall	___awmod
  3168  0F00  0879               	movf	?___awmod,w
  3169  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0F03  00A4               	movwf	??_obtener_decenas+2
  3172  0F04  0824               	movf	??_obtener_decenas+2,w
  3173  0F05  00A6               	movwf	obtener_decenas@temporal
  3174  0F06                     l1847:	
  3175                           
  3176                           ;Main_master.c: 130:     return temporal;
  3177  0F06  0826               	movf	obtener_decenas@temporal,w
  3178  0F07                     l109:	
  3179  0F07  0008               	return
  3180  0F08                     __end_of_obtener_decenas:	
  3181                           
  3182                           	psect	text9
  3183  0056                     __ptext9:	
  3184 ;; *************** function ___awmod *****************
  3185 ;; Defined at:
  3186 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  divisor         2    9[COMMON] int 
  3189 ;;  dividend        2   11[COMMON] int 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  sign            1    1[BANK0 ] unsigned char 
  3192 ;;  counter         1    0[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2    9[COMMON] int 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         4       0       0       0       0
  3203 ;;      Locals:         0       2       0       0       0
  3204 ;;      Temps:          1       0       0       0       0
  3205 ;;      Totals:         5       2       0       0       0
  3206 ;;Total ram usage:        7 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_obtener_unidades
  3212 ;;		_obtener_decenas
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function ___awmod
  3218  0056                     ___awmod:	
  3219  0056                     l1513:	
  3220                           ;incstack = 0
  3221                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3222                           
  3223  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0058  01A1               	clrf	___awmod@sign
  3226  0059                     l1515:	
  3227  0059  1FFC               	btfss	___awmod@dividend+1,7
  3228  005A  285C               	goto	u1261
  3229  005B  285D               	goto	u1260
  3230  005C                     u1261:	
  3231  005C  2864               	goto	l1521
  3232  005D                     u1260:	
  3233  005D                     l1517:	
  3234  005D  09FB               	comf	___awmod@dividend,f
  3235  005E  09FC               	comf	___awmod@dividend+1,f
  3236  005F  0AFB               	incf	___awmod@dividend,f
  3237  0060  1903               	skipnz
  3238  0061  0AFC               	incf	___awmod@dividend+1,f
  3239  0062                     l1519:	
  3240  0062  01A1               	clrf	___awmod@sign
  3241  0063  0AA1               	incf	___awmod@sign,f
  3242  0064                     l1521:	
  3243  0064  1FFA               	btfss	___awmod@divisor+1,7
  3244  0065  2867               	goto	u1271
  3245  0066  2868               	goto	u1270
  3246  0067                     u1271:	
  3247  0067  286D               	goto	l1525
  3248  0068                     u1270:	
  3249  0068                     l1523:	
  3250  0068  09F9               	comf	___awmod@divisor,f
  3251  0069  09FA               	comf	___awmod@divisor+1,f
  3252  006A  0AF9               	incf	___awmod@divisor,f
  3253  006B  1903               	skipnz
  3254  006C  0AFA               	incf	___awmod@divisor+1,f
  3255  006D                     l1525:	
  3256  006D  0879               	movf	___awmod@divisor,w
  3257  006E  047A               	iorwf	___awmod@divisor+1,w
  3258  006F  1903               	btfsc	3,2
  3259  0070  2872               	goto	u1281
  3260  0071  2873               	goto	u1280
  3261  0072                     u1281:	
  3262  0072  28A2               	goto	l1543
  3263  0073                     u1280:	
  3264  0073                     l1527:	
  3265  0073  01A0               	clrf	___awmod@counter
  3266  0074  0AA0               	incf	___awmod@counter,f
  3267  0075  2881               	goto	l1533
  3268  0076                     l1529:	
  3269  0076  3001               	movlw	1
  3270  0077                     u1295:	
  3271  0077  1003               	clrc
  3272  0078  0DF9               	rlf	___awmod@divisor,f
  3273  0079  0DFA               	rlf	___awmod@divisor+1,f
  3274  007A  3EFF               	addlw	-1
  3275  007B  1D03               	skipz
  3276  007C  2877               	goto	u1295
  3277  007D                     l1531:	
  3278  007D  3001               	movlw	1
  3279  007E  00FD               	movwf	??___awmod
  3280  007F  087D               	movf	??___awmod,w
  3281  0080  07A0               	addwf	___awmod@counter,f
  3282  0081                     l1533:	
  3283  0081  1FFA               	btfss	___awmod@divisor+1,7
  3284  0082  2884               	goto	u1301
  3285  0083  2885               	goto	u1300
  3286  0084                     u1301:	
  3287  0084  2876               	goto	l1529
  3288  0085                     u1300:	
  3289  0085                     l1535:	
  3290  0085  087A               	movf	___awmod@divisor+1,w
  3291  0086  027C               	subwf	___awmod@dividend+1,w
  3292  0087  1D03               	skipz
  3293  0088  288B               	goto	u1315
  3294  0089  0879               	movf	___awmod@divisor,w
  3295  008A  027B               	subwf	___awmod@dividend,w
  3296  008B                     u1315:	
  3297  008B  1C03               	skipc
  3298  008C  288E               	goto	u1311
  3299  008D  288F               	goto	u1310
  3300  008E                     u1311:	
  3301  008E  2895               	goto	l1539
  3302  008F                     u1310:	
  3303  008F                     l1537:	
  3304  008F  0879               	movf	___awmod@divisor,w
  3305  0090  02FB               	subwf	___awmod@dividend,f
  3306  0091  087A               	movf	___awmod@divisor+1,w
  3307  0092  1C03               	skipc
  3308  0093  03FC               	decf	___awmod@dividend+1,f
  3309  0094  02FC               	subwf	___awmod@dividend+1,f
  3310  0095                     l1539:	
  3311  0095  3001               	movlw	1
  3312  0096                     u1325:	
  3313  0096  1003               	clrc
  3314  0097  0CFA               	rrf	___awmod@divisor+1,f
  3315  0098  0CF9               	rrf	___awmod@divisor,f
  3316  0099  3EFF               	addlw	-1
  3317  009A  1D03               	skipz
  3318  009B  2896               	goto	u1325
  3319  009C                     l1541:	
  3320  009C  3001               	movlw	1
  3321  009D  02A0               	subwf	___awmod@counter,f
  3322  009E  1D03               	btfss	3,2
  3323  009F  28A1               	goto	u1331
  3324  00A0  28A2               	goto	u1330
  3325  00A1                     u1331:	
  3326  00A1  2885               	goto	l1535
  3327  00A2                     u1330:	
  3328  00A2                     l1543:	
  3329  00A2  0821               	movf	___awmod@sign,w
  3330  00A3  1903               	btfsc	3,2
  3331  00A4  28A6               	goto	u1341
  3332  00A5  28A7               	goto	u1340
  3333  00A6                     u1341:	
  3334  00A6  28AC               	goto	l1547
  3335  00A7                     u1340:	
  3336  00A7                     l1545:	
  3337  00A7  09FB               	comf	___awmod@dividend,f
  3338  00A8  09FC               	comf	___awmod@dividend+1,f
  3339  00A9  0AFB               	incf	___awmod@dividend,f
  3340  00AA  1903               	skipnz
  3341  00AB  0AFC               	incf	___awmod@dividend+1,f
  3342  00AC                     l1547:	
  3343  00AC  087C               	movf	___awmod@dividend+1,w
  3344  00AD  00FA               	movwf	?___awmod+1
  3345  00AE  087B               	movf	___awmod@dividend,w
  3346  00AF  00F9               	movwf	?___awmod
  3347  00B0                     l459:	
  3348  00B0  0008               	return
  3349  00B1                     __end_of___awmod:	
  3350                           
  3351                           	psect	text10
  3352  0117                     __ptext10:	
  3353 ;; *************** function ___awdiv *****************
  3354 ;; Defined at:
  3355 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  divisor         2    0[COMMON] int 
  3358 ;;  dividend        2    2[COMMON] int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  quotient        2    7[COMMON] int 
  3361 ;;  sign            1    6[COMMON] unsigned char 
  3362 ;;  counter         1    5[COMMON] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2    0[COMMON] int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         4       0       0       0       0
  3373 ;;      Locals:         4       0       0       0       0
  3374 ;;      Temps:          1       0       0       0       0
  3375 ;;      Totals:         9       0       0       0       0
  3376 ;;Total ram usage:        9 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_obtener_decenas
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function ___awdiv
  3387  0117                     ___awdiv:	
  3388  0117                     l1469:	
  3389                           ;incstack = 0
  3390                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3391                           
  3392  0117  01F6               	clrf	___awdiv@sign
  3393  0118                     l1471:	
  3394  0118  1FF1               	btfss	___awdiv@divisor+1,7
  3395  0119  291B               	goto	u1161
  3396  011A  291C               	goto	u1160
  3397  011B                     u1161:	
  3398  011B  2923               	goto	l1477
  3399  011C                     u1160:	
  3400  011C                     l1473:	
  3401  011C  09F0               	comf	___awdiv@divisor,f
  3402  011D  09F1               	comf	___awdiv@divisor+1,f
  3403  011E  0AF0               	incf	___awdiv@divisor,f
  3404  011F  1903               	skipnz
  3405  0120  0AF1               	incf	___awdiv@divisor+1,f
  3406  0121                     l1475:	
  3407  0121  01F6               	clrf	___awdiv@sign
  3408  0122  0AF6               	incf	___awdiv@sign,f
  3409  0123                     l1477:	
  3410  0123  1FF3               	btfss	___awdiv@dividend+1,7
  3411  0124  2926               	goto	u1171
  3412  0125  2927               	goto	u1170
  3413  0126                     u1171:	
  3414  0126  2930               	goto	l1483
  3415  0127                     u1170:	
  3416  0127                     l1479:	
  3417  0127  09F2               	comf	___awdiv@dividend,f
  3418  0128  09F3               	comf	___awdiv@dividend+1,f
  3419  0129  0AF2               	incf	___awdiv@dividend,f
  3420  012A  1903               	skipnz
  3421  012B  0AF3               	incf	___awdiv@dividend+1,f
  3422  012C                     l1481:	
  3423  012C  3001               	movlw	1
  3424  012D  00F4               	movwf	??___awdiv
  3425  012E  0874               	movf	??___awdiv,w
  3426  012F  06F6               	xorwf	___awdiv@sign,f
  3427  0130                     l1483:	
  3428  0130  01F7               	clrf	___awdiv@quotient
  3429  0131  01F8               	clrf	___awdiv@quotient+1
  3430  0132                     l1485:	
  3431  0132  0870               	movf	___awdiv@divisor,w
  3432  0133  0471               	iorwf	___awdiv@divisor+1,w
  3433  0134  1903               	btfsc	3,2
  3434  0135  2937               	goto	u1181
  3435  0136  2938               	goto	u1180
  3436  0137                     u1181:	
  3437  0137  296F               	goto	l1505
  3438  0138                     u1180:	
  3439  0138                     l1487:	
  3440  0138  01F5               	clrf	___awdiv@counter
  3441  0139  0AF5               	incf	___awdiv@counter,f
  3442  013A  2946               	goto	l1493
  3443  013B                     l1489:	
  3444  013B  3001               	movlw	1
  3445  013C                     u1195:	
  3446  013C  1003               	clrc
  3447  013D  0DF0               	rlf	___awdiv@divisor,f
  3448  013E  0DF1               	rlf	___awdiv@divisor+1,f
  3449  013F  3EFF               	addlw	-1
  3450  0140  1D03               	skipz
  3451  0141  293C               	goto	u1195
  3452  0142                     l1491:	
  3453  0142  3001               	movlw	1
  3454  0143  00F4               	movwf	??___awdiv
  3455  0144  0874               	movf	??___awdiv,w
  3456  0145  07F5               	addwf	___awdiv@counter,f
  3457  0146                     l1493:	
  3458  0146  1FF1               	btfss	___awdiv@divisor+1,7
  3459  0147  2949               	goto	u1201
  3460  0148  294A               	goto	u1200
  3461  0149                     u1201:	
  3462  0149  293B               	goto	l1489
  3463  014A                     u1200:	
  3464  014A                     l1495:	
  3465  014A  3001               	movlw	1
  3466  014B                     u1215:	
  3467  014B  1003               	clrc
  3468  014C  0DF7               	rlf	___awdiv@quotient,f
  3469  014D  0DF8               	rlf	___awdiv@quotient+1,f
  3470  014E  3EFF               	addlw	-1
  3471  014F  1D03               	skipz
  3472  0150  294B               	goto	u1215
  3473  0151  0871               	movf	___awdiv@divisor+1,w
  3474  0152  0273               	subwf	___awdiv@dividend+1,w
  3475  0153  1D03               	skipz
  3476  0154  2957               	goto	u1225
  3477  0155  0870               	movf	___awdiv@divisor,w
  3478  0156  0272               	subwf	___awdiv@dividend,w
  3479  0157                     u1225:	
  3480  0157  1C03               	skipc
  3481  0158  295A               	goto	u1221
  3482  0159  295B               	goto	u1220
  3483  015A                     u1221:	
  3484  015A  2962               	goto	l1501
  3485  015B                     u1220:	
  3486  015B                     l1497:	
  3487  015B  0870               	movf	___awdiv@divisor,w
  3488  015C  02F2               	subwf	___awdiv@dividend,f
  3489  015D  0871               	movf	___awdiv@divisor+1,w
  3490  015E  1C03               	skipc
  3491  015F  03F3               	decf	___awdiv@dividend+1,f
  3492  0160  02F3               	subwf	___awdiv@dividend+1,f
  3493  0161                     l1499:	
  3494  0161  1477               	bsf	___awdiv@quotient,0
  3495  0162                     l1501:	
  3496  0162  3001               	movlw	1
  3497  0163                     u1235:	
  3498  0163  1003               	clrc
  3499  0164  0CF1               	rrf	___awdiv@divisor+1,f
  3500  0165  0CF0               	rrf	___awdiv@divisor,f
  3501  0166  3EFF               	addlw	-1
  3502  0167  1D03               	skipz
  3503  0168  2963               	goto	u1235
  3504  0169                     l1503:	
  3505  0169  3001               	movlw	1
  3506  016A  02F5               	subwf	___awdiv@counter,f
  3507  016B  1D03               	btfss	3,2
  3508  016C  296E               	goto	u1241
  3509  016D  296F               	goto	u1240
  3510  016E                     u1241:	
  3511  016E  294A               	goto	l1495
  3512  016F                     u1240:	
  3513  016F                     l1505:	
  3514  016F  0876               	movf	___awdiv@sign,w
  3515  0170  1903               	btfsc	3,2
  3516  0171  2973               	goto	u1251
  3517  0172  2974               	goto	u1250
  3518  0173                     u1251:	
  3519  0173  2979               	goto	l1509
  3520  0174                     u1250:	
  3521  0174                     l1507:	
  3522  0174  09F7               	comf	___awdiv@quotient,f
  3523  0175  09F8               	comf	___awdiv@quotient+1,f
  3524  0176  0AF7               	incf	___awdiv@quotient,f
  3525  0177  1903               	skipnz
  3526  0178  0AF8               	incf	___awdiv@quotient+1,f
  3527  0179                     l1509:	
  3528  0179  0878               	movf	___awdiv@quotient+1,w
  3529  017A  00F1               	movwf	?___awdiv+1
  3530  017B  0877               	movf	___awdiv@quotient,w
  3531  017C  00F0               	movwf	?___awdiv
  3532  017D                     l446:	
  3533  017D  0008               	return
  3534  017E                     __end_of___awdiv:	
  3535                           
  3536                           	psect	text11
  3537  0DE2                     __ptext11:	
  3538 ;; *************** function _convertir_a_ascii *****************
  3539 ;; Defined at:
  3540 ;;		line 146 in file "Main_master.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  a               1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  a               1    1[COMMON] unsigned char 
  3545 ;;  temporal        1    2[COMMON] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      unsigned char 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       0       0       0       0
  3556 ;;      Locals:         2       0       0       0       0
  3557 ;;      Temps:          1       0       0       0       0
  3558 ;;      Totals:         3       0       0       0       0
  3559 ;;Total ram usage:        3 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _convertir_a_ascii
  3570  0DE2                     _convertir_a_ascii:	
  3571                           
  3572                           ;incstack = 0
  3573                           ; Regs used in _convertir_a_ascii: [wreg+status,2+status,0]
  3574                           ;convertir_a_ascii@a stored from wreg
  3575  0DE2  00F1               	movwf	convertir_a_ascii@a
  3576  0DE3                     l1851:	
  3577                           
  3578                           ;Main_master.c: 147:     char temporal;;Main_master.c: 148:     temporal = a+ 0x30;
  3579  0DE3  0871               	movf	convertir_a_ascii@a,w
  3580  0DE4  3E30               	addlw	48
  3581  0DE5  00F0               	movwf	??_convertir_a_ascii
  3582  0DE6  0870               	movf	??_convertir_a_ascii,w
  3583  0DE7  00F2               	movwf	convertir_a_ascii@temporal
  3584  0DE8                     l1853:	
  3585                           
  3586                           ;Main_master.c: 149:     return temporal;
  3587  0DE8  0872               	movf	convertir_a_ascii@temporal,w
  3588  0DE9                     l118:	
  3589  0DE9  0008               	return
  3590  0DEA                     __end_of_convertir_a_ascii:	
  3591                           
  3592                           	psect	text12
  3593  01FA                     __ptext12:	
  3594 ;; *************** function ___xxtofl *****************
  3595 ;; Defined at:
  3596 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  sign            1    wreg     unsigned char 
  3599 ;;  val             4    0[COMMON] long 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  sign            1    8[COMMON] unsigned char 
  3602 ;;  arg             4   10[COMMON] unsigned long 
  3603 ;;  exp             1    9[COMMON] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  4    0[COMMON] unsigned char 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         4       0       0       0       0
  3614 ;;      Locals:         6       0       0       0       0
  3615 ;;      Temps:          4       0       0       0       0
  3616 ;;      Totals:        14       0       0       0       0
  3617 ;;Total ram usage:       14 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function ___xxtofl
  3628  01FA                     ___xxtofl:	
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3632                           ;___xxtofl@sign stored from wreg
  3633  01FA  00F8               	movwf	___xxtofl@sign
  3634  01FB                     l1857:	
  3635  01FB  0878               	movf	___xxtofl@sign,w
  3636  01FC  1903               	btfsc	3,2
  3637  01FD  29FF               	goto	u1921
  3638  01FE  2A00               	goto	u1920
  3639  01FF                     u1921:	
  3640  01FF  2A14               	goto	l1863
  3641  0200                     u1920:	
  3642  0200                     l1859:	
  3643  0200  1FF3               	btfss	___xxtofl@val+3,7
  3644  0201  2A03               	goto	u1931
  3645  0202  2A04               	goto	u1930
  3646  0203                     u1931:	
  3647  0203  2A14               	goto	l1863
  3648  0204                     u1930:	
  3649  0204                     l1861:	
  3650  0204  0970               	comf	___xxtofl@val,w
  3651  0205  00FA               	movwf	___xxtofl@arg
  3652  0206  0971               	comf	___xxtofl@val+1,w
  3653  0207  00FB               	movwf	___xxtofl@arg+1
  3654  0208  0972               	comf	___xxtofl@val+2,w
  3655  0209  00FC               	movwf	___xxtofl@arg+2
  3656  020A  0973               	comf	___xxtofl@val+3,w
  3657  020B  00FD               	movwf	___xxtofl@arg+3
  3658  020C  0AFA               	incf	___xxtofl@arg,f
  3659  020D  1903               	skipnz
  3660  020E  0AFB               	incf	___xxtofl@arg+1,f
  3661  020F  1903               	skipnz
  3662  0210  0AFC               	incf	___xxtofl@arg+2,f
  3663  0211  1903               	skipnz
  3664  0212  0AFD               	incf	___xxtofl@arg+3,f
  3665  0213  2A1C               	goto	l720
  3666  0214                     l1863:	
  3667  0214  0873               	movf	___xxtofl@val+3,w
  3668  0215  00FD               	movwf	___xxtofl@arg+3
  3669  0216  0872               	movf	___xxtofl@val+2,w
  3670  0217  00FC               	movwf	___xxtofl@arg+2
  3671  0218  0871               	movf	___xxtofl@val+1,w
  3672  0219  00FB               	movwf	___xxtofl@arg+1
  3673  021A  0870               	movf	___xxtofl@val,w
  3674  021B  00FA               	movwf	___xxtofl@arg
  3675  021C                     l720:	
  3676  021C  0873               	movf	___xxtofl@val+3,w
  3677  021D  0472               	iorwf	___xxtofl@val+2,w
  3678  021E  0471               	iorwf	___xxtofl@val+1,w
  3679  021F  0470               	iorwf	___xxtofl@val,w
  3680  0220  1D03               	skipz
  3681  0221  2A23               	goto	u1941
  3682  0222  2A24               	goto	u1940
  3683  0223                     u1941:	
  3684  0223  2A2D               	goto	l1869
  3685  0224                     u1940:	
  3686  0224                     l1865:	
  3687  0224  3000               	movlw	0
  3688  0225  00F3               	movwf	?___xxtofl+3
  3689  0226  3000               	movlw	0
  3690  0227  00F2               	movwf	?___xxtofl+2
  3691  0228  3000               	movlw	0
  3692  0229  00F1               	movwf	?___xxtofl+1
  3693  022A  3000               	movlw	0
  3694  022B  00F0               	movwf	?___xxtofl
  3695  022C  2AB3               	goto	l722
  3696  022D                     l1869:	
  3697  022D  3096               	movlw	150
  3698  022E  00F4               	movwf	??___xxtofl
  3699  022F  0874               	movf	??___xxtofl,w
  3700  0230  00F9               	movwf	___xxtofl@exp
  3701  0231  2A3F               	goto	l1873
  3702  0232                     l1871:	
  3703  0232  3001               	movlw	1
  3704  0233  00F4               	movwf	??___xxtofl
  3705  0234  0874               	movf	??___xxtofl,w
  3706  0235  07F9               	addwf	___xxtofl@exp,f
  3707  0236  3001               	movlw	1
  3708  0237                     u1955:	
  3709  0237  1003               	clrc
  3710  0238  0CFD               	rrf	___xxtofl@arg+3,f
  3711  0239  0CFC               	rrf	___xxtofl@arg+2,f
  3712  023A  0CFB               	rrf	___xxtofl@arg+1,f
  3713  023B  0CFA               	rrf	___xxtofl@arg,f
  3714  023C  3EFF               	addlw	-1
  3715  023D  1D03               	skipz
  3716  023E  2A37               	goto	u1955
  3717  023F                     l1873:	
  3718  023F  30FE               	movlw	254
  3719  0240  057D               	andwf	___xxtofl@arg+3,w
  3720  0241  1D03               	btfss	3,2
  3721  0242  2A44               	goto	u1961
  3722  0243  2A45               	goto	u1960
  3723  0244                     u1961:	
  3724  0244  2A32               	goto	l1871
  3725  0245                     u1960:	
  3726  0245  2A61               	goto	l726
  3727  0246                     l1875:	
  3728  0246  3001               	movlw	1
  3729  0247  00F4               	movwf	??___xxtofl
  3730  0248  0874               	movf	??___xxtofl,w
  3731  0249  07F9               	addwf	___xxtofl@exp,f
  3732  024A                     l1877:	
  3733  024A  3001               	movlw	1
  3734  024B  07FA               	addwf	___xxtofl@arg,f
  3735  024C  3000               	movlw	0
  3736  024D  1803               	skipnc
  3737  024E  3001               	movlw	1
  3738  024F  07FB               	addwf	___xxtofl@arg+1,f
  3739  0250  3000               	movlw	0
  3740  0251  1803               	skipnc
  3741  0252  3001               	movlw	1
  3742  0253  07FC               	addwf	___xxtofl@arg+2,f
  3743  0254  3000               	movlw	0
  3744  0255  1803               	skipnc
  3745  0256  3001               	movlw	1
  3746  0257  07FD               	addwf	___xxtofl@arg+3,f
  3747  0258                     l1879:	
  3748  0258  3001               	movlw	1
  3749  0259                     u1975:	
  3750  0259  1003               	clrc
  3751  025A  0CFD               	rrf	___xxtofl@arg+3,f
  3752  025B  0CFC               	rrf	___xxtofl@arg+2,f
  3753  025C  0CFB               	rrf	___xxtofl@arg+1,f
  3754  025D  0CFA               	rrf	___xxtofl@arg,f
  3755  025E  3EFF               	addlw	-1
  3756  025F  1D03               	skipz
  3757  0260  2A59               	goto	u1975
  3758  0261                     l726:	
  3759  0261  30FF               	movlw	255
  3760  0262  057D               	andwf	___xxtofl@arg+3,w
  3761  0263  1D03               	btfss	3,2
  3762  0264  2A66               	goto	u1981
  3763  0265  2A67               	goto	u1980
  3764  0266                     u1981:	
  3765  0266  2A46               	goto	l1875
  3766  0267                     u1980:	
  3767  0267  2A73               	goto	l1883
  3768  0268                     l1881:	
  3769  0268  3001               	movlw	1
  3770  0269  02F9               	subwf	___xxtofl@exp,f
  3771  026A  3001               	movlw	1
  3772  026B  00F4               	movwf	??___xxtofl
  3773  026C                     u1995:	
  3774  026C  1003               	clrc
  3775  026D  0DFA               	rlf	___xxtofl@arg,f
  3776  026E  0DFB               	rlf	___xxtofl@arg+1,f
  3777  026F  0DFC               	rlf	___xxtofl@arg+2,f
  3778  0270  0DFD               	rlf	___xxtofl@arg+3,f
  3779  0271  0BF4               	decfsz	??___xxtofl,f
  3780  0272  2A6C               	goto	u1995
  3781  0273                     l1883:	
  3782  0273  1BFC               	btfsc	___xxtofl@arg+2,7
  3783  0274  2A76               	goto	u2001
  3784  0275  2A77               	goto	u2000
  3785  0276                     u2001:	
  3786  0276  2A7D               	goto	l733
  3787  0277                     u2000:	
  3788  0277                     l1885:	
  3789  0277  3002               	movlw	2
  3790  0278  0279               	subwf	___xxtofl@exp,w
  3791  0279  1803               	skipnc
  3792  027A  2A7C               	goto	u2011
  3793  027B  2A7D               	goto	u2010
  3794  027C                     u2011:	
  3795  027C  2A68               	goto	l1881
  3796  027D                     u2010:	
  3797  027D                     l733:	
  3798  027D  1879               	btfsc	___xxtofl@exp,0
  3799  027E  2A80               	goto	u2021
  3800  027F  2A81               	goto	u2020
  3801  0280                     u2021:	
  3802  0280  2A89               	goto	l734
  3803  0281                     u2020:	
  3804  0281                     l1887:	
  3805  0281  30FF               	movlw	255
  3806  0282  05FA               	andwf	___xxtofl@arg,f
  3807  0283  30FF               	movlw	255
  3808  0284  05FB               	andwf	___xxtofl@arg+1,f
  3809  0285  307F               	movlw	127
  3810  0286  05FC               	andwf	___xxtofl@arg+2,f
  3811  0287  30FF               	movlw	255
  3812  0288  05FD               	andwf	___xxtofl@arg+3,f
  3813  0289                     l734:	
  3814  0289  1003               	clrc
  3815  028A  0CF9               	rrf	___xxtofl@exp,f
  3816  028B                     l1889:	
  3817  028B  0879               	movf	___xxtofl@exp,w
  3818  028C  00F4               	movwf	??___xxtofl
  3819  028D  01F5               	clrf	??___xxtofl+1
  3820  028E  01F6               	clrf	??___xxtofl+2
  3821  028F  01F7               	clrf	??___xxtofl+3
  3822  0290  3018               	movlw	24
  3823  0291                     u2035:	
  3824  0291  1003               	clrc
  3825  0292  0DF4               	rlf	??___xxtofl,f
  3826  0293  0DF5               	rlf	??___xxtofl+1,f
  3827  0294  0DF6               	rlf	??___xxtofl+2,f
  3828  0295  0DF7               	rlf	??___xxtofl+3,f
  3829  0296                     u2030:	
  3830  0296  3EFF               	addlw	-1
  3831  0297  1D03               	skipz
  3832  0298  2A91               	goto	u2035
  3833  0299  0874               	movf	??___xxtofl,w
  3834  029A  04FA               	iorwf	___xxtofl@arg,f
  3835  029B  0875               	movf	??___xxtofl+1,w
  3836  029C  04FB               	iorwf	___xxtofl@arg+1,f
  3837  029D  0876               	movf	??___xxtofl+2,w
  3838  029E  04FC               	iorwf	___xxtofl@arg+2,f
  3839  029F  0877               	movf	??___xxtofl+3,w
  3840  02A0  04FD               	iorwf	___xxtofl@arg+3,f
  3841  02A1                     l1891:	
  3842  02A1  0878               	movf	___xxtofl@sign,w
  3843  02A2  1903               	btfsc	3,2
  3844  02A3  2AA5               	goto	u2041
  3845  02A4  2AA6               	goto	u2040
  3846  02A5                     u2041:	
  3847  02A5  2AAB               	goto	l1897
  3848  02A6                     u2040:	
  3849  02A6                     l1893:	
  3850  02A6  1FF3               	btfss	___xxtofl@val+3,7
  3851  02A7  2AA9               	goto	u2051
  3852  02A8  2AAA               	goto	u2050
  3853  02A9                     u2051:	
  3854  02A9  2AAB               	goto	l1897
  3855  02AA                     u2050:	
  3856  02AA                     l1895:	
  3857  02AA  17FD               	bsf	___xxtofl@arg+3,7
  3858  02AB                     l1897:	
  3859  02AB  087D               	movf	___xxtofl@arg+3,w
  3860  02AC  00F3               	movwf	?___xxtofl+3
  3861  02AD  087C               	movf	___xxtofl@arg+2,w
  3862  02AE  00F2               	movwf	?___xxtofl+2
  3863  02AF  087B               	movf	___xxtofl@arg+1,w
  3864  02B0  00F1               	movwf	?___xxtofl+1
  3865  02B1  087A               	movf	___xxtofl@arg,w
  3866  02B2  00F0               	movwf	?___xxtofl
  3867  02B3                     l722:	
  3868  02B3  0008               	return
  3869  02B4                     __end_of___xxtofl:	
  3870                           
  3871                           	psect	text13
  3872  0E04                     __ptext13:	
  3873 ;; *************** function _Write_I2C_Master *****************
  3874 ;; Defined at:
  3875 ;;		line 61 in file "I2C.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  a               2    0[COMMON] unsigned int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         2       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0
  3892 ;;      Totals:         2       0       0       0       0
  3893 ;;Total ram usage:        2 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    1
  3896 ;; This function calls:
  3897 ;;		_Wait_I2C_Master
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _Write_I2C_Master
  3905  0E04                     _Write_I2C_Master:	
  3906  0E04                     l1815:	
  3907                           ;incstack = 0
  3908                           ; Regs used in _Write_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  3909                           
  3910                           
  3911                           ;I2C.c: 62:     Wait_I2C_Master();
  3912  0E04  120A  158A  261B  120A  158A  	fcall	_Wait_I2C_Master
  3913  0E09                     l1817:	
  3914                           
  3915                           ;I2C.c: 63:     SSPBUF = a;
  3916  0E09  0870               	movf	Write_I2C_Master@a,w
  3917  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0E0C  0093               	movwf	19	;volatile
  3920  0E0D                     l202:	
  3921  0E0D  0008               	return
  3922  0E0E                     __end_of_Write_I2C_Master:	
  3923                           
  3924                           	psect	text14
  3925  0DFB                     __ptext14:	
  3926 ;; *************** function _Stop_I2C_Master *****************
  3927 ;; Defined at:
  3928 ;;		line 56 in file "I2C.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    1
  3949 ;; This function calls:
  3950 ;;		_Wait_I2C_Master
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _Stop_I2C_Master
  3958  0DFB                     _Stop_I2C_Master:	
  3959  0DFB                     l1819:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _Stop_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  3962                           
  3963                           
  3964                           ;I2C.c: 57:     Wait_I2C_Master();
  3965  0DFB  120A  158A  261B  120A  158A  	fcall	_Wait_I2C_Master
  3966  0E00                     l1821:	
  3967                           
  3968                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3969  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  3970  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  3971  0E02  1511               	bsf	17,2	;volatile
  3972  0E03                     l199:	
  3973  0E03  0008               	return
  3974  0E04                     __end_of_Stop_I2C_Master:	
  3975                           
  3976                           	psect	text15
  3977  0DF2                     __ptext15:	
  3978 ;; *************** function _Start_I2C_Master *****************
  3979 ;; Defined at:
  3980 ;;		line 46 in file "I2C.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    1
  4001 ;; This function calls:
  4002 ;;		_Wait_I2C_Master
  4003 ;; This function is called by:
  4004 ;;		_main
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _Start_I2C_Master
  4010  0DF2                     _Start_I2C_Master:	
  4011  0DF2                     l1811:	
  4012                           ;incstack = 0
  4013                           ; Regs used in _Start_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  4014                           
  4015                           
  4016                           ;I2C.c: 47:     Wait_I2C_Master();
  4017  0DF2  120A  158A  261B  120A  158A  	fcall	_Wait_I2C_Master
  4018  0DF7                     l1813:	
  4019                           
  4020                           ;I2C.c: 48:     SSPCON2bits.SEN = 1;
  4021  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0DF9  1411               	bsf	17,0	;volatile
  4024  0DFA                     l193:	
  4025  0DFA  0008               	return
  4026  0DFB                     __end_of_Start_I2C_Master:	
  4027                           
  4028                           	psect	text16
  4029  0E1B                     __ptext16:	
  4030 ;; *************** function _Wait_I2C_Master *****************
  4031 ;; Defined at:
  4032 ;;		line 42 in file "I2C.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_Start_I2C_Master
  4056 ;;		_Stop_I2C_Master
  4057 ;;		_Write_I2C_Master
  4058 ;;		_Restart_I2C
  4059 ;;		_I2C_Master_Read
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _Wait_I2C_Master
  4065  0E1B                     _Wait_I2C_Master:	
  4066  0E1B                     l1441:	
  4067                           ;incstack = 0
  4068                           ; Regs used in _Wait_I2C_Master: [wreg+status,2]
  4069                           
  4070  0E1B                     l187:	
  4071                           ;I2C.c: 43:     while ((SSPSTATbits.R_nW == 1) || (SSPCON2 & 0x1F));
  4072                           
  4073  0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  4074  0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  4075  0E1D  1914               	btfsc	20,2	;volatile
  4076  0E1E  2E20               	goto	u1071
  4077  0E1F  2E21               	goto	u1070
  4078  0E20                     u1071:	
  4079  0E20  2E1B               	goto	l187
  4080  0E21                     u1070:	
  4081  0E21                     l1443:	
  4082  0E21  0811               	movf	17,w	;volatile
  4083  0E22  391F               	andlw	31
  4084  0E23  1D03               	btfss	3,2
  4085  0E24  2E26               	goto	u1081
  4086  0E25  2E27               	goto	u1080
  4087  0E26                     u1081:	
  4088  0E26  2E1B               	goto	l187
  4089  0E27                     u1080:	
  4090  0E27                     l190:	
  4091  0E27  0008               	return
  4092  0E28                     __end_of_Wait_I2C_Master:	
  4093                           
  4094                           	psect	text17
  4095  0E94                     __ptext17:	
  4096 ;; *************** function _LCD_WRITE_STRING *****************
  4097 ;; Defined at:
  4098 ;;		line 70 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  a               1    wreg     PTR unsigned char 
  4101 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  a               1    5[COMMON] PTR unsigned char 
  4104 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  4105 ;;  i               2    3[COMMON] int 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4115 ;;      Params:         0       0       0       0       0
  4116 ;;      Locals:         3       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0
  4118 ;;      Totals:         3       0       0       0       0
  4119 ;;Total ram usage:        3 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    1
  4122 ;; This function calls:
  4123 ;;		_LCD_WRITE_CHAR
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _LCD_WRITE_STRING
  4131  0E94                     _LCD_WRITE_STRING:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4135                           ;LCD_WRITE_STRING@a stored from wreg
  4136  0E94  00F5               	movwf	LCD_WRITE_STRING@a
  4137  0E95                     l1803:	
  4138                           
  4139                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 71:     int i;;../Digital2_LabLCD/LCD_8bits_lib.c: 
      +                          72:     for(i=0; a[i]!='\0'; i++)
  4140  0E95  01F3               	clrf	LCD_WRITE_STRING@i
  4141  0E96  01F4               	clrf	LCD_WRITE_STRING@i+1
  4142  0E97  2EAB               	goto	l1809
  4143  0E98                     l1805:	
  4144                           
  4145                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 73:         LCD_WRITE_CHAR(a[i]);
  4146  0E98  0873               	movf	LCD_WRITE_STRING@i,w
  4147  0E99  0775               	addwf	LCD_WRITE_STRING@a,w
  4148  0E9A  0084               	movwf	4
  4149  0E9B  120A  158A  2000  120A  158A  	fcall	stringdir
  4150  0EA0  120A  158A  263E  120A  158A  	fcall	_LCD_WRITE_CHAR
  4151  0EA5                     l1807:	
  4152  0EA5  3001               	movlw	1
  4153  0EA6  07F3               	addwf	LCD_WRITE_STRING@i,f
  4154  0EA7  1803               	skipnc
  4155  0EA8  0AF4               	incf	LCD_WRITE_STRING@i+1,f
  4156  0EA9  3000               	movlw	0
  4157  0EAA  07F4               	addwf	LCD_WRITE_STRING@i+1,f
  4158  0EAB                     l1809:	
  4159  0EAB  0873               	movf	LCD_WRITE_STRING@i,w
  4160  0EAC  0775               	addwf	LCD_WRITE_STRING@a,w
  4161  0EAD  0084               	movwf	4
  4162  0EAE  120A  158A  2000  120A  158A  	fcall	stringdir
  4163  0EB3  3A00               	xorlw	0
  4164  0EB4  1D03               	skipz
  4165  0EB5  2EB7               	goto	u1911
  4166  0EB6  2EB8               	goto	u1910
  4167  0EB7                     u1911:	
  4168  0EB7  2E98               	goto	l1805
  4169  0EB8                     u1910:	
  4170  0EB8                     l148:	
  4171  0EB8  0008               	return
  4172  0EB9                     __end_of_LCD_WRITE_STRING:	
  4173                           
  4174                           	psect	text18
  4175  0E3E                     __ptext18:	
  4176 ;; *************** function _LCD_WRITE_CHAR *****************
  4177 ;; Defined at:
  4178 ;;		line 61 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  a               1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  a               1    2[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0
  4194 ;;      Temps:          2       0       0       0       0
  4195 ;;      Totals:         3       0       0       0       0
  4196 ;;Total ram usage:        3 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;;		_LCD_WRITE_STRING
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _LCD_WRITE_CHAR
  4208  0E3E                     _LCD_WRITE_CHAR:	
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
  4212                           ;LCD_WRITE_CHAR@a stored from wreg
  4213  0E3E  00F2               	movwf	LCD_WRITE_CHAR@a
  4214  0E3F                     l1423:	
  4215                           
  4216                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 62:     PORTDbits.RD5 = 1;
  4217  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0E41  1688               	bsf	8,5	;volatile
  4220  0E42                     l1425:	
  4221                           
  4222                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 63:     PORTB = a;
  4223  0E42  0872               	movf	LCD_WRITE_CHAR@a,w
  4224  0E43  0086               	movwf	6	;volatile
  4225  0E44                     l1427:	
  4226                           
  4227                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 64:     PORTDbits.RD7 = 1;
  4228  0E44  1788               	bsf	8,7	;volatile
  4229                           
  4230                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 65:     _delay((unsigned long)((40)*(4000000/400000
      +                          0.0)));
  4231  0E45  300D               	movlw	13
  4232  0E46  00F0               	movwf	??_LCD_WRITE_CHAR
  4233  0E47                     u2087:	
  4234  0E47  0BF0               	decfsz	??_LCD_WRITE_CHAR,f
  4235  0E48  2E47               	goto	u2087
  4236  0E49                     l1429:	
  4237                           
  4238                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 66:     PORTDbits.RD7 = 0;
  4239  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0E4B  1388               	bcf	8,7	;volatile
  4242                           
  4243                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 67:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  4244  0E4C  3007               	movlw	7
  4245  0E4D  00F1               	movwf	??_LCD_WRITE_CHAR+1
  4246  0E4E  307D               	movlw	125
  4247  0E4F  00F0               	movwf	??_LCD_WRITE_CHAR
  4248  0E50                     u2097:	
  4249  0E50  0BF0               	decfsz	??_LCD_WRITE_CHAR,f
  4250  0E51  2E50               	goto	u2097
  4251  0E52  0BF1               	decfsz	??_LCD_WRITE_CHAR+1,f
  4252  0E53  2E50               	goto	u2097
  4253  0E54                     l142:	
  4254  0E54  0008               	return
  4255  0E55                     __end_of_LCD_WRITE_CHAR:	
  4256                           
  4257                           	psect	text19
  4258  0E70                     __ptext19:	
  4259 ;; *************** function _LCD_SET_CURSOR *****************
  4260 ;; Defined at:
  4261 ;;		line 29 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  a               1    wreg     unsigned char 
  4264 ;;  b               1    3[COMMON] unsigned char 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  a               1    5[COMMON] unsigned char 
  4267 ;;  temporal        1    6[COMMON] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, pclath, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4277 ;;      Params:         1       0       0       0       0
  4278 ;;      Locals:         2       0       0       0       0
  4279 ;;      Temps:          1       0       0       0       0
  4280 ;;      Totals:         4       0       0       0       0
  4281 ;;Total ram usage:        4 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    1
  4284 ;; This function calls:
  4285 ;;		_LCD_CMD
  4286 ;; This function is called by:
  4287 ;;		_main
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           
  4292                           ;psect for function _LCD_SET_CURSOR
  4293  0E70                     _LCD_SET_CURSOR:	
  4294                           
  4295                           ;incstack = 0
  4296                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  4297                           ;LCD_SET_CURSOR@a stored from wreg
  4298  0E70  00F5               	movwf	LCD_SET_CURSOR@a
  4299  0E71                     l1791:	
  4300                           
  4301                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 30:     uint8_t temporal;;../Digital2_LabLCD/LCD_8b
      +                          its_lib.c: 31:     if (a == 1) {
  4302  0E71  0375               	decf	LCD_SET_CURSOR@a,w
  4303  0E72  1D03               	btfss	3,2
  4304  0E73  2E75               	goto	u1891
  4305  0E74  2E76               	goto	u1890
  4306  0E75                     u1891:	
  4307  0E75  2E82               	goto	l1797
  4308  0E76                     u1890:	
  4309  0E76                     l1793:	
  4310                           
  4311                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 32:         temporal = 0x80 + b - 1;
  4312  0E76  0873               	movf	LCD_SET_CURSOR@b,w
  4313  0E77  3E7F               	addlw	127
  4314  0E78  00F4               	movwf	??_LCD_SET_CURSOR
  4315  0E79  0874               	movf	??_LCD_SET_CURSOR,w
  4316  0E7A  00F6               	movwf	LCD_SET_CURSOR@temporal
  4317  0E7B                     l1795:	
  4318                           
  4319                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 33:         LCD_CMD(temporal);
  4320  0E7B  0876               	movf	LCD_SET_CURSOR@temporal,w
  4321  0E7C  120A  158A  2628  120A  158A  	fcall	_LCD_CMD
  4322                           
  4323                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 34:     }
  4324  0E81  2E93               	goto	l136
  4325  0E82                     l1797:	
  4326  0E82  3002               	movlw	2
  4327  0E83  0675               	xorwf	LCD_SET_CURSOR@a,w
  4328  0E84  1D03               	btfss	3,2
  4329  0E85  2E87               	goto	u1901
  4330  0E86  2E88               	goto	u1900
  4331  0E87                     u1901:	
  4332  0E87  2E93               	goto	l136
  4333  0E88                     u1900:	
  4334  0E88                     l1799:	
  4335                           
  4336                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 36:         temporal = 0xC0 + b - 1;
  4337  0E88  0873               	movf	LCD_SET_CURSOR@b,w
  4338  0E89  3EBF               	addlw	191
  4339  0E8A  00F4               	movwf	??_LCD_SET_CURSOR
  4340  0E8B  0874               	movf	??_LCD_SET_CURSOR,w
  4341  0E8C  00F6               	movwf	LCD_SET_CURSOR@temporal
  4342  0E8D                     l1801:	
  4343                           
  4344                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 37:         LCD_CMD(temporal);
  4345  0E8D  0876               	movf	LCD_SET_CURSOR@temporal,w
  4346  0E8E  120A  158A  2628  120A  158A  	fcall	_LCD_CMD
  4347  0E93                     l136:	
  4348  0E93  0008               	return
  4349  0E94                     __end_of_LCD_SET_CURSOR:	
  4350                           
  4351                           	psect	text20
  4352  0003                     __ptext20:	
  4353 ;; *************** function _LCD_INIT *****************
  4354 ;; Defined at:
  4355 ;;		line 41 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0
  4371 ;;      Temps:          2       0       0       0       0
  4372 ;;      Totals:         2       0       0       0       0
  4373 ;;Total ram usage:        2 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    1
  4376 ;; This function calls:
  4377 ;;		_LCD_CMD
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           
  4384                           ;psect for function _LCD_INIT
  4385  0003                     _LCD_INIT:	
  4386  0003                     l1763:	
  4387                           ;incstack = 0
  4388                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  4389                           
  4390                           
  4391                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 42:     PORTB = 0;
  4392  0003  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0004  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0005  0186               	clrf	6	;volatile
  4395  0006                     l1765:	
  4396                           
  4397                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 43:     _delay((unsigned long)((15)*(4000000/4000.0
      +                          )));
  4398  0006  3014               	movlw	20
  4399  0007  00F4               	movwf	??_LCD_INIT+1
  4400  0008  3079               	movlw	121
  4401  0009  00F3               	movwf	??_LCD_INIT
  4402  000A                     u2107:	
  4403  000A  0BF3               	decfsz	??_LCD_INIT,f
  4404  000B  280A               	goto	u2107
  4405  000C  0BF4               	decfsz	??_LCD_INIT+1,f
  4406  000D  280A               	goto	u2107
  4407  000E  280F               	nop2
  4408  000F                     l1767:	
  4409                           
  4410                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 44:     LCD_CMD(0x30);
  4411  000F  3030               	movlw	48
  4412  0010  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4413  0015                     l1769:	
  4414                           
  4415                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  4416  0015  3007               	movlw	7
  4417  0016  00F4               	movwf	??_LCD_INIT+1
  4418  0017  307D               	movlw	125
  4419  0018  00F3               	movwf	??_LCD_INIT
  4420  0019                     u2117:	
  4421  0019  0BF3               	decfsz	??_LCD_INIT,f
  4422  001A  2819               	goto	u2117
  4423  001B  0BF4               	decfsz	??_LCD_INIT+1,f
  4424  001C  2819               	goto	u2117
  4425  001D                     l1771:	
  4426                           
  4427                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 46:     LCD_CMD(0x30);
  4428  001D  3030               	movlw	48
  4429  001E  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4430  0023                     l1773:	
  4431                           
  4432                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 47:     _delay((unsigned long)((160)*(4000000/40000
      +                          00.0)));
  4433  0023  3035               	movlw	53
  4434  0024  00F3               	movwf	??_LCD_INIT
  4435  0025                     u2127:	
  4436  0025  0BF3               	decfsz	??_LCD_INIT,f
  4437  0026  2825               	goto	u2127
  4438  0027                     l1775:	
  4439                           
  4440                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 48:     LCD_CMD(0x30);
  4441  0027  3030               	movlw	48
  4442  0028  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4443  002D                     l1777:	
  4444                           
  4445                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 49:     _delay((unsigned long)((160)*(4000000/40000
      +                          00.0)));
  4446  002D  3035               	movlw	53
  4447  002E  00F3               	movwf	??_LCD_INIT
  4448  002F                     u2137:	
  4449  002F  0BF3               	decfsz	??_LCD_INIT,f
  4450  0030  282F               	goto	u2137
  4451  0031                     l1779:	
  4452                           
  4453                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 52:     LCD_CMD(0x02);
  4454  0031  3002               	movlw	2
  4455  0032  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4456  0037                     l1781:	
  4457                           
  4458                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 53:     LCD_CMD(0x38);
  4459  0037  3038               	movlw	56
  4460  0038  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4461  003D                     l1783:	
  4462                           
  4463                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 54:     LCD_CMD(0x08);
  4464  003D  3008               	movlw	8
  4465  003E  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4466  0043                     l1785:	
  4467                           
  4468                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 55:     LCD_CMD(0x01);
  4469  0043  3001               	movlw	1
  4470  0044  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4471  0049                     l1787:	
  4472                           
  4473                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 56:     LCD_CMD(0x06);
  4474  0049  3006               	movlw	6
  4475  004A  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4476  004F                     l1789:	
  4477                           
  4478                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 57:     LCD_CMD(0x0C);
  4479  004F  300C               	movlw	12
  4480  0050  120A  158A  2628  120A  118A  	fcall	_LCD_CMD
  4481  0055                     l139:	
  4482  0055  0008               	return
  4483  0056                     __end_of_LCD_INIT:	
  4484                           
  4485                           	psect	text21
  4486  0E28                     __ptext21:	
  4487 ;; *************** function _LCD_CMD *****************
  4488 ;; Defined at:
  4489 ;;		line 16 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  a               1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  a               1    2[COMMON] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0       0       0       0       0
  4504 ;;      Locals:         1       0       0       0       0
  4505 ;;      Temps:          2       0       0       0       0
  4506 ;;      Totals:         3       0       0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_LCD_SET_CURSOR
  4513 ;;		_LCD_INIT
  4514 ;;		_LCD_CLR
  4515 ;;		_LCD_SHIFT_RIGHT
  4516 ;;		_LCD_SHIFT_LEFT
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _LCD_CMD
  4522  0E28                     _LCD_CMD:	
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in _LCD_CMD: [wreg]
  4526                           ;LCD_CMD@a stored from wreg
  4527  0E28  00F2               	movwf	LCD_CMD@a
  4528  0E29                     l1431:	
  4529                           
  4530                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 17:     PORTDbits.RD5 = 0;
  4531  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0E2B  1288               	bcf	8,5	;volatile
  4534  0E2C                     l1433:	
  4535                           
  4536                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 18:     PORTB = a;
  4537  0E2C  0872               	movf	LCD_CMD@a,w
  4538  0E2D  0086               	movwf	6	;volatile
  4539  0E2E                     l1435:	
  4540                           
  4541                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 19:     PORTDbits.RD7 = 1;
  4542  0E2E  1788               	bsf	8,7	;volatile
  4543  0E2F                     l1437:	
  4544                           
  4545                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 20:     _delay((unsigned long)((5)*(4000000/4000000
      +                          .0)));
  4546  0E2F  2E30               	nop2	;2 cycle nop
  4547  0E30  2E31               	nop2	;2 cycle nop
  4548  0E31  0000               	nop
  4549  0E32                     l1439:	
  4550                           
  4551                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 21:     PORTDbits.RD7 = 0;
  4552  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0E34  1388               	bcf	8,7	;volatile
  4555                           
  4556                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 22:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  4557  0E35  3007               	movlw	7
  4558  0E36  00F1               	movwf	??_LCD_CMD+1
  4559  0E37  307D               	movlw	125
  4560  0E38  00F0               	movwf	??_LCD_CMD
  4561  0E39                     u2147:	
  4562  0E39  0BF0               	decfsz	??_LCD_CMD,f
  4563  0E3A  2E39               	goto	u2147
  4564  0E3B  0BF1               	decfsz	??_LCD_CMD+1,f
  4565  0E3C  2E39               	goto	u2147
  4566  0E3D                     l127:	
  4567  0E3D  0008               	return
  4568  0E3E                     __end_of_LCD_CMD:	
  4569                           
  4570                           	psect	text22
  4571  0E0E                     __ptext22:	
  4572 ;; *************** function _Init_Port *****************
  4573 ;; Defined at:
  4574 ;;		line 112 in file "Main_master.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		status,2
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _Init_Port
  4603  0E0E                     _Init_Port:	
  4604  0E0E                     l1749:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _Init_Port: [status,2]
  4607                           
  4608                           
  4609                           ;Main_master.c: 113:     ANSEL = 0;
  4610  0E0E  1683               	bsf	3,5	;RP0=1, select bank3
  4611  0E0F  1703               	bsf	3,6	;RP1=1, select bank3
  4612  0E10  0188               	clrf	8	;volatile
  4613                           
  4614                           ;Main_master.c: 114:     ANSELH = 0;
  4615  0E11  0189               	clrf	9	;volatile
  4616                           
  4617                           ;Main_master.c: 115:     TRISB = 0;
  4618  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  4619  0E13  1303               	bcf	3,6	;RP1=0, select bank1
  4620  0E14  0186               	clrf	6	;volatile
  4621                           
  4622                           ;Main_master.c: 116:     TRISD = 0;
  4623  0E15  0188               	clrf	8	;volatile
  4624                           
  4625                           ;Main_master.c: 117:     PORTB = 0;
  4626  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0E18  0186               	clrf	6	;volatile
  4629                           
  4630                           ;Main_master.c: 118:     PORTD = 0;
  4631  0E19  0188               	clrf	8	;volatile
  4632  0E1A                     l103:	
  4633  0E1A  0008               	return
  4634  0E1B                     __end_of_Init_Port:	
  4635                           
  4636                           	psect	text23
  4637  0F42                     __ptext23:	
  4638 ;; *************** function _Init_I2C_Master *****************
  4639 ;; Defined at:
  4640 ;;		line 13 in file "I2C.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  b               4    0[BANK0 ] const unsigned long 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4654 ;;      Params:         0       4       0       0       0
  4655 ;;      Locals:         0       0       0       0       0
  4656 ;;      Temps:          0       4       0       0       0
  4657 ;;      Totals:         0       8       0       0       0
  4658 ;;Total ram usage:        8 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    1
  4661 ;; This function calls:
  4662 ;;		___lldiv
  4663 ;; This function is called by:
  4664 ;;		_main
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           
  4669                           ;psect for function _Init_I2C_Master
  4670  0F42                     _Init_I2C_Master:	
  4671  0F42                     l1751:	
  4672                           ;incstack = 0
  4673                           ; Regs used in _Init_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  4674                           
  4675                           
  4676                           ;I2C.c: 14:     SSPCONbits.SSPM0 = 0;
  4677  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0F44  1014               	bcf	20,0	;volatile
  4680                           
  4681                           ;I2C.c: 15:     SSPCONbits.SSPM1 = 0;
  4682  0F45  1094               	bcf	20,1	;volatile
  4683                           
  4684                           ;I2C.c: 16:     SSPCONbits.SSPM2 = 0;
  4685  0F46  1114               	bcf	20,2	;volatile
  4686                           
  4687                           ;I2C.c: 17:     SSPCONbits.SSPM3 = 1;
  4688  0F47  1594               	bsf	20,3	;volatile
  4689                           
  4690                           ;I2C.c: 19:     SSPCONbits.CKP = 0;
  4691  0F48  1214               	bcf	20,4	;volatile
  4692                           
  4693                           ;I2C.c: 20:     SSPCONbits.SSPEN = 1;
  4694  0F49  1694               	bsf	20,5	;volatile
  4695  0F4A                     l1753:	
  4696                           
  4697                           ;I2C.c: 21:     SSPCON2 = 0;
  4698  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  4699  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  4700  0F4C  0191               	clrf	17	;volatile
  4701  0F4D                     l1755:	
  4702                           
  4703                           ;I2C.c: 22:     SSPADD = (4000000/(4*b)) - 1;
  4704  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0F4F  0820               	movf	Init_I2C_Master@b,w
  4707  0F50  00A4               	movwf	??_Init_I2C_Master
  4708  0F51  0821               	movf	Init_I2C_Master@b+1,w
  4709  0F52  00A5               	movwf	??_Init_I2C_Master+1
  4710  0F53  0822               	movf	Init_I2C_Master@b+2,w
  4711  0F54  00A6               	movwf	??_Init_I2C_Master+2
  4712  0F55  0823               	movf	Init_I2C_Master@b+3,w
  4713  0F56  00A7               	movwf	??_Init_I2C_Master+3
  4714  0F57  3002               	movlw	2
  4715  0F58                     u1885:	
  4716  0F58  1003               	clrc
  4717  0F59  0DA4               	rlf	??_Init_I2C_Master,f
  4718  0F5A  0DA5               	rlf	??_Init_I2C_Master+1,f
  4719  0F5B  0DA6               	rlf	??_Init_I2C_Master+2,f
  4720  0F5C  0DA7               	rlf	??_Init_I2C_Master+3,f
  4721  0F5D                     u1880:	
  4722  0F5D  3EFF               	addlw	-1
  4723  0F5E  1D03               	skipz
  4724  0F5F  2F58               	goto	u1885
  4725  0F60  0827               	movf	??_Init_I2C_Master+3,w
  4726  0F61  00F3               	movwf	___lldiv@divisor+3
  4727  0F62  0826               	movf	??_Init_I2C_Master+2,w
  4728  0F63  00F2               	movwf	___lldiv@divisor+2
  4729  0F64  0825               	movf	??_Init_I2C_Master+1,w
  4730  0F65  00F1               	movwf	___lldiv@divisor+1
  4731  0F66  0824               	movf	??_Init_I2C_Master,w
  4732  0F67  00F0               	movwf	___lldiv@divisor
  4733  0F68  3000               	movlw	0
  4734  0F69  00F7               	movwf	___lldiv@dividend+3
  4735  0F6A  303D               	movlw	61
  4736  0F6B  00F6               	movwf	___lldiv@dividend+2
  4737  0F6C  3009               	movlw	9
  4738  0F6D  00F5               	movwf	___lldiv@dividend+1
  4739  0F6E  3000               	movlw	0
  4740  0F6F  00F4               	movwf	___lldiv@dividend
  4741  0F70  120A  118A  20B1  120A  158A  	fcall	___lldiv
  4742  0F75  0870               	movf	?___lldiv,w
  4743  0F76  3EFF               	addlw	255
  4744  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  4745  0F78  1303               	bcf	3,6	;RP1=0, select bank1
  4746  0F79  0093               	movwf	19	;volatile
  4747  0F7A                     l1757:	
  4748                           
  4749                           ;I2C.c: 23:     SSPSTAT = 0;
  4750  0F7A  0194               	clrf	20	;volatile
  4751  0F7B                     l1759:	
  4752                           
  4753                           ;I2C.c: 24:     TRISCbits.TRISC3 = 1;
  4754  0F7B  1587               	bsf	7,3	;volatile
  4755  0F7C                     l1761:	
  4756                           
  4757                           ;I2C.c: 25:     TRISCbits.TRISC4 = 1;
  4758  0F7C  1607               	bsf	7,4	;volatile
  4759  0F7D                     l181:	
  4760  0F7D  0008               	return
  4761  0F7E                     __end_of_Init_I2C_Master:	
  4762                           
  4763                           	psect	text24
  4764  00B1                     __ptext24:	
  4765 ;; *************** function ___lldiv *****************
  4766 ;; Defined at:
  4767 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  divisor         4    0[COMMON] unsigned long 
  4770 ;;  dividend        4    4[COMMON] unsigned long 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  quotient        4    9[COMMON] unsigned long 
  4773 ;;  counter         1   13[COMMON] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  4    0[COMMON] unsigned long 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4783 ;;      Params:         8       0       0       0       0
  4784 ;;      Locals:         5       0       0       0       0
  4785 ;;      Temps:          1       0       0       0       0
  4786 ;;      Totals:        14       0       0       0       0
  4787 ;;Total ram usage:       14 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_Init_I2C_Master
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           
  4797                           ;psect for function ___lldiv
  4798  00B1                     ___lldiv:	
  4799  00B1                     l1445:	
  4800                           ;incstack = 0
  4801                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4802                           
  4803  00B1  3000               	movlw	0
  4804  00B2  00FC               	movwf	___lldiv@quotient+3
  4805  00B3  3000               	movlw	0
  4806  00B4  00FB               	movwf	___lldiv@quotient+2
  4807  00B5  3000               	movlw	0
  4808  00B6  00FA               	movwf	___lldiv@quotient+1
  4809  00B7  3000               	movlw	0
  4810  00B8  00F9               	movwf	___lldiv@quotient
  4811  00B9  0873               	movf	___lldiv@divisor+3,w
  4812  00BA  0472               	iorwf	___lldiv@divisor+2,w
  4813  00BB  0471               	iorwf	___lldiv@divisor+1,w
  4814  00BC  0470               	iorwf	___lldiv@divisor,w
  4815  00BD  1903               	skipnz
  4816  00BE  28C0               	goto	u1091
  4817  00BF  28C1               	goto	u1090
  4818  00C0                     u1091:	
  4819  00C0  290E               	goto	l1465
  4820  00C1                     u1090:	
  4821  00C1                     l1447:	
  4822  00C1  01FD               	clrf	___lldiv@counter
  4823  00C2  0AFD               	incf	___lldiv@counter,f
  4824  00C3  28D1               	goto	l1451
  4825  00C4                     l1449:	
  4826  00C4  3001               	movlw	1
  4827  00C5  00F8               	movwf	??___lldiv
  4828  00C6                     u1105:	
  4829  00C6  1003               	clrc
  4830  00C7  0DF0               	rlf	___lldiv@divisor,f
  4831  00C8  0DF1               	rlf	___lldiv@divisor+1,f
  4832  00C9  0DF2               	rlf	___lldiv@divisor+2,f
  4833  00CA  0DF3               	rlf	___lldiv@divisor+3,f
  4834  00CB  0BF8               	decfsz	??___lldiv,f
  4835  00CC  28C6               	goto	u1105
  4836  00CD  3001               	movlw	1
  4837  00CE  00F8               	movwf	??___lldiv
  4838  00CF  0878               	movf	??___lldiv,w
  4839  00D0  07FD               	addwf	___lldiv@counter,f
  4840  00D1                     l1451:	
  4841  00D1  1FF3               	btfss	___lldiv@divisor+3,7
  4842  00D2  28D4               	goto	u1111
  4843  00D3  28D5               	goto	u1110
  4844  00D4                     u1111:	
  4845  00D4  28C4               	goto	l1449
  4846  00D5                     u1110:	
  4847  00D5                     l1453:	
  4848  00D5  3001               	movlw	1
  4849  00D6  00F8               	movwf	??___lldiv
  4850  00D7                     u1125:	
  4851  00D7  1003               	clrc
  4852  00D8  0DF9               	rlf	___lldiv@quotient,f
  4853  00D9  0DFA               	rlf	___lldiv@quotient+1,f
  4854  00DA  0DFB               	rlf	___lldiv@quotient+2,f
  4855  00DB  0DFC               	rlf	___lldiv@quotient+3,f
  4856  00DC  0BF8               	decfsz	??___lldiv,f
  4857  00DD  28D7               	goto	u1125
  4858  00DE                     l1455:	
  4859  00DE  0873               	movf	___lldiv@divisor+3,w
  4860  00DF  0277               	subwf	___lldiv@dividend+3,w
  4861  00E0  1D03               	skipz
  4862  00E1  28EC               	goto	u1135
  4863  00E2  0872               	movf	___lldiv@divisor+2,w
  4864  00E3  0276               	subwf	___lldiv@dividend+2,w
  4865  00E4  1D03               	skipz
  4866  00E5  28EC               	goto	u1135
  4867  00E6  0871               	movf	___lldiv@divisor+1,w
  4868  00E7  0275               	subwf	___lldiv@dividend+1,w
  4869  00E8  1D03               	skipz
  4870  00E9  28EC               	goto	u1135
  4871  00EA  0870               	movf	___lldiv@divisor,w
  4872  00EB  0274               	subwf	___lldiv@dividend,w
  4873  00EC                     u1135:	
  4874  00EC  1C03               	skipc
  4875  00ED  28EF               	goto	u1131
  4876  00EE  28F0               	goto	u1130
  4877  00EF                     u1131:	
  4878  00EF  28FF               	goto	l1461
  4879  00F0                     u1130:	
  4880  00F0                     l1457:	
  4881  00F0  0870               	movf	___lldiv@divisor,w
  4882  00F1  02F4               	subwf	___lldiv@dividend,f
  4883  00F2  0871               	movf	___lldiv@divisor+1,w
  4884  00F3  1C03               	skipc
  4885  00F4  0F71               	incfsz	___lldiv@divisor+1,w
  4886  00F5  02F5               	subwf	___lldiv@dividend+1,f
  4887  00F6  0872               	movf	___lldiv@divisor+2,w
  4888  00F7  1C03               	skipc
  4889  00F8  0F72               	incfsz	___lldiv@divisor+2,w
  4890  00F9  02F6               	subwf	___lldiv@dividend+2,f
  4891  00FA  0873               	movf	___lldiv@divisor+3,w
  4892  00FB  1C03               	skipc
  4893  00FC  0F73               	incfsz	___lldiv@divisor+3,w
  4894  00FD  02F7               	subwf	___lldiv@dividend+3,f
  4895  00FE                     l1459:	
  4896  00FE  1479               	bsf	___lldiv@quotient,0
  4897  00FF                     l1461:	
  4898  00FF  3001               	movlw	1
  4899  0100                     u1145:	
  4900  0100  1003               	clrc
  4901  0101  0CF3               	rrf	___lldiv@divisor+3,f
  4902  0102  0CF2               	rrf	___lldiv@divisor+2,f
  4903  0103  0CF1               	rrf	___lldiv@divisor+1,f
  4904  0104  0CF0               	rrf	___lldiv@divisor,f
  4905  0105  3EFF               	addlw	-1
  4906  0106  1D03               	skipz
  4907  0107  2900               	goto	u1145
  4908  0108                     l1463:	
  4909  0108  3001               	movlw	1
  4910  0109  02FD               	subwf	___lldiv@counter,f
  4911  010A  1D03               	btfss	3,2
  4912  010B  290D               	goto	u1151
  4913  010C  290E               	goto	u1150
  4914  010D                     u1151:	
  4915  010D  28D5               	goto	l1453
  4916  010E                     u1150:	
  4917  010E                     l1465:	
  4918  010E  087C               	movf	___lldiv@quotient+3,w
  4919  010F  00F3               	movwf	?___lldiv+3
  4920  0110  087B               	movf	___lldiv@quotient+2,w
  4921  0111  00F2               	movwf	?___lldiv+2
  4922  0112  087A               	movf	___lldiv@quotient+1,w
  4923  0113  00F1               	movwf	?___lldiv+1
  4924  0114  0879               	movf	___lldiv@quotient,w
  4925  0115  00F0               	movwf	?___lldiv
  4926  0116                     l329:	
  4927  0116  0008               	return
  4928  0117                     __end_of___lldiv:	
  4929  007E                     btemp	set	126	;btemp
  4930  007E                     wtemp0	set	126


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WRITE_STRING@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _obtener_unidades->___awmod
    ___flmul->___xxtofl
    _obtener_decenas->___awmod
    ___awmod->___awdiv
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD
    _Init_I2C_Master->___lldiv

Critical Paths under _main in BANK0

    _main->_obtener_decimal_1
    _main->_obtener_decimal_2
    _obtener_unidades->___awmod
    _obtener_decimal_2->___fltol
    _obtener_decimal_1->___fltol
    ___fltol->___flmul
    _obtener_decenas->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15014
                                             43 BANK0      2     2      0
                    _Init_I2C_Master
                          _Init_Port
                           _LCD_INIT
                     _LCD_SET_CURSOR
                     _LCD_WRITE_CHAR
                   _LCD_WRITE_STRING
                   _Start_I2C_Master
                    _Stop_I2C_Master
                   _Write_I2C_Master
                            ___flmul
                            ___fltol
                           ___xxtofl
                  _convertir_a_ascii
                    _obtener_decenas
                  _obtener_decimal_1
                  _obtener_decimal_2
                   _obtener_unidades
 ---------------------------------------------------------------------------------
 (1) _obtener_unidades                                     5     5      0     645
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _obtener_decimal_2                                    6     2      4    4073
                                             37 BANK0      6     2      4
                            ___flmul
                            ___fltol
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _obtener_decimal_1                                    6     2      4    4073
                                             37 BANK0      6     2      4
                            ___flmul
                            ___fltol
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2857
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _obtener_decenas                                      5     5      0    1097
                                              2 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _convertir_a_ascii                                    3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     466
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Write_I2C_Master                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (1) _Stop_I2C_Master                                      0     0      0       0
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (1) _Start_I2C_Master                                     0     0      0       0
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (2) _Wait_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     3     3      0     211
                                              3 COMMON     3     3      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     460
                                              3 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init_Port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_Master                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_I2C_Master
     ___lldiv
   _Init_Port
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_CHAR
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Start_I2C_Master
     _Wait_I2C_Master
   _Stop_I2C_Master
     _Wait_I2C_Master
   _Write_I2C_Master
     _Wait_I2C_Master
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
   ___xxtofl
   _convertir_a_ascii
   _obtener_decenas
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _obtener_decimal_1
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___lwmod
   _obtener_decimal_2
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___lwmod
   _obtener_unidades
     ___awmod
       ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 00:05:05 2020

           ?_LCD_WRITE_CHAR 0070                           _a 0066                           pc 0002  
               __CFG_CP$OFF 0000                 _SSPSTATbits 0094                ___awdiv@sign 0076  
                        fsr 0004         __Umul8_16@word_mpld 0076           ?_LCD_WRITE_STRING 0070  
                       l103 0E1A                         l112 0FBE                         l202 0E0D  
                       l106 0E6F                         l115 0FFF                         l109 0F07  
                       l142 0E54                         l118 0DE9                         l127 0E3D  
                       l136 0E93                         l139 0055                         l148 0EB8  
                       l181 0F7D                         l190 0E27                         l329 0116  
                       l193 0DFA                         l187 0E1B                         l446 017D  
                       l199 0E03                         l720 021C                         l722 02B3  
                       l459 00B0                         l733 027D                         l741 0EDF  
                       l734 0289                         l726 0261                         l486 01E4  
                       l479 01F9                         l575 0F41                         l489 01F9  
                       l682 07F2                         l739 0ECD                         l694 07E6  
                       l688 075E                __CFG_CPD$OFF 0000                         _pot 006C  
                       fsr0 0004          ??_LCD_WRITE_STRING 0073                         indf 0000  
              ___awmod@sign 0021                ___flmul@aexp 0032                ___flmul@bexp 0033  
              ___flmul@sign 002D                ___flmul@temp 0038                ___flmul@prod 0034  
           __end_of_LCD_CMD 0E3E                __CFG_LVP$OFF 0000                ___fltol@exp1 0044  
                      l1411 0EBC                        l1501 0162                        l1413 0EC3  
                      l1431 0E29                        l1423 0E3F                        l1503 0169  
                      l1415 0EC7                        l1433 0E2C                        l1425 0E42  
                      l1441 0E1B                        l1505 016F                        l1521 0064  
                      l1513 0056                        l1417 0ED6                        l1409 0EBA  
                      l1601 0F30                        l1451 00D1                        l1435 0E2E  
                      l1427 0E44                        l1443 0E21                        l1507 0174  
                      l1531 007D                        l1523 0068                        l1515 0059  
                      l1419 0EDB                        l1611 0499                        l1603 0F37  
                      l1461 00FF                        l1453 00D5                        l1445 00B1  
                      l1437 0E2F                        l1429 0E49                        l1509 0179  
                      l1541 009C                        l1533 0081                        l1525 006D  
                      l1517 005D                        l1701 072F                        l1621 04AE  
                      l1613 049F                        l1605 0F3D                        l1463 0108  
                      l1455 00DE                        l1447 00C1                        l1439 0E32  
                      l1471 0118                        l1535 0085                        l1527 0073  
                      l1543 00A2                        l1519 0062                        l1711 0747  
                      l1703 0738                        l1631 04CB                        l1623 04B6  
                      l1615 04A3                        l1551 017E                        l1457 00F0  
                      l1449 00C4                        l1465 010E                        l1801 0E8D  
                      l1481 012C                        l1473 011C                        l1545 00A7  
                      l1537 008F                        l1529 0076                        l1721 0776  
                      l1713 075B                        l1705 073E                        l1641 04E2  
                      l1633 04CF                        l1625 04B8                        l1617 04A4  
                      l1609 0492                        l1561 01AA                        l1553 018B  
                      l1459 00FE                        l1803 0E95                        l1811 0DF2  
                      l1491 0142                        l1483 0130                        l1475 0121  
                      l1547 00AC                        l1539 0095                        l1731 07B1  
                      l1723 077A                        l1707 0742                        l1643 04E4  
                      l1635 04D0                        l1627 04C0                        l1619 04A9  
                      l1563 01B2                        l1805 0E98                        l1813 0DF7  
                      l1821 0E00                        l1493 0146                        l1485 0132  
                      l1477 0123                        l1469 0117                        l1741 07DE  
                      l1733 07C0                        l1725 0793                        l1717 0763  
                      l1709 0743                        l1661 0555                        l1653 04FF  
                      l1645 04EC                        l1637 04D5                        l1629 04C5  
                      l1581 01D9                        l1573 01C0                        l1565 01B4  
                      l1557 0194                        l1901 02B4                        l1751 0F42  
                      l1807 0EA5                        l1815 0E04                        l1495 014A  
                      l1487 0138                        l1479 0127                        l1743 07DF  
                      l1735 07CA                        l1719 0768                        l1727 0799  
                      l1671 05D2                        l1663 0581                        l1655 050F  
                      l1647 04F1                        l1639 04DA                        l1583 01E9  
                      l1567 01B8                        l1575 01D2                        l1559 01A9  
                      l1591 0F11                        l1831 0FAA                        l1823 0E58  
                      l1911 02DB                        l1903 02B9                        l1761 0F7C  
                      l1753 0F4A                        l1809 0EAB                        l1817 0E09  
                      l1497 015B                        l1489 013B                        l1745 07EA  
                      l1737 07CC                        l1729 07A6                        l1681 0652  
                      l1673 05EF                        l1665 059D                        l1657 051C  
                      l1649 04F6                        l1585 01EE                        l1593 0F18  
                      l1833 0FBD                        l1841 0FFE                        l1825 0E6E  
                      l1921 02FF                        l1913 02E0                        l1905 02C8  
                      l1755 0F4D                        l1771 001D                        l1763 0003  
                      l1819 0DFB                        l1851 0DE3                        l1499 0161  
                      l1739 07DA                        l1691 070A                        l1683 067F  
                      l1675 05FF                        l1667 05B9                        l1659 0539  
                      l1595 0F1C                        l1587 0F08                        l1931 0376  
                      l1923 0330                        l1915 02E9                        l1907 02CD  
                      l1757 0F7A                        l1749 0E0E                        l1781 0037  
                      l1773 0023                        l1765 0006                        l1861 0204  
                      l1853 0DE8                        l1845 0EE3                        l1693 0713  
                      l1685 068F                        l1677 061C                        l1669 05C2  
                      l1597 0F20                        l1589 0F0E                        l1829 0F7E  
                      l1837 0FBF                        l1941 03CA                        l1933 0390  
                      l1925 0338                        l1917 02EF                        l1909 02D5  
                      l1759 0F7B                        l1783 003D                        l1775 0027  
                      l1767 000F                        l1791 0E71                        l1871 0232  
                      l1863 0214                        l1847 0F06                        l1695 0721  
                      l1687 06BC                        l1679 0635                        l1599 0F2A  
                      l1839 0FEB                        l1951 0401                        l1943 03D5  
                      l1935 03A2                        l1927 0352                        l1919 02F4  
                      l1785 0043                        l1777 002D                        l1769 0015  
                      l1793 0E76                        l1881 0268                        l1873 023F  
                      l1865 0224                        l1857 01FB                        l1697 072A  
                      l1689 06E2                        l1961 0432                        l1953 040C  
                      l1945 03E0                        l1937 03B4                        l1929 0364  
                      l1787 0049                        l1779 0031                        l1795 0E7B  
                      l1891 02A1                        l1883 0273                        l1875 0246  
                      l1859 0200                        l1699 072E                        l1971 045C  
                      l1963 0438                        l1955 0417                        l1947 03EB  
                      l1939 03BF                        l1789 004F                        l1797 0E82  
                      l1893 02A6                        l1885 0277                        l1877 024A  
                      l1869 022D                        l1981 0486                        l1973 0462  
                      l1965 0440                        l1957 0422                        l1949 03F6  
                      l1799 0E88                        l1895 02AA                        l1887 0281  
                      l1879 0258                        l1975 046A                        l1967 0448  
                      l1959 042A                        l1897 02AB                        l1889 028B  
                      l1977 0472                        l1969 0454                        l1979 047E  
                      STR_1 0806                        STR_2 0817                        STR_3 0817  
                      u1110 00D5                        u1111 00D4                        u2000 0277  
                      u1200 014A                        u1040 0EC7                        u1105 00C6  
                      u2001 0276                        u1201 0149                        u1041 0EC6  
                      u1130 00F0                        u2010 027D                        u1131 00EF  
                      u2011 027C                        u2020 0281                        u1220 015B  
                      u1300 0085                        u1060 0EDB                        u1125 00D7  
                      u2021 0280                        u1221 015A                        u1301 0084  
                      u1061 0EDA                        u1150 010E                        u1070 0E21  
                      u2030 0296                        u1310 008F                        u1151 010D  
                      u1135 00EC                        u1071 0E20                        u1215 014B  
                      u1311 008E                        u1055 0ECE                        u1080 0E27  
                      u2040 02A6                        u1240 016F                        u1160 011C  
                      u1400 01D1                        u1145 0100                        u1081 0E26  
                      u2041 02A5                        u1241 016E                        u1225 0157  
                      u1161 011B                        u1401 01D0                        u1090 00C1  
                      u2050 02AA                        u1250 0174                        u1170 0127  
                      u1330 00A2                        u1410 01D8                        u1091 00C0  
                      u2107 000A                        u2051 02A9                        u2035 0291  
                      u1251 0173                        u1235 0163                        u1171 0126  
                      u1331 00A1                        u1315 008B                        u1411 01D7  
                      u1180 0138                        u1340 00A7                        u1260 005D  
                      u1500 0F3D                        u2117 0019                        u1181 0137  
                      u1341 00A6                        u1325 0096                        u1261 005C  
                      u1501 0F3C                        u1270 0068                        u1510 04A3  
                      u1430 01E9                        u1350 018B                        u2127 0025  
                      u1271 0067                        u1511 04A2                        u1431 01E8  
                      u1351 018A                        u1280 0073                        u1520 04A9  
                      u1440 01EE                        u1360 01A2                        u2137 002F  
                      u1281 0072                        u1601 0563                        u1521 04A8  
                      u1441 01ED                        u1425 01DB                        u1602 056A  
                      u1530 04AE                        u1370 01B8                        u1450 0F0E  
                      u2147 0E39                        u1195 013C                        u1611 058F  
                      u1603 0571                        u1531 04AD                        u1371 01B7  
                      u1451 0F0D                        u1700 06C8                        u1612 0596  
                      u1540 04CF                        u1380 01BF                        u1621 05AB  
                      u1613 059D                        u1541 04CE                        u1381 01BE  
                      u1365 019D                        u2077 02FA                        u1622 05B2  
                      u1550 04D5                        u1470 0F20                        u2087 0E47  
                      u1295 0077                        u1711 06D4                        u1623 05B9  
                      u1551 04D4                        u1471 0F1F                        u1800 075B  
                      u1720 06F0                        u1712 06DB                        u1560 04DA  
                      u1480 0F2A                        u2097 0E50                        u1801 075A  
                      u1713 06E2                        u1705 06C3                        u1641 05E1  
                      u1561 04D9                        u1481 0F29                        u1465 0F12  
                      u1810 0762                        u1642 05E8                        u1570 04F1  
                      u1811 0761                        u1731 06FC                        u1651 060E  
                      u1643 05EF                        u1635 05BB                        u1571 04F0  
                      u1395 01C1                        u1900 0E88                        u1820 0768  
                      u1732 0703                        u1652 0615                        u1580 04F6  
                      u1901 0E87                        u1821 0767                        u1733 070A  
                      u1725 06EB                        u1653 061C                        u1581 04F5  
                      u1485 0F26                        u1910 0EB8                        u1830 077A  
                      u1911 0EB7                        u1831 0779                        u1671 0644  
                      u1591 0547                        u1495 0F31                        u1920 0200  
                      u1840 0789                        u1760 072E                        u1672 064B  
                      u1592 054E                        u1921 01FF                        u1761 072D  
                      u1745 070C                        u1681 0671                        u1673 0652  
                      u1665 061E                        u1593 0555                        u1930 0204  
                      u1850 07A6                        u1682 0678                        u1931 0203  
                      u1851 07A5                        u1755 0723                        u1691 069E  
                      u1683 067F                        u1940 0224                        u1860 07C0  
                      u1780 0742                        u1692 06A5                        u1941 0223  
                      u1861 07BF                        u1845 0784                        u1781 0741  
                      u1693 06AC                        u1870 07DE                        u1790 0747  
                      u1871 07DD                        u1855 07A2                        u1791 0746  
                      u1775 0731                        u1880 0F5D                        u1960 0245  
                      u1961 0244                        u1865 07BC                        u1890 0E76  
                      u1891 0E75                        u1955 0237                        u1980 0267  
                      u1885 0F58                        u1981 0266                        u1975 0259  
                      u1995 026C                __CFG_WRT$OFF 0000                        _cont 006A  
                      _main 02B4                        _foto 006B                        _potf 0051  
                      btemp 007E     __end_of_Init_I2C_Master 0F7E                        start 0000  
             __CFG_IESO$OFF 0000            __end_of_LCD_INIT 0056           Write_I2C_Master@a 0070  
             ___fltol@sign1 0043                       ?_main 0070             __end_of___awdiv 017E  
             __CFG_WDTE$OFF 0000             __end_of___awmod 00B1             __end_of___flmul 07F3  
           __end_of___fltol 01FA                       _ANSEL 0188             __end_of___lldiv 0117  
   __end_of_Wait_I2C_Master 0E28             ___awdiv@divisor 0070    __end_of_Start_I2C_Master 0DFB  
           __end_of___lwmod 0F42             ___awdiv@counter 0075                       _PORTB 0006  
                     _PORTD 0008                       _TRISB 0086                       _TRISD 0088  
            __CFG_FCMEN$OFF 0000                       _fotof 004D              __CFG_BOREN$OFF 0000  
                     pclath 000A                       status 0003                       wtemp0 007E  
            __CFG_MCLRE$OFF 0000             __initialization 07F3                __end_of_main 0492  
                    ??_main 004B                   ??_LCD_CMD 0070            ___awdiv@dividend 0072  
                    _ANSELH 0189                      _SSPADD 0093                      _SSPCON 0014  
                    _SSPBUF 0013          __size_of_Init_Port 000D            __end_of___xxtofl 02B4  
          _Write_I2C_Master 0E04            ?_Init_I2C_Master 0020              __CFG_PWRTE$OFF 0000  
 convertir_a_ascii@temporal 0072            ??_LCD_SET_CURSOR 0074                   ??___awdiv 0074  
                 ??___awmod 007D                   ??___flmul 0028                   ??___fltol 003E  
                 ??___lldiv 0078   __size_of_obtener_unidades 001B                   ??___lwmod 0074  
          ___awdiv@quotient 0077             ___awmod@divisor 0079                      _tempot 0057  
           ___awmod@counter 0020                      _unipot 0069            ?_Wait_I2C_Master 0070  
        __size_of__Umul8_16 0027                ___xxtofl@arg 007A                   ?_LCD_INIT 0070  
              ___xxtofl@exp 0079                ___xxtofl@val 0070     __end_of__initialization 07FC  
          ??_LCD_WRITE_CHAR 0070                  ___fltol@f1 003A              __pcstackCOMMON 0070  
  __size_of_obtener_decenas 0028           __end_of_Init_Port 0E1B     obtener_decenas@temporal 0026  
 obtener_decimal_1@temporal 0049   obtener_decimal_2@temporal 0049                  __pbssBANK0 004D  
                ??_LCD_INIT 0073   __size_of_LCD_WRITE_STRING 0025           __end_of__Umul8_16 0EE0  
                __pmaintext 02B4    __size_of_Stop_I2C_Master 0009                     _LCD_CMD 0E28  
         ?_Start_I2C_Master 0070                   ?___xxtofl 0070             LCD_SET_CURSOR@a 0075  
           LCD_SET_CURSOR@b 0073          ??_Start_I2C_Master 0070          convertir_a_ascii@a 0071  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 0800  
         LCD_WRITE_STRING@a 0075           LCD_WRITE_STRING@i 0073                     ___awdiv 0117  
                   ___awmod 0056                     ___flmul 0492                     ___fltol 017E  
                   ___lldiv 00B1            _obtener_unidades 0E55                     ___lwmod 0F08  
                   _address 006D                     __ptext1 0E55                     __ptext2 0FBF  
                   __ptext3 0F7E                     __ptext4 0F08                     __ptext5 017E  
                   __ptext6 0492                     __ptext7 0EB9                     __ptext8 0EE0  
                   __ptext9 0056    __end_of_Write_I2C_Master 0E0E                  ??___xxtofl 0074  
          ___awmod@dividend 007B           _convertir_a_ascii 0DE2                     _temfoto 0055  
         ??_obtener_decenas 0022                     _unicont 0062                     _unifoto 0065  
        ?_convertir_a_ascii 0070                     clrloop0 0DEB        end_of_initialization 07FC  
       ??_convertir_a_ascii 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
                 _PORTDbits 0008           ??_Stop_I2C_Master 0070   __end_of_convertir_a_ascii 0DEA  
             ___xxtofl@sign 0078                   _TRISCbits 0087            _LCD_WRITE_STRING 0E94  
               ___flmul@grs 002E           __size_of_LCD_INIT 0053          obtener_decimal_1@a 0045  
        obtener_decimal_2@a 0045    __size_of_Init_I2C_Master 003C         start_initialization 07F3  
                 _Init_Port 0E0E    __size_of_Wait_I2C_Master 000D             LCD_WRITE_CHAR@a 0072  
  __CFG_FOSC$INTRC_NOCLKOUT 0000    obtener_unidades@temporal 0026                   __Umul8_16 0EB9  
                  LCD_CMD@a 0072                    ?_LCD_CMD 0070     __size_of_LCD_SET_CURSOR 0024  
__size_of_convertir_a_ascii 0008                   ___flmul@a 0024                   ___flmul@b 0020  
                 ___latbits 0002               __pcstackBANK0 0020                  ?_Init_Port 0070  
         __size_of___xxtofl 00BA                   _deci1foto 0064                   _deci2foto 0063  
  __end_of_obtener_unidades 0E70   __size_of_Start_I2C_Master 0009                   _charcont1 005A  
                 _charcont2 0059                   _charfoto1 0060                   _charfoto2 005E  
                 _charfoto3 005C                    ?___awdiv 0070                    ?___awmod 0079  
                  ?___flmul 0020                    ?___fltol 003A                    ?___lldiv 0070  
                ?__Umul8_16 0070                    ?___lwmod 0070     __size_of_LCD_WRITE_CHAR 0017  
           _obtener_decenas 0EE0                   __pstrings 0800           ?_Write_I2C_Master 0070  
         ??_Init_I2C_Master 0024          ??_Write_I2C_Master 0072      LCD_SET_CURSOR@temporal 0076  
                  _LCD_INIT 0003                   clear_ram0 0DEA                    _PIE1bits 008C  
         _obtener_decimal_1 0F7E           _obtener_decimal_2 0FBF           ??_Wait_I2C_Master 0070  
           _Stop_I2C_Master 0DFB                    _PIR1bits 000C          ?_obtener_decimal_1 0045  
        ?_obtener_decimal_2 0045    __end_of_LCD_WRITE_STRING 0EB9         ??_obtener_decimal_1 007E  
       ??_obtener_decimal_2 007E                 __stringbase 0805            __size_of_LCD_CMD 0016  
               ??_Init_Port 0070   __end_of_obtener_decimal_1 0FBF   __end_of_obtener_decimal_2 1000  
   __end_of_obtener_decenas 0F08                 ??__Umul8_16 0072            __size_of___awdiv 0067  
          __size_of___awmod 005B            __size_of___flmul 0361            __size_of___fltol 007C  
          __size_of___lldiv 0066            __size_of___lwmod 003A          __end_of__stringtab 0806  
            _LCD_SET_CURSOR 0E70                    _deci1pot 0068                    _deci2pot 0067  
                  _dececont 0061                    ___xxtofl 01FA                    _charpot1 005F  
                  _charpot2 005D                    _charpot3 005B                    __ptext10 0117  
                  __ptext11 0DE2                    __ptext20 0003                    __ptext12 01FA  
                  __ptext21 0E28                    __ptext13 0E04                    __ptext22 0E0E  
                  __ptext14 0DFB                    __ptext23 0F42                    __ptext15 0DF2  
                  __ptext24 00B1                    __ptext16 0E1B                    __ptext17 0E94  
                  __ptext18 0E3E                    __ptext19 0E70           __CFG_BOR4V$BOR40V 0000  
   __end_of_Stop_I2C_Master 0E04               __size_of_main 01DE            _Start_I2C_Master 0DF2  
            _LCD_WRITE_CHAR 0E3E      __end_of_LCD_SET_CURSOR 0E94            obtener_decenas@a 0025  
                _INTCONbits 000B           ?_obtener_unidades 0070  __size_of_obtener_decimal_1 0041  
__size_of_obtener_decimal_2 0041            ___lwmod@dividend 0072            ___lldiv@dividend 0074  
          Init_I2C_Master@b 0020          ??_obtener_unidades 0022                   stringcode 0800  
          ?_obtener_decenas 0070      __end_of_LCD_WRITE_CHAR 0E55             _Init_I2C_Master 0F42  
           ?_LCD_SET_CURSOR 0073      __Umul8_16@multiplicand 0070           obtener_unidades@a 0025  
          ___lldiv@quotient 0079             ___lwmod@divisor 0070             ___lwmod@counter 0075  
                  stringdir 0800                    stringtab 0800                 _SSPCON2bits 0091  
           _Wait_I2C_Master 0E1B            ?_Stop_I2C_Master 0070        __Umul8_16@multiplier 0078  
 __size_of_Write_I2C_Master 000A                  _SSPCONbits 0014           __Umul8_16@product 0074  
