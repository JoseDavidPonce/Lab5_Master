

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 13:21:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386  0161                     __pidataBANK0:	
   387                           
   388                           ;initializer for _potf
   389  0161  347B               	retlw	123
   390  0162  3414               	retlw	20
   391  0163  344E               	retlw	78
   392  0164  3440               	retlw	64
   393  0013                     _SSPBUF	set	19
   394  000C                     _PIR1bits	set	12
   395  000B                     _INTCONbits	set	11
   396  0014                     _SSPCON	set	20
   397  0014                     _SSPCONbits	set	20
   398  0008                     _PORTDbits	set	8
   399  0008                     _PORTD	set	8
   400  0006                     _PORTB	set	6
   401  0091                     _SSPCON2bits	set	145
   402  008C                     _PIE1bits	set	140
   403  0087                     _TRISCbits	set	135
   404  0094                     _SSPSTAT	set	148
   405  0093                     _SSPADD	set	147
   406  0091                     _SSPCON2	set	145
   407  0088                     _TRISD	set	136
   408  0086                     _TRISB	set	134
   409  0189                     _ANSELH	set	393
   410  0188                     _ANSEL	set	392
   411                           
   412                           	psect	strings
   413  0003                     __pstrings:	
   414  0003                     stringtab:	
   415  0003                     __stringtab:	
   416  0003                     stringcode:	
   417                           ;	String table - string pointers are 1 byte each
   418                           
   419  0003                     stringdir:	
   420  0003  3000               	movlw	high stringdir
   421  0004  008A               	movwf	10
   422  0005  0804               	movf	4,w
   423  0006  0A84               	incf	4,f
   424  0007  0782               	addwf	2,f
   425  0008                     __stringbase:	
   426  0008  3400               	retlw	0
   427  0009                     __end_of__stringtab:	
   428  0009                     STR_1:	
   429  0009  3450               	retlw	80	;'P'
   430  000A  346F               	retlw	111	;'o'
   431  000B  3474               	retlw	116	;'t'
   432  000C  3420               	retlw	32	;' '
   433  000D  3420               	retlw	32	;' '
   434  000E  3420               	retlw	32	;' '
   435  000F  3446               	retlw	70	;'F'
   436  0010  346F               	retlw	111	;'o'
   437  0011  3474               	retlw	116	;'t'
   438  0012  346F               	retlw	111	;'o'
   439  0013  3420               	retlw	32	;' '
   440  0014  3420               	retlw	32	;' '
   441  0015  3443               	retlw	67	;'C'
   442  0016  346F               	retlw	111	;'o'
   443  0017  346E               	retlw	110	;'n'
   444  0018  3474               	retlw	116	;'t'
   445  0019  3400               	retlw	0
   446  001A                     STR_2:	
   447  001A  342E               	retlw	46	;'.'
   448  001B  3400               	retlw	0
   449  001C                     STR_4:	
   450  001C  3430               	retlw	48	;'0'
   451  001D  3400               	retlw	0
   452  001A                     
   453                           ; #config settings
   454  0000                     
   455                           	psect	cinit
   456  07DB                     start_initialization:	
   457  07DB                     __initialization:	
   458                           
   459                           ; Initialize objects allocated to BANK0
   460  07DB  120A  118A  2161  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   461  07E0  00C2               	movwf	__pdataBANK0& (0+127)
   462  07E1  120A  118A  2162  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   463  07E6  00C3               	movwf	(__pdataBANK0+1)& (0+127)
   464  07E7  120A  118A  2163  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   465  07EC  00C4               	movwf	(__pdataBANK0+2)& (0+127)
   466  07ED  120A  118A  2164  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   467  07F2  00C5               	movwf	(__pdataBANK0+3)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK0
   470  07F3  1383               	bcf	3,7	;select IRP bank0
   471  07F4  3020               	movlw	low __pbssBANK0
   472  07F5  0084               	movwf	4
   473  07F6  3038               	movlw	low (__pbssBANK0+24)
   474  07F7  120A  118A  216D  120A  118A  	fcall	clear_ram0
   475  07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  07FC                     __end_of__initialization:	
   479  07FC  0183               	clrf	3
   480  07FD  120A  118A  2DF4   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483  0020                     __pbssBANK0:	
   484  0020                     _fotof:	
   485  0020                     	ds	4
   486  0024                     _charcont2:	
   487  0024                     	ds	1
   488  0025                     _charcont1:	
   489  0025                     	ds	1
   490  0026                     _charpot3:	
   491  0026                     	ds	1
   492  0027                     _charfoto3:	
   493  0027                     	ds	1
   494  0028                     _charpot2:	
   495  0028                     	ds	1
   496  0029                     _charfoto2:	
   497  0029                     	ds	1
   498  002A                     _charpot1:	
   499  002A                     	ds	1
   500  002B                     _charfoto1:	
   501  002B                     	ds	1
   502  002C                     _dececont:	
   503  002C                     	ds	1
   504  002D                     _unicont:	
   505  002D                     	ds	1
   506  002E                     _deci2foto:	
   507  002E                     	ds	1
   508  002F                     _deci1foto:	
   509  002F                     	ds	1
   510  0030                     _unifoto:	
   511  0030                     	ds	1
   512  0031                     _deci2pot:	
   513  0031                     	ds	1
   514  0032                     _deci1pot:	
   515  0032                     	ds	1
   516  0033                     _unipot:	
   517  0033                     	ds	1
   518  0034                     _cont:	
   519  0034                     	ds	1
   520  0035                     _foto:	
   521  0035                     	ds	1
   522  0036                     _pot:	
   523  0036                     	ds	1
   524  0037                     _address:	
   525  0037                     	ds	1
   526                           
   527                           	psect	dataBANK0
   528  0042                     __pdataBANK0:	
   529  0042                     _potf:	
   530  0042                     	ds	4
   531                           
   532                           	psect	clrtext
   533  016D                     clear_ram0:	
   534                           ;	Called with FSR containing the base address, and
   535                           ;	W with the last address+1
   536                           
   537  016D  0064               	clrwdt	;clear the watchdog before getting into this loop
   538  016E                     clrloop0:	
   539  016E  0180               	clrf	0	;clear RAM location pointed to by FSR
   540  016F  0A84               	incf	4,f	;increment pointer
   541  0170  0604               	xorwf	4,w	;XOR with final address
   542  0171  1903               	btfsc	3,2	;have we reached the end yet?
   543  0172  3400               	retlw	0	;all done for this memory range, return
   544  0173  0604               	xorwf	4,w	;XOR again to restore value
   545  0174  296E               	goto	clrloop0	;do the next byte
   546                           
   547                           	psect	cstackCOMMON
   548  0070                     __pcstackCOMMON:	
   549  0070                     ?_Init_Port:	
   550  0070                     ??_Init_Port:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_LCD_INIT:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Start_I2C_Master:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_Start_I2C_Master:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Write_I2C_Master:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Stop_I2C_Master:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_Stop_I2C_Master:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_obtener_unidades:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_obtener_decimal_1:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_obtener_decimal_2:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_obtener_decenas:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_convertir_a_ascii:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_convertir_a_ascii:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_LCD_WRITE_STRING:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_LCD_WRITE_CHAR:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_LCD_WRITE_CHAR:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_LCD_CMD:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ??_LCD_CMD:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Wait_I2C_Master:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_Wait_I2C_Master:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_I2C_Master_Read:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?___wmul:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ?___awdiv:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     ?___lldiv:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     ?___fltol:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     Write_I2C_Master@a:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0070                     I2C_Master_Read@a:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0070                     ___wmul@multiplier:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___lldiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0070                     ___fltol@f1:	
   644                           ; 4 bytes @ 0x0
   645                           
   646                           
   647                           ; 4 bytes @ 0x0
   648  0070                     	ds	1
   649  0071                     convertir_a_ascii@a:	
   650                           
   651                           ; 1 bytes @ 0x1
   652  0071                     	ds	1
   653  0072                     ??_Write_I2C_Master:	
   654  0072                     ??_I2C_Master_Read:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0072                     convertir_a_ascii@temporal:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0072                     LCD_CMD@a:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0072                     LCD_WRITE_CHAR@a:	
   664                           ; 1 bytes @ 0x2
   665                           
   666  0072                     ___wmul@multiplicand:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ___awdiv@dividend:	
   670                           ; 2 bytes @ 0x2
   671                           
   672                           
   673                           ; 2 bytes @ 0x2
   674  0072                     	ds	1
   675  0073                     ??_LCD_INIT:	
   676  0073                     ?_LCD_SET_CURSOR:	
   677                           ; 1 bytes @ 0x3
   678                           
   679  0073                     ??_LCD_WRITE_STRING:	
   680                           ; 1 bytes @ 0x3
   681                           
   682  0073                     LCD_SET_CURSOR@b:	
   683                           ; 1 bytes @ 0x3
   684                           
   685  0073                     LCD_WRITE_STRING@i:	
   686                           ; 1 bytes @ 0x3
   687                           
   688                           
   689                           ; 2 bytes @ 0x3
   690  0073                     	ds	1
   691  0074                     ??_LCD_SET_CURSOR:	
   692  0074                     ??___wmul:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??___awdiv:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ??___fltol:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     I2C_Master_Read@temporal:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     ___wmul@product:	
   705                           ; 2 bytes @ 0x4
   706                           
   707  0074                     ___lldiv@dividend:	
   708                           ; 2 bytes @ 0x4
   709                           
   710                           
   711                           ; 4 bytes @ 0x4
   712  0074                     	ds	1
   713  0075                     LCD_SET_CURSOR@a:	
   714  0075                     LCD_WRITE_STRING@a:	
   715                           ; 1 bytes @ 0x5
   716                           
   717  0075                     ___awdiv@counter:	
   718                           ; 1 bytes @ 0x5
   719                           
   720                           
   721                           ; 1 bytes @ 0x5
   722  0075                     	ds	1
   723  0076                     ?___xxtofl:	
   724  0076                     LCD_SET_CURSOR@temporal:	
   725                           ; 4 bytes @ 0x6
   726                           
   727  0076                     ___awdiv@sign:	
   728                           ; 1 bytes @ 0x6
   729                           
   730  0076                     ___xxtofl@val:	
   731                           ; 1 bytes @ 0x6
   732                           
   733                           
   734                           ; 4 bytes @ 0x6
   735  0076                     	ds	1
   736  0077                     ___awdiv@quotient:	
   737                           
   738                           ; 2 bytes @ 0x7
   739  0077                     	ds	1
   740  0078                     ??___lldiv:	
   741                           
   742                           ; 1 bytes @ 0x8
   743  0078                     	ds	1
   744  0079                     ?___awmod:	
   745  0079                     ___fltol@sign1:	
   746                           ; 2 bytes @ 0x9
   747                           
   748  0079                     ___awmod@divisor:	
   749                           ; 1 bytes @ 0x9
   750                           
   751  0079                     ___lldiv@quotient:	
   752                           ; 2 bytes @ 0x9
   753                           
   754                           
   755                           ; 4 bytes @ 0x9
   756  0079                     	ds	1
   757  007A                     ??___xxtofl:	
   758  007A                     ___fltol@exp1:	
   759                           ; 1 bytes @ 0xA
   760                           
   761                           
   762                           ; 1 bytes @ 0xA
   763  007A                     	ds	1
   764  007B                     ___awmod@dividend:	
   765                           
   766                           ; 2 bytes @ 0xB
   767  007B                     	ds	2
   768  007D                     ??___awmod:	
   769  007D                     ___lldiv@counter:	
   770                           ; 1 bytes @ 0xD
   771                           
   772                           
   773                           ; 1 bytes @ 0xD
   774  007D                     	ds	1
   775                           
   776                           	psect	cstackBANK0
   777  0038                     __pcstackBANK0:	
   778  0038                     ?_Init_I2C_Master:	
   779  0038                     ___awmod@counter:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0038                     ___xxtofl@sign:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0038                     Init_I2C_Master@b:	
   786                           ; 1 bytes @ 0x0
   787                           
   788                           
   789                           ; 4 bytes @ 0x0
   790  0038                     	ds	1
   791  0039                     ___awmod@sign:	
   792  0039                     ___xxtofl@exp:	
   793                           ; 1 bytes @ 0x1
   794                           
   795                           
   796                           ; 1 bytes @ 0x1
   797  0039                     	ds	1
   798  003A                     ??_obtener_unidades:	
   799  003A                     ??_obtener_decimal_1:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  003A                     ??_obtener_decimal_2:	
   803                           ; 1 bytes @ 0x2
   804                           
   805  003A                     ??_obtener_decenas:	
   806                           ; 1 bytes @ 0x2
   807                           
   808  003A                     ___xxtofl@arg:	
   809                           ; 1 bytes @ 0x2
   810                           
   811                           
   812                           ; 4 bytes @ 0x2
   813  003A                     	ds	2
   814  003C                     ??_Init_I2C_Master:	
   815                           
   816                           ; 1 bytes @ 0x4
   817  003C                     	ds	1
   818  003D                     obtener_unidades@a:	
   819  003D                     obtener_decenas@a:	
   820                           ; 1 bytes @ 0x5
   821                           
   822  003D                     obtener_decimal_1@a:	
   823                           ; 1 bytes @ 0x5
   824                           
   825  003D                     obtener_decimal_2@a:	
   826                           ; 1 bytes @ 0x5
   827                           
   828                           
   829                           ; 1 bytes @ 0x5
   830  003D                     	ds	1
   831  003E                     obtener_unidades@temporal:	
   832  003E                     obtener_decenas@temporal:	
   833                           ; 1 bytes @ 0x6
   834                           
   835  003E                     obtener_decimal_1@temporal:	
   836                           ; 1 bytes @ 0x6
   837                           
   838  003E                     obtener_decimal_2@temporal:	
   839                           ; 1 bytes @ 0x6
   840                           
   841                           
   842                           ; 1 bytes @ 0x6
   843  003E                     	ds	2
   844  0040                     ??_main:	
   845                           
   846                           ; 1 bytes @ 0x8
   847  0040                     	ds	2
   848                           
   849                           	psect	maintext
   850  05F4                     __pmaintext:	
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 47 in file "Main_master.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : B00/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          0       2       0       0       0
   873 ;;      Totals:         0       2       0       0       0
   874 ;;Total ram usage:        2 bytes
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_I2C_Master_Read
   878 ;;		_Init_I2C_Master
   879 ;;		_Init_Port
   880 ;;		_LCD_INIT
   881 ;;		_LCD_SET_CURSOR
   882 ;;		_LCD_WRITE_CHAR
   883 ;;		_LCD_WRITE_STRING
   884 ;;		_Start_I2C_Master
   885 ;;		_Stop_I2C_Master
   886 ;;		_Write_I2C_Master
   887 ;;		___fltol
   888 ;;		___wmul
   889 ;;		___xxtofl
   890 ;;		_convertir_a_ascii
   891 ;;		_obtener_decenas
   892 ;;		_obtener_decimal_1
   893 ;;		_obtener_decimal_2
   894 ;;		_obtener_unidades
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _main
   902  05F4                     _main:	
   903  05F4                     l1585:	
   904                           ;incstack = 0
   905                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;Main_master.c: 48:     Init_Port();
   909  05F4  120A  118A  219E  120A  118A  	fcall	_Init_Port
   910  05F9                     l1587:	
   911                           
   912                           ;Main_master.c: 49:     Init_I2C_Master(100000);
   913  05F9  3000               	movlw	0
   914  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   915  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   916  05FC  00BB               	movwf	Init_I2C_Master@b+3
   917  05FD  3001               	movlw	1
   918  05FE  00BA               	movwf	Init_I2C_Master@b+2
   919  05FF  3086               	movlw	134
   920  0600  00B9               	movwf	Init_I2C_Master@b+1
   921  0601  30A0               	movlw	160
   922  0602  00B8               	movwf	Init_I2C_Master@b
   923  0603  120A  118A  2307  120A  118A  	fcall	_Init_I2C_Master
   924  0608                     l1589:	
   925                           
   926                           ;Main_master.c: 50:     LCD_INIT();
   927  0608  120A  118A  2343  120A  118A  	fcall	_LCD_INIT
   928  060D                     l1591:	
   929                           
   930                           ;Main_master.c: 52:         Start_I2C_Master();
   931  060D  120A  118A  2175  120A  118A  	fcall	_Start_I2C_Master
   932  0612                     l1593:	
   933                           
   934                           ;Main_master.c: 53:         Write_I2C_Master(0x11);
   935  0612  3011               	movlw	17
   936  0613  00F0               	movwf	Write_I2C_Master@a
   937  0614  3000               	movlw	0
   938  0615  00F1               	movwf	Write_I2C_Master@a+1
   939  0616  120A  118A  2187  120A  118A  	fcall	_Write_I2C_Master
   940  061B                     l1595:	
   941                           
   942                           ;Main_master.c: 54:         pot = I2C_Master_Read(0);
   943  061B  3000               	movlw	0
   944  061C  00F0               	movwf	I2C_Master_Read@a
   945  061D  00F1               	movwf	I2C_Master_Read@a+1
   946  061E  120A  118A  22D9  120A  118A  	fcall	_I2C_Master_Read
   947  0623  0870               	movf	?_I2C_Master_Read,w
   948  0624  1283               	bcf	3,5	;RP0=0, select bank0
   949  0625  1303               	bcf	3,6	;RP1=0, select bank0
   950  0626  00C0               	movwf	??_main
   951  0627  0840               	movf	??_main,w
   952  0628  00B6               	movwf	_pot
   953  0629                     l1597:	
   954                           
   955                           ;Main_master.c: 55:         Write_I2C_Master(0x21);
   956  0629  3021               	movlw	33
   957  062A  00F0               	movwf	Write_I2C_Master@a
   958  062B  3000               	movlw	0
   959  062C  00F1               	movwf	Write_I2C_Master@a+1
   960  062D  120A  118A  2187  120A  118A  	fcall	_Write_I2C_Master
   961  0632                     l1599:	
   962                           
   963                           ;Main_master.c: 56:         foto = I2C_Master_Read(0);
   964  0632  3000               	movlw	0
   965  0633  00F0               	movwf	I2C_Master_Read@a
   966  0634  00F1               	movwf	I2C_Master_Read@a+1
   967  0635  120A  118A  22D9  120A  118A  	fcall	_I2C_Master_Read
   968  063A  0870               	movf	?_I2C_Master_Read,w
   969  063B  1283               	bcf	3,5	;RP0=0, select bank0
   970  063C  1303               	bcf	3,6	;RP1=0, select bank0
   971  063D  00C0               	movwf	??_main
   972  063E  0840               	movf	??_main,w
   973  063F  00B5               	movwf	_foto
   974  0640                     l1601:	
   975                           
   976                           ;Main_master.c: 57:         Write_I2C_Master(0x31);
   977  0640  3031               	movlw	49
   978  0641  00F0               	movwf	Write_I2C_Master@a
   979  0642  3000               	movlw	0
   980  0643  00F1               	movwf	Write_I2C_Master@a+1
   981  0644  120A  118A  2187  120A  118A  	fcall	_Write_I2C_Master
   982  0649                     l1603:	
   983                           
   984                           ;Main_master.c: 58:         cont = I2C_Master_Read(0);
   985  0649  3000               	movlw	0
   986  064A  00F0               	movwf	I2C_Master_Read@a
   987  064B  00F1               	movwf	I2C_Master_Read@a+1
   988  064C  120A  118A  22D9  120A  118A  	fcall	_I2C_Master_Read
   989  0651  0870               	movf	?_I2C_Master_Read,w
   990  0652  1283               	bcf	3,5	;RP0=0, select bank0
   991  0653  1303               	bcf	3,6	;RP1=0, select bank0
   992  0654  00C0               	movwf	??_main
   993  0655  0840               	movf	??_main,w
   994  0656  00B4               	movwf	_cont
   995  0657                     l1605:	
   996                           
   997                           ;Main_master.c: 59:         Stop_I2C_Master();
   998  0657  120A  118A  217E  120A  118A  	fcall	_Stop_I2C_Master
   999  065C                     l1607:	
  1000                           
  1001                           ;Main_master.c: 62:         fotof = foto*(5/255);
  1002  065C  3000               	movlw	0
  1003  065D  00F2               	movwf	___wmul@multiplicand
  1004  065E  00F3               	movwf	___wmul@multiplicand+1
  1005  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0661  0835               	movf	_foto,w
  1008  0662  00C0               	movwf	??_main
  1009  0663  01C1               	clrf	??_main+1
  1010  0664  0840               	movf	??_main,w
  1011  0665  00F0               	movwf	___wmul@multiplier
  1012  0666  0841               	movf	??_main+1,w
  1013  0667  00F1               	movwf	___wmul@multiplier+1
  1014  0668  120A  118A  223C  120A  118A  	fcall	___wmul
  1015  066D  0870               	movf	?___wmul,w
  1016  066E  00F6               	movwf	___xxtofl@val
  1017  066F  0871               	movf	?___wmul+1,w
  1018  0670  00F7               	movwf	___xxtofl@val+1
  1019  0671  3000               	movlw	0
  1020  0672  1BF7               	btfsc	___xxtofl@val+1,7
  1021  0673  30FF               	movlw	255
  1022  0674  00F8               	movwf	___xxtofl@val+2
  1023  0675  00F9               	movwf	___xxtofl@val+3
  1024  0676  3001               	movlw	1
  1025  0677  120A  118A  2538  120A  118A  	fcall	___xxtofl
  1026  067C  0879               	movf	?___xxtofl+3,w
  1027  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1028  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1029  067F  00A3               	movwf	_fotof+3
  1030  0680  0878               	movf	?___xxtofl+2,w
  1031  0681  00A2               	movwf	_fotof+2
  1032  0682  0877               	movf	?___xxtofl+1,w
  1033  0683  00A1               	movwf	_fotof+1
  1034  0684  0876               	movf	?___xxtofl,w
  1035  0685  00A0               	movwf	_fotof
  1036  0686                     l1609:	
  1037                           
  1038                           ;Main_master.c: 64:         unipot = obtener_unidades(potf);
  1039  0686  3003               	movlw	3
  1040  0687  120A  118A  21D8  120A  118A  	fcall	_obtener_unidades
  1041  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1042  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1043  068E  00C0               	movwf	??_main
  1044  068F  0840               	movf	??_main,w
  1045  0690  00B3               	movwf	_unipot
  1046  0691                     l1611:	
  1047                           
  1048                           ;Main_master.c: 65:         deci1pot = obtener_decimal_1(potf);
  1049  0691  3003               	movlw	3
  1050  0692  120A  118A  2289  120A  118A  	fcall	_obtener_decimal_1
  1051  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0699  00C0               	movwf	??_main
  1054  069A  0840               	movf	??_main,w
  1055  069B  00B2               	movwf	_deci1pot
  1056  069C                     l1613:	
  1057                           
  1058                           ;Main_master.c: 66:         deci2pot = obtener_decimal_2(potf);
  1059  069C  3003               	movlw	3
  1060  069D  120A  118A  22B1  120A  118A  	fcall	_obtener_decimal_2
  1061  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1062  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1063  06A4  00C0               	movwf	??_main
  1064  06A5  0840               	movf	??_main,w
  1065  06A6  00B1               	movwf	_deci2pot
  1066  06A7                     l1615:	
  1067                           
  1068                           ;Main_master.c: 68:         unifoto = obtener_unidades(fotof);
  1069  06A7  0823               	movf	_fotof+3,w
  1070  06A8  00F3               	movwf	___fltol@f1+3
  1071  06A9  0822               	movf	_fotof+2,w
  1072  06AA  00F2               	movwf	___fltol@f1+2
  1073  06AB  0821               	movf	_fotof+1,w
  1074  06AC  00F1               	movwf	___fltol@f1+1
  1075  06AD  0820               	movf	_fotof,w
  1076  06AE  00F0               	movwf	___fltol@f1
  1077  06AF  120A  118A  24BE  120A  118A  	fcall	___fltol
  1078  06B4  0870               	movf	?___fltol,w
  1079  06B5  120A  118A  21D8  120A  118A  	fcall	_obtener_unidades
  1080  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1081  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1082  06BC  00C0               	movwf	??_main
  1083  06BD  0840               	movf	??_main,w
  1084  06BE  00B0               	movwf	_unifoto
  1085  06BF                     l1617:	
  1086                           
  1087                           ;Main_master.c: 69:         deci1foto = obtener_decimal_1(fotof);
  1088  06BF  0823               	movf	_fotof+3,w
  1089  06C0  00F3               	movwf	___fltol@f1+3
  1090  06C1  0822               	movf	_fotof+2,w
  1091  06C2  00F2               	movwf	___fltol@f1+2
  1092  06C3  0821               	movf	_fotof+1,w
  1093  06C4  00F1               	movwf	___fltol@f1+1
  1094  06C5  0820               	movf	_fotof,w
  1095  06C6  00F0               	movwf	___fltol@f1
  1096  06C7  120A  118A  24BE  120A  118A  	fcall	___fltol
  1097  06CC  0870               	movf	?___fltol,w
  1098  06CD  120A  118A  2289  120A  118A  	fcall	_obtener_decimal_1
  1099  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1100  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1101  06D4  00C0               	movwf	??_main
  1102  06D5  0840               	movf	??_main,w
  1103  06D6  00AF               	movwf	_deci1foto
  1104  06D7                     l1619:	
  1105                           
  1106                           ;Main_master.c: 70:         deci2foto = obtener_decimal_2(fotof);
  1107  06D7  0823               	movf	_fotof+3,w
  1108  06D8  00F3               	movwf	___fltol@f1+3
  1109  06D9  0822               	movf	_fotof+2,w
  1110  06DA  00F2               	movwf	___fltol@f1+2
  1111  06DB  0821               	movf	_fotof+1,w
  1112  06DC  00F1               	movwf	___fltol@f1+1
  1113  06DD  0820               	movf	_fotof,w
  1114  06DE  00F0               	movwf	___fltol@f1
  1115  06DF  120A  118A  24BE  120A  118A  	fcall	___fltol
  1116  06E4  0870               	movf	?___fltol,w
  1117  06E5  120A  118A  22B1  120A  118A  	fcall	_obtener_decimal_2
  1118  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1119  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1120  06EC  00C0               	movwf	??_main
  1121  06ED  0840               	movf	??_main,w
  1122  06EE  00AE               	movwf	_deci2foto
  1123  06EF                     l1621:	
  1124                           
  1125                           ;Main_master.c: 72:         unicont = obtener_unidades(cont);
  1126  06EF  0834               	movf	_cont,w
  1127  06F0  120A  118A  21D8  120A  118A  	fcall	_obtener_unidades
  1128  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1129  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1130  06F7  00C0               	movwf	??_main
  1131  06F8  0840               	movf	??_main,w
  1132  06F9  00AD               	movwf	_unicont
  1133  06FA                     l1623:	
  1134                           
  1135                           ;Main_master.c: 73:         dececont = obtener_decenas(cont);
  1136  06FA  0834               	movf	_cont,w
  1137  06FB  120A  118A  2261  120A  118A  	fcall	_obtener_decenas
  1138  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0702  00C0               	movwf	??_main
  1141  0703  0840               	movf	??_main,w
  1142  0704  00AC               	movwf	_dececont
  1143  0705                     l1625:	
  1144                           
  1145                           ;Main_master.c: 75:         charpot1 = convertir_a_ascii(unipot);
  1146  0705  0833               	movf	_unipot,w
  1147  0706  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1148  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1149  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1150  070D  00C0               	movwf	??_main
  1151  070E  0840               	movf	??_main,w
  1152  070F  00AA               	movwf	_charpot1
  1153  0710                     l1627:	
  1154                           
  1155                           ;Main_master.c: 76:         charpot2 = convertir_a_ascii(deci1pot);
  1156  0710  0832               	movf	_deci1pot,w
  1157  0711  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1158  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0718  00C0               	movwf	??_main
  1161  0719  0840               	movf	??_main,w
  1162  071A  00A8               	movwf	_charpot2
  1163  071B                     l1629:	
  1164                           
  1165                           ;Main_master.c: 77:         charpot3 = convertir_a_ascii(deci2pot);
  1166  071B  0831               	movf	_deci2pot,w
  1167  071C  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1168  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0723  00C0               	movwf	??_main
  1171  0724  0840               	movf	??_main,w
  1172  0725  00A6               	movwf	_charpot3
  1173  0726                     l1631:	
  1174                           
  1175                           ;Main_master.c: 79:         charfoto1 = convertir_a_ascii(unifoto);
  1176  0726  0830               	movf	_unifoto,w
  1177  0727  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1178  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1179  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1180  072E  00C0               	movwf	??_main
  1181  072F  0840               	movf	??_main,w
  1182  0730  00AB               	movwf	_charfoto1
  1183  0731                     l1633:	
  1184                           
  1185                           ;Main_master.c: 80:         charfoto2 = convertir_a_ascii(deci1foto);
  1186  0731  082F               	movf	_deci1foto,w
  1187  0732  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1188  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0739  00C0               	movwf	??_main
  1191  073A  0840               	movf	??_main,w
  1192  073B  00A9               	movwf	_charfoto2
  1193  073C                     l1635:	
  1194                           
  1195                           ;Main_master.c: 81:         charfoto3 = convertir_a_ascii(deci2foto);
  1196  073C  082E               	movf	_deci2foto,w
  1197  073D  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1198  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0744  00C0               	movwf	??_main
  1201  0745  0840               	movf	??_main,w
  1202  0746  00A7               	movwf	_charfoto3
  1203  0747                     l1637:	
  1204                           
  1205                           ;Main_master.c: 83:         charcont1 = convertir_a_ascii(unicont);
  1206  0747  082D               	movf	_unicont,w
  1207  0748  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1208  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1209  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1210  074F  00C0               	movwf	??_main
  1211  0750  0840               	movf	??_main,w
  1212  0751  00A5               	movwf	_charcont1
  1213  0752                     l1639:	
  1214                           
  1215                           ;Main_master.c: 84:         charcont2 = convertir_a_ascii(dececont);
  1216  0752  082C               	movf	_dececont,w
  1217  0753  120A  118A  2165  120A  118A  	fcall	_convertir_a_ascii
  1218  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1220  075A  00C0               	movwf	??_main
  1221  075B  0840               	movf	??_main,w
  1222  075C  00A4               	movwf	_charcont2
  1223  075D                     l1641:	
  1224                           
  1225                           ;Main_master.c: 86:         LCD_SET_CURSOR (1,1);
  1226  075D  01F3               	clrf	LCD_SET_CURSOR@b
  1227  075E  0AF3               	incf	LCD_SET_CURSOR@b,f
  1228  075F  3001               	movlw	1
  1229  0760  120A  118A  21F3  120A  118A  	fcall	_LCD_SET_CURSOR
  1230  0765                     l1643:	
  1231                           
  1232                           ;Main_master.c: 87:         LCD_WRITE_STRING ("Pot   Foto  Cont");
  1233  0765  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1234  0766  120A  118A  2217  120A  118A  	fcall	_LCD_WRITE_STRING
  1235  076B                     l1645:	
  1236                           
  1237                           ;Main_master.c: 88:         LCD_SET_CURSOR (2,1);
  1238  076B  01F3               	clrf	LCD_SET_CURSOR@b
  1239  076C  0AF3               	incf	LCD_SET_CURSOR@b,f
  1240  076D  3002               	movlw	2
  1241  076E  120A  118A  21F3  120A  118A  	fcall	_LCD_SET_CURSOR
  1242  0773                     l1647:	
  1243                           
  1244                           ;Main_master.c: 89:         LCD_WRITE_CHAR (charpot1);
  1245  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0775  082A               	movf	_charpot1,w
  1248  0776  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1249  077B                     l1649:	
  1250                           
  1251                           ;Main_master.c: 90:         LCD_WRITE_STRING(".");
  1252  077B  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1253  077C  120A  118A  2217  120A  118A  	fcall	_LCD_WRITE_STRING
  1254  0781                     l1651:	
  1255                           
  1256                           ;Main_master.c: 91:         LCD_WRITE_CHAR (charpot2);
  1257  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0783  0828               	movf	_charpot2,w
  1260  0784  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1261  0789                     l1653:	
  1262                           
  1263                           ;Main_master.c: 92:         LCD_WRITE_CHAR (charpot3);
  1264  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1265  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1266  078B  0826               	movf	_charpot3,w
  1267  078C  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1268  0791                     l1655:	
  1269                           
  1270                           ;Main_master.c: 94:         LCD_SET_CURSOR (2,7);
  1271  0791  3007               	movlw	7
  1272  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0794  00C0               	movwf	??_main
  1275  0795  0840               	movf	??_main,w
  1276  0796  00F3               	movwf	LCD_SET_CURSOR@b
  1277  0797  3002               	movlw	2
  1278  0798  120A  118A  21F3  120A  118A  	fcall	_LCD_SET_CURSOR
  1279  079D                     l1657:	
  1280                           
  1281                           ;Main_master.c: 95:         LCD_WRITE_CHAR (charfoto1);
  1282  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1283  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1284  079F  082B               	movf	_charfoto1,w
  1285  07A0  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1286  07A5                     l1659:	
  1287                           
  1288                           ;Main_master.c: 96:         LCD_WRITE_STRING(".");
  1289  07A5  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1290  07A6  120A  118A  2217  120A  118A  	fcall	_LCD_WRITE_STRING
  1291  07AB                     l1661:	
  1292                           
  1293                           ;Main_master.c: 97:         LCD_WRITE_CHAR (charfoto2);
  1294  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1295  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1296  07AD  0829               	movf	_charfoto2,w
  1297  07AE  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1298  07B3                     l1663:	
  1299                           
  1300                           ;Main_master.c: 98:         LCD_WRITE_CHAR (charfoto3);
  1301  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1302  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1303  07B5  0827               	movf	_charfoto3,w
  1304  07B6  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1305  07BB                     l1665:	
  1306                           
  1307                           ;Main_master.c: 100:         LCD_SET_CURSOR (2,13);
  1308  07BB  300D               	movlw	13
  1309  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1310  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1311  07BE  00C0               	movwf	??_main
  1312  07BF  0840               	movf	??_main,w
  1313  07C0  00F3               	movwf	LCD_SET_CURSOR@b
  1314  07C1  3002               	movlw	2
  1315  07C2  120A  118A  21F3  120A  118A  	fcall	_LCD_SET_CURSOR
  1316  07C7                     l1667:	
  1317                           
  1318                           ;Main_master.c: 101:         LCD_WRITE_CHAR (charcont1);
  1319  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1320  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1321  07C9  0825               	movf	_charcont1,w
  1322  07CA  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1323  07CF                     l1669:	
  1324                           
  1325                           ;Main_master.c: 102:         LCD_WRITE_CHAR (charcont2);
  1326  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1327  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1328  07D1  0824               	movf	_charcont2,w
  1329  07D2  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  1330  07D7  2E0D               	goto	l1591
  1331  07D8  120A  118A  2800   	ljmp	start
  1332  07DB                     __end_of_main:	
  1333                           
  1334                           	psect	text1
  1335  01D8                     __ptext1:	
  1336 ;; *************** function _obtener_unidades *****************
  1337 ;; Defined at:
  1338 ;;		line 116 in file "Main_master.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  a               1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  a               1    5[BANK0 ] unsigned char 
  1343 ;;  temporal        1    6[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      unsigned char 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       2       0       0       0
  1355 ;;      Temps:          0       3       0       0       0
  1356 ;;      Totals:         0       5       0       0       0
  1357 ;;Total ram usage:        5 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    1
  1360 ;; This function calls:
  1361 ;;		___awmod
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _obtener_unidades
  1369  01D8                     _obtener_unidades:	
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _obtener_unidades: [wreg+status,2+status,0+pclath+cstack]
  1373                           ;obtener_unidades@a stored from wreg
  1374  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1375  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1376  01DA  00BD               	movwf	obtener_unidades@a
  1377  01DB                     l1455:	
  1378                           
  1379                           ;Main_master.c: 117:     uint8_t temporal;;Main_master.c: 118:     temporal = a%10;
  1380  01DB  300A               	movlw	10
  1381  01DC  00F9               	movwf	___awmod@divisor
  1382  01DD  3000               	movlw	0
  1383  01DE  00FA               	movwf	___awmod@divisor+1
  1384  01DF  083D               	movf	obtener_unidades@a,w
  1385  01E0  00BA               	movwf	??_obtener_unidades
  1386  01E1  01BB               	clrf	??_obtener_unidades+1
  1387  01E2  083A               	movf	??_obtener_unidades,w
  1388  01E3  00FB               	movwf	___awmod@dividend
  1389  01E4  083B               	movf	??_obtener_unidades+1,w
  1390  01E5  00FC               	movwf	___awmod@dividend+1
  1391  01E6  120A  118A  2396  120A  118A  	fcall	___awmod
  1392  01EB  0879               	movf	?___awmod,w
  1393  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1394  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1395  01EE  00BC               	movwf	??_obtener_unidades+2
  1396  01EF  083C               	movf	??_obtener_unidades+2,w
  1397  01F0  00BE               	movwf	obtener_unidades@temporal
  1398  01F1                     l1457:	
  1399                           
  1400                           ;Main_master.c: 119:     return temporal;
  1401  01F1  083E               	movf	obtener_unidades@temporal,w
  1402  01F2                     l100:	
  1403  01F2  0008               	return
  1404  01F3                     __end_of_obtener_unidades:	
  1405                           
  1406                           	psect	text2
  1407  02B1                     __ptext2:	
  1408 ;; *************** function _obtener_decimal_2 *****************
  1409 ;; Defined at:
  1410 ;;		line 132 in file "Main_master.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  a               1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  a               1    5[BANK0 ] unsigned char 
  1415 ;;  temporal        1    6[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       2       0       0       0
  1427 ;;      Temps:          0       3       0       0       0
  1428 ;;      Totals:         0       5       0       0       0
  1429 ;;Total ram usage:        5 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    1
  1432 ;; This function calls:
  1433 ;;		___awmod
  1434 ;;		___wmul
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _obtener_decimal_2
  1442  02B1                     _obtener_decimal_2:	
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _obtener_decimal_2: [wreg+status,2+status,0+pclath+cstack]
  1446                           ;obtener_decimal_2@a stored from wreg
  1447  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1448  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1449  02B3  00BD               	movwf	obtener_decimal_2@a
  1450  02B4                     l1467:	
  1451                           
  1452                           ;Main_master.c: 133:     uint8_t temporal;;Main_master.c: 134:     temporal = (a*100)%10
      +                          ;
  1453  02B4  300A               	movlw	10
  1454  02B5  00F9               	movwf	___awmod@divisor
  1455  02B6  3000               	movlw	0
  1456  02B7  00FA               	movwf	___awmod@divisor+1
  1457  02B8  083D               	movf	obtener_decimal_2@a,w
  1458  02B9  00BA               	movwf	??_obtener_decimal_2
  1459  02BA  01BB               	clrf	??_obtener_decimal_2+1
  1460  02BB  083A               	movf	??_obtener_decimal_2,w
  1461  02BC  00F0               	movwf	___wmul@multiplier
  1462  02BD  083B               	movf	??_obtener_decimal_2+1,w
  1463  02BE  00F1               	movwf	___wmul@multiplier+1
  1464  02BF  3064               	movlw	100
  1465  02C0  00F2               	movwf	___wmul@multiplicand
  1466  02C1  3000               	movlw	0
  1467  02C2  00F3               	movwf	___wmul@multiplicand+1
  1468  02C3  120A  118A  223C  120A  118A  	fcall	___wmul
  1469  02C8  0871               	movf	?___wmul+1,w
  1470  02C9  00FC               	movwf	___awmod@dividend+1
  1471  02CA  0870               	movf	?___wmul,w
  1472  02CB  00FB               	movwf	___awmod@dividend
  1473  02CC  120A  118A  2396  120A  118A  	fcall	___awmod
  1474  02D1  0879               	movf	?___awmod,w
  1475  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1476  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1477  02D4  00BC               	movwf	??_obtener_decimal_2+2
  1478  02D5  083C               	movf	??_obtener_decimal_2+2,w
  1479  02D6  00BE               	movwf	obtener_decimal_2@temporal
  1480  02D7                     l1469:	
  1481                           
  1482                           ;Main_master.c: 135:     return temporal;
  1483  02D7  083E               	movf	obtener_decimal_2@temporal,w
  1484  02D8                     l109:	
  1485  02D8  0008               	return
  1486  02D9                     __end_of_obtener_decimal_2:	
  1487                           
  1488                           	psect	text3
  1489  0289                     __ptext3:	
  1490 ;; *************** function _obtener_decimal_1 *****************
  1491 ;; Defined at:
  1492 ;;		line 127 in file "Main_master.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  a               1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  a               1    5[BANK0 ] unsigned char 
  1497 ;;  temporal        1    6[BANK0 ] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         0       2       0       0       0
  1509 ;;      Temps:          0       3       0       0       0
  1510 ;;      Totals:         0       5       0       0       0
  1511 ;;Total ram usage:        5 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		___awmod
  1516 ;;		___wmul
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _obtener_decimal_1
  1524  0289                     _obtener_decimal_1:	
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _obtener_decimal_1: [wreg+status,2+status,0+pclath+cstack]
  1528                           ;obtener_decimal_1@a stored from wreg
  1529  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1530  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1531  028B  00BD               	movwf	obtener_decimal_1@a
  1532  028C                     l1461:	
  1533                           
  1534                           ;Main_master.c: 128:     uint8_t temporal;;Main_master.c: 129:     temporal = (a*10)%10;
  1535  028C  300A               	movlw	10
  1536  028D  00F9               	movwf	___awmod@divisor
  1537  028E  3000               	movlw	0
  1538  028F  00FA               	movwf	___awmod@divisor+1
  1539  0290  083D               	movf	obtener_decimal_1@a,w
  1540  0291  00BA               	movwf	??_obtener_decimal_1
  1541  0292  01BB               	clrf	??_obtener_decimal_1+1
  1542  0293  083A               	movf	??_obtener_decimal_1,w
  1543  0294  00F0               	movwf	___wmul@multiplier
  1544  0295  083B               	movf	??_obtener_decimal_1+1,w
  1545  0296  00F1               	movwf	___wmul@multiplier+1
  1546  0297  300A               	movlw	10
  1547  0298  00F2               	movwf	___wmul@multiplicand
  1548  0299  3000               	movlw	0
  1549  029A  00F3               	movwf	___wmul@multiplicand+1
  1550  029B  120A  118A  223C  120A  118A  	fcall	___wmul
  1551  02A0  0871               	movf	?___wmul+1,w
  1552  02A1  00FC               	movwf	___awmod@dividend+1
  1553  02A2  0870               	movf	?___wmul,w
  1554  02A3  00FB               	movwf	___awmod@dividend
  1555  02A4  120A  118A  2396  120A  118A  	fcall	___awmod
  1556  02A9  0879               	movf	?___awmod,w
  1557  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1558  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1559  02AC  00BC               	movwf	??_obtener_decimal_1+2
  1560  02AD  083C               	movf	??_obtener_decimal_1+2,w
  1561  02AE  00BE               	movwf	obtener_decimal_1@temporal
  1562  02AF                     l1463:	
  1563                           
  1564                           ;Main_master.c: 130:     return temporal;
  1565  02AF  083E               	movf	obtener_decimal_1@temporal,w
  1566  02B0                     l106:	
  1567  02B0  0008               	return
  1568  02B1                     __end_of_obtener_decimal_1:	
  1569                           
  1570                           	psect	text4
  1571  023C                     __ptext4:	
  1572 ;; *************** function ___wmul *****************
  1573 ;; Defined at:
  1574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  multiplier      2    0[COMMON] unsigned int 
  1577 ;;  multiplicand    2    2[COMMON] unsigned int 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  product         2    4[COMMON] unsigned int 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  2    0[COMMON] unsigned int 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         4       0       0       0       0
  1590 ;;      Locals:         2       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         6       0       0       0       0
  1593 ;;Total ram usage:        6 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;;		_obtener_decimal_1
  1600 ;;		_obtener_decimal_2
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function ___wmul
  1606  023C                     ___wmul:	
  1607  023C                     l1265:	
  1608                           ;incstack = 0
  1609                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1610                           
  1611  023C  01F4               	clrf	___wmul@product
  1612  023D  01F5               	clrf	___wmul@product+1
  1613  023E                     l1267:	
  1614  023E  1C70               	btfss	___wmul@multiplier,0
  1615  023F  2A41               	goto	u641
  1616  0240  2A42               	goto	u640
  1617  0241                     u641:	
  1618  0241  2A48               	goto	l285
  1619  0242                     u640:	
  1620  0242                     l1269:	
  1621  0242  0872               	movf	___wmul@multiplicand,w
  1622  0243  07F4               	addwf	___wmul@product,f
  1623  0244  1803               	skipnc
  1624  0245  0AF5               	incf	___wmul@product+1,f
  1625  0246  0873               	movf	___wmul@multiplicand+1,w
  1626  0247  07F5               	addwf	___wmul@product+1,f
  1627  0248                     l285:	
  1628  0248  3001               	movlw	1
  1629  0249                     u655:	
  1630  0249  1003               	clrc
  1631  024A  0DF2               	rlf	___wmul@multiplicand,f
  1632  024B  0DF3               	rlf	___wmul@multiplicand+1,f
  1633  024C  3EFF               	addlw	-1
  1634  024D  1D03               	skipz
  1635  024E  2A49               	goto	u655
  1636  024F                     l1271:	
  1637  024F  3001               	movlw	1
  1638  0250                     u665:	
  1639  0250  1003               	clrc
  1640  0251  0CF1               	rrf	___wmul@multiplier+1,f
  1641  0252  0CF0               	rrf	___wmul@multiplier,f
  1642  0253  3EFF               	addlw	-1
  1643  0254  1D03               	skipz
  1644  0255  2A50               	goto	u665
  1645  0256                     l1273:	
  1646  0256  0870               	movf	___wmul@multiplier,w
  1647  0257  0471               	iorwf	___wmul@multiplier+1,w
  1648  0258  1D03               	btfss	3,2
  1649  0259  2A5B               	goto	u671
  1650  025A  2A5C               	goto	u670
  1651  025B                     u671:	
  1652  025B  2A3E               	goto	l1267
  1653  025C                     u670:	
  1654  025C                     l1275:	
  1655  025C  0875               	movf	___wmul@product+1,w
  1656  025D  00F1               	movwf	?___wmul+1
  1657  025E  0874               	movf	___wmul@product,w
  1658  025F  00F0               	movwf	?___wmul
  1659  0260                     l287:	
  1660  0260  0008               	return
  1661  0261                     __end_of___wmul:	
  1662                           
  1663                           	psect	text5
  1664  0261                     __ptext5:	
  1665 ;; *************** function _obtener_decenas *****************
  1666 ;; Defined at:
  1667 ;;		line 121 in file "Main_master.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  a               1    wreg     unsigned char 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  a               1    5[BANK0 ] unsigned char 
  1672 ;;  temporal        1    6[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      unsigned char 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       2       0       0       0
  1684 ;;      Temps:          0       3       0       0       0
  1685 ;;      Totals:         0       5       0       0       0
  1686 ;;Total ram usage:        5 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    1
  1689 ;; This function calls:
  1690 ;;		___awdiv
  1691 ;;		___awmod
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _obtener_decenas
  1699  0261                     _obtener_decenas:	
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _obtener_decenas: [wreg+status,2+status,0+pclath+cstack]
  1703                           ;obtener_decenas@a stored from wreg
  1704  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0263  00BD               	movwf	obtener_decenas@a
  1707  0264                     l1473:	
  1708                           
  1709                           ;Main_master.c: 122:     uint8_t temporal;;Main_master.c: 123:     temporal = (a/10)%10;
  1710  0264  300A               	movlw	10
  1711  0265  00F9               	movwf	___awmod@divisor
  1712  0266  3000               	movlw	0
  1713  0267  00FA               	movwf	___awmod@divisor+1
  1714  0268  300A               	movlw	10
  1715  0269  00F0               	movwf	___awdiv@divisor
  1716  026A  3000               	movlw	0
  1717  026B  00F1               	movwf	___awdiv@divisor+1
  1718  026C  083D               	movf	obtener_decenas@a,w
  1719  026D  00BA               	movwf	??_obtener_decenas
  1720  026E  01BB               	clrf	??_obtener_decenas+1
  1721  026F  083A               	movf	??_obtener_decenas,w
  1722  0270  00F2               	movwf	___awdiv@dividend
  1723  0271  083B               	movf	??_obtener_decenas+1,w
  1724  0272  00F3               	movwf	___awdiv@dividend+1
  1725  0273  120A  118A  2457  120A  118A  	fcall	___awdiv
  1726  0278  0871               	movf	?___awdiv+1,w
  1727  0279  00FC               	movwf	___awmod@dividend+1
  1728  027A  0870               	movf	?___awdiv,w
  1729  027B  00FB               	movwf	___awmod@dividend
  1730  027C  120A  118A  2396  120A  118A  	fcall	___awmod
  1731  0281  0879               	movf	?___awmod,w
  1732  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0284  00BC               	movwf	??_obtener_decenas+2
  1735  0285  083C               	movf	??_obtener_decenas+2,w
  1736  0286  00BE               	movwf	obtener_decenas@temporal
  1737  0287                     l1475:	
  1738                           
  1739                           ;Main_master.c: 124:     return temporal;
  1740  0287  083E               	movf	obtener_decenas@temporal,w
  1741  0288                     l103:	
  1742  0288  0008               	return
  1743  0289                     __end_of_obtener_decenas:	
  1744                           
  1745                           	psect	text6
  1746  0396                     __ptext6:	
  1747 ;; *************** function ___awmod *****************
  1748 ;; Defined at:
  1749 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  divisor         2    9[COMMON] int 
  1752 ;;  dividend        2   11[COMMON] int 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  sign            1    1[BANK0 ] unsigned char 
  1755 ;;  counter         1    0[BANK0 ] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2    9[COMMON] int 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         4       0       0       0       0
  1766 ;;      Locals:         0       2       0       0       0
  1767 ;;      Temps:          1       0       0       0       0
  1768 ;;      Totals:         5       2       0       0       0
  1769 ;;Total ram usage:        7 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_obtener_unidades
  1775 ;;		_obtener_decenas
  1776 ;;		_obtener_decimal_1
  1777 ;;		_obtener_decimal_2
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function ___awmod
  1783  0396                     ___awmod:	
  1784  0396                     l1347:	
  1785                           ;incstack = 0
  1786                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1787                           
  1788  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0398  01B9               	clrf	___awmod@sign
  1791  0399                     l1349:	
  1792  0399  1FFC               	btfss	___awmod@dividend+1,7
  1793  039A  2B9C               	goto	u851
  1794  039B  2B9D               	goto	u850
  1795  039C                     u851:	
  1796  039C  2BA4               	goto	l1355
  1797  039D                     u850:	
  1798  039D                     l1351:	
  1799  039D  09FB               	comf	___awmod@dividend,f
  1800  039E  09FC               	comf	___awmod@dividend+1,f
  1801  039F  0AFB               	incf	___awmod@dividend,f
  1802  03A0  1903               	skipnz
  1803  03A1  0AFC               	incf	___awmod@dividend+1,f
  1804  03A2                     l1353:	
  1805  03A2  01B9               	clrf	___awmod@sign
  1806  03A3  0AB9               	incf	___awmod@sign,f
  1807  03A4                     l1355:	
  1808  03A4  1FFA               	btfss	___awmod@divisor+1,7
  1809  03A5  2BA7               	goto	u861
  1810  03A6  2BA8               	goto	u860
  1811  03A7                     u861:	
  1812  03A7  2BAD               	goto	l1359
  1813  03A8                     u860:	
  1814  03A8                     l1357:	
  1815  03A8  09F9               	comf	___awmod@divisor,f
  1816  03A9  09FA               	comf	___awmod@divisor+1,f
  1817  03AA  0AF9               	incf	___awmod@divisor,f
  1818  03AB  1903               	skipnz
  1819  03AC  0AFA               	incf	___awmod@divisor+1,f
  1820  03AD                     l1359:	
  1821  03AD  0879               	movf	___awmod@divisor,w
  1822  03AE  047A               	iorwf	___awmod@divisor+1,w
  1823  03AF  1903               	btfsc	3,2
  1824  03B0  2BB2               	goto	u871
  1825  03B1  2BB3               	goto	u870
  1826  03B2                     u871:	
  1827  03B2  2BE2               	goto	l1377
  1828  03B3                     u870:	
  1829  03B3                     l1361:	
  1830  03B3  01B8               	clrf	___awmod@counter
  1831  03B4  0AB8               	incf	___awmod@counter,f
  1832  03B5  2BC1               	goto	l1367
  1833  03B6                     l1363:	
  1834  03B6  3001               	movlw	1
  1835  03B7                     u885:	
  1836  03B7  1003               	clrc
  1837  03B8  0DF9               	rlf	___awmod@divisor,f
  1838  03B9  0DFA               	rlf	___awmod@divisor+1,f
  1839  03BA  3EFF               	addlw	-1
  1840  03BB  1D03               	skipz
  1841  03BC  2BB7               	goto	u885
  1842  03BD                     l1365:	
  1843  03BD  3001               	movlw	1
  1844  03BE  00FD               	movwf	??___awmod
  1845  03BF  087D               	movf	??___awmod,w
  1846  03C0  07B8               	addwf	___awmod@counter,f
  1847  03C1                     l1367:	
  1848  03C1  1FFA               	btfss	___awmod@divisor+1,7
  1849  03C2  2BC4               	goto	u891
  1850  03C3  2BC5               	goto	u890
  1851  03C4                     u891:	
  1852  03C4  2BB6               	goto	l1363
  1853  03C5                     u890:	
  1854  03C5                     l1369:	
  1855  03C5  087A               	movf	___awmod@divisor+1,w
  1856  03C6  027C               	subwf	___awmod@dividend+1,w
  1857  03C7  1D03               	skipz
  1858  03C8  2BCB               	goto	u905
  1859  03C9  0879               	movf	___awmod@divisor,w
  1860  03CA  027B               	subwf	___awmod@dividend,w
  1861  03CB                     u905:	
  1862  03CB  1C03               	skipc
  1863  03CC  2BCE               	goto	u901
  1864  03CD  2BCF               	goto	u900
  1865  03CE                     u901:	
  1866  03CE  2BD5               	goto	l1373
  1867  03CF                     u900:	
  1868  03CF                     l1371:	
  1869  03CF  0879               	movf	___awmod@divisor,w
  1870  03D0  02FB               	subwf	___awmod@dividend,f
  1871  03D1  087A               	movf	___awmod@divisor+1,w
  1872  03D2  1C03               	skipc
  1873  03D3  03FC               	decf	___awmod@dividend+1,f
  1874  03D4  02FC               	subwf	___awmod@dividend+1,f
  1875  03D5                     l1373:	
  1876  03D5  3001               	movlw	1
  1877  03D6                     u915:	
  1878  03D6  1003               	clrc
  1879  03D7  0CFA               	rrf	___awmod@divisor+1,f
  1880  03D8  0CF9               	rrf	___awmod@divisor,f
  1881  03D9  3EFF               	addlw	-1
  1882  03DA  1D03               	skipz
  1883  03DB  2BD6               	goto	u915
  1884  03DC                     l1375:	
  1885  03DC  3001               	movlw	1
  1886  03DD  02B8               	subwf	___awmod@counter,f
  1887  03DE  1D03               	btfss	3,2
  1888  03DF  2BE1               	goto	u921
  1889  03E0  2BE2               	goto	u920
  1890  03E1                     u921:	
  1891  03E1  2BC5               	goto	l1369
  1892  03E2                     u920:	
  1893  03E2                     l1377:	
  1894  03E2  0839               	movf	___awmod@sign,w
  1895  03E3  1903               	btfsc	3,2
  1896  03E4  2BE6               	goto	u931
  1897  03E5  2BE7               	goto	u930
  1898  03E6                     u931:	
  1899  03E6  2BEC               	goto	l1381
  1900  03E7                     u930:	
  1901  03E7                     l1379:	
  1902  03E7  09FB               	comf	___awmod@dividend,f
  1903  03E8  09FC               	comf	___awmod@dividend+1,f
  1904  03E9  0AFB               	incf	___awmod@dividend,f
  1905  03EA  1903               	skipnz
  1906  03EB  0AFC               	incf	___awmod@dividend+1,f
  1907  03EC                     l1381:	
  1908  03EC  087C               	movf	___awmod@dividend+1,w
  1909  03ED  00FA               	movwf	?___awmod+1
  1910  03EE  087B               	movf	___awmod@dividend,w
  1911  03EF  00F9               	movwf	?___awmod
  1912  03F0                     l451:	
  1913  03F0  0008               	return
  1914  03F1                     __end_of___awmod:	
  1915                           
  1916                           	psect	text7
  1917  0457                     __ptext7:	
  1918 ;; *************** function ___awdiv *****************
  1919 ;; Defined at:
  1920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  divisor         2    0[COMMON] int 
  1923 ;;  dividend        2    2[COMMON] int 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  quotient        2    7[COMMON] int 
  1926 ;;  sign            1    6[COMMON] unsigned char 
  1927 ;;  counter         1    5[COMMON] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  2    0[COMMON] int 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         4       0       0       0       0
  1938 ;;      Locals:         4       0       0       0       0
  1939 ;;      Temps:          1       0       0       0       0
  1940 ;;      Totals:         9       0       0       0       0
  1941 ;;Total ram usage:        9 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_obtener_decenas
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function ___awdiv
  1952  0457                     ___awdiv:	
  1953  0457                     l1303:	
  1954                           ;incstack = 0
  1955                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1956                           
  1957  0457  01F6               	clrf	___awdiv@sign
  1958  0458                     l1305:	
  1959  0458  1FF1               	btfss	___awdiv@divisor+1,7
  1960  0459  2C5B               	goto	u751
  1961  045A  2C5C               	goto	u750
  1962  045B                     u751:	
  1963  045B  2C63               	goto	l1311
  1964  045C                     u750:	
  1965  045C                     l1307:	
  1966  045C  09F0               	comf	___awdiv@divisor,f
  1967  045D  09F1               	comf	___awdiv@divisor+1,f
  1968  045E  0AF0               	incf	___awdiv@divisor,f
  1969  045F  1903               	skipnz
  1970  0460  0AF1               	incf	___awdiv@divisor+1,f
  1971  0461                     l1309:	
  1972  0461  01F6               	clrf	___awdiv@sign
  1973  0462  0AF6               	incf	___awdiv@sign,f
  1974  0463                     l1311:	
  1975  0463  1FF3               	btfss	___awdiv@dividend+1,7
  1976  0464  2C66               	goto	u761
  1977  0465  2C67               	goto	u760
  1978  0466                     u761:	
  1979  0466  2C70               	goto	l1317
  1980  0467                     u760:	
  1981  0467                     l1313:	
  1982  0467  09F2               	comf	___awdiv@dividend,f
  1983  0468  09F3               	comf	___awdiv@dividend+1,f
  1984  0469  0AF2               	incf	___awdiv@dividend,f
  1985  046A  1903               	skipnz
  1986  046B  0AF3               	incf	___awdiv@dividend+1,f
  1987  046C                     l1315:	
  1988  046C  3001               	movlw	1
  1989  046D  00F4               	movwf	??___awdiv
  1990  046E  0874               	movf	??___awdiv,w
  1991  046F  06F6               	xorwf	___awdiv@sign,f
  1992  0470                     l1317:	
  1993  0470  01F7               	clrf	___awdiv@quotient
  1994  0471  01F8               	clrf	___awdiv@quotient+1
  1995  0472                     l1319:	
  1996  0472  0870               	movf	___awdiv@divisor,w
  1997  0473  0471               	iorwf	___awdiv@divisor+1,w
  1998  0474  1903               	btfsc	3,2
  1999  0475  2C77               	goto	u771
  2000  0476  2C78               	goto	u770
  2001  0477                     u771:	
  2002  0477  2CAF               	goto	l1339
  2003  0478                     u770:	
  2004  0478                     l1321:	
  2005  0478  01F5               	clrf	___awdiv@counter
  2006  0479  0AF5               	incf	___awdiv@counter,f
  2007  047A  2C86               	goto	l1327
  2008  047B                     l1323:	
  2009  047B  3001               	movlw	1
  2010  047C                     u785:	
  2011  047C  1003               	clrc
  2012  047D  0DF0               	rlf	___awdiv@divisor,f
  2013  047E  0DF1               	rlf	___awdiv@divisor+1,f
  2014  047F  3EFF               	addlw	-1
  2015  0480  1D03               	skipz
  2016  0481  2C7C               	goto	u785
  2017  0482                     l1325:	
  2018  0482  3001               	movlw	1
  2019  0483  00F4               	movwf	??___awdiv
  2020  0484  0874               	movf	??___awdiv,w
  2021  0485  07F5               	addwf	___awdiv@counter,f
  2022  0486                     l1327:	
  2023  0486  1FF1               	btfss	___awdiv@divisor+1,7
  2024  0487  2C89               	goto	u791
  2025  0488  2C8A               	goto	u790
  2026  0489                     u791:	
  2027  0489  2C7B               	goto	l1323
  2028  048A                     u790:	
  2029  048A                     l1329:	
  2030  048A  3001               	movlw	1
  2031  048B                     u805:	
  2032  048B  1003               	clrc
  2033  048C  0DF7               	rlf	___awdiv@quotient,f
  2034  048D  0DF8               	rlf	___awdiv@quotient+1,f
  2035  048E  3EFF               	addlw	-1
  2036  048F  1D03               	skipz
  2037  0490  2C8B               	goto	u805
  2038  0491  0871               	movf	___awdiv@divisor+1,w
  2039  0492  0273               	subwf	___awdiv@dividend+1,w
  2040  0493  1D03               	skipz
  2041  0494  2C97               	goto	u815
  2042  0495  0870               	movf	___awdiv@divisor,w
  2043  0496  0272               	subwf	___awdiv@dividend,w
  2044  0497                     u815:	
  2045  0497  1C03               	skipc
  2046  0498  2C9A               	goto	u811
  2047  0499  2C9B               	goto	u810
  2048  049A                     u811:	
  2049  049A  2CA2               	goto	l1335
  2050  049B                     u810:	
  2051  049B                     l1331:	
  2052  049B  0870               	movf	___awdiv@divisor,w
  2053  049C  02F2               	subwf	___awdiv@dividend,f
  2054  049D  0871               	movf	___awdiv@divisor+1,w
  2055  049E  1C03               	skipc
  2056  049F  03F3               	decf	___awdiv@dividend+1,f
  2057  04A0  02F3               	subwf	___awdiv@dividend+1,f
  2058  04A1                     l1333:	
  2059  04A1  1477               	bsf	___awdiv@quotient,0
  2060  04A2                     l1335:	
  2061  04A2  3001               	movlw	1
  2062  04A3                     u825:	
  2063  04A3  1003               	clrc
  2064  04A4  0CF1               	rrf	___awdiv@divisor+1,f
  2065  04A5  0CF0               	rrf	___awdiv@divisor,f
  2066  04A6  3EFF               	addlw	-1
  2067  04A7  1D03               	skipz
  2068  04A8  2CA3               	goto	u825
  2069  04A9                     l1337:	
  2070  04A9  3001               	movlw	1
  2071  04AA  02F5               	subwf	___awdiv@counter,f
  2072  04AB  1D03               	btfss	3,2
  2073  04AC  2CAE               	goto	u831
  2074  04AD  2CAF               	goto	u830
  2075  04AE                     u831:	
  2076  04AE  2C8A               	goto	l1329
  2077  04AF                     u830:	
  2078  04AF                     l1339:	
  2079  04AF  0876               	movf	___awdiv@sign,w
  2080  04B0  1903               	btfsc	3,2
  2081  04B1  2CB3               	goto	u841
  2082  04B2  2CB4               	goto	u840
  2083  04B3                     u841:	
  2084  04B3  2CB9               	goto	l1343
  2085  04B4                     u840:	
  2086  04B4                     l1341:	
  2087  04B4  09F7               	comf	___awdiv@quotient,f
  2088  04B5  09F8               	comf	___awdiv@quotient+1,f
  2089  04B6  0AF7               	incf	___awdiv@quotient,f
  2090  04B7  1903               	skipnz
  2091  04B8  0AF8               	incf	___awdiv@quotient+1,f
  2092  04B9                     l1343:	
  2093  04B9  0878               	movf	___awdiv@quotient+1,w
  2094  04BA  00F1               	movwf	?___awdiv+1
  2095  04BB  0877               	movf	___awdiv@quotient,w
  2096  04BC  00F0               	movwf	?___awdiv
  2097  04BD                     l438:	
  2098  04BD  0008               	return
  2099  04BE                     __end_of___awdiv:	
  2100                           
  2101                           	psect	text8
  2102  0165                     __ptext8:	
  2103 ;; *************** function _convertir_a_ascii *****************
  2104 ;; Defined at:
  2105 ;;		line 138 in file "Main_master.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  a               1    wreg     unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  a               1    1[COMMON] unsigned char 
  2110 ;;  temporal        1    2[COMMON] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      unsigned char 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       0       0       0       0
  2121 ;;      Locals:         2       0       0       0       0
  2122 ;;      Temps:          1       0       0       0       0
  2123 ;;      Totals:         3       0       0       0       0
  2124 ;;Total ram usage:        3 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _convertir_a_ascii
  2135  0165                     _convertir_a_ascii:	
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _convertir_a_ascii: [wreg+status,2+status,0]
  2139                           ;convertir_a_ascii@a stored from wreg
  2140  0165  00F1               	movwf	convertir_a_ascii@a
  2141  0166                     l1479:	
  2142                           
  2143                           ;Main_master.c: 139:     char temporal;;Main_master.c: 140:     temporal = a+(int)"0";
  2144  0166  0871               	movf	convertir_a_ascii@a,w
  2145  0167  3E14               	addlw	low ((STR_4-__stringbase)| (0+32768))
  2146  0168  00F0               	movwf	??_convertir_a_ascii
  2147  0169  0870               	movf	??_convertir_a_ascii,w
  2148  016A  00F2               	movwf	convertir_a_ascii@temporal
  2149  016B                     l1481:	
  2150                           
  2151                           ;Main_master.c: 141:     return temporal;
  2152  016B  0872               	movf	convertir_a_ascii@temporal,w
  2153  016C                     l112:	
  2154  016C  0008               	return
  2155  016D                     __end_of_convertir_a_ascii:	
  2156                           
  2157                           	psect	text9
  2158  0538                     __ptext9:	
  2159 ;; *************** function ___xxtofl *****************
  2160 ;; Defined at:
  2161 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  sign            1    wreg     unsigned char 
  2164 ;;  val             4    6[COMMON] long 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  sign            1    0[BANK0 ] unsigned char 
  2167 ;;  arg             4    2[BANK0 ] unsigned long 
  2168 ;;  exp             1    1[BANK0 ] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  4    6[COMMON] unsigned char 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         4       0       0       0       0
  2179 ;;      Locals:         0       6       0       0       0
  2180 ;;      Temps:          4       0       0       0       0
  2181 ;;      Totals:         8       6       0       0       0
  2182 ;;Total ram usage:       14 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function ___xxtofl
  2193  0538                     ___xxtofl:	
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2197                           ;___xxtofl@sign stored from wreg
  2198  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2200  053A  00B8               	movwf	___xxtofl@sign
  2201  053B                     l1541:	
  2202  053B  0838               	movf	___xxtofl@sign,w
  2203  053C  1903               	btfsc	3,2
  2204  053D  2D3F               	goto	u1091
  2205  053E  2D40               	goto	u1090
  2206  053F                     u1091:	
  2207  053F  2D54               	goto	l1547
  2208  0540                     u1090:	
  2209  0540                     l1543:	
  2210  0540  1FF9               	btfss	___xxtofl@val+3,7
  2211  0541  2D43               	goto	u1101
  2212  0542  2D44               	goto	u1100
  2213  0543                     u1101:	
  2214  0543  2D54               	goto	l1547
  2215  0544                     u1100:	
  2216  0544                     l1545:	
  2217  0544  0976               	comf	___xxtofl@val,w
  2218  0545  00BA               	movwf	___xxtofl@arg
  2219  0546  0977               	comf	___xxtofl@val+1,w
  2220  0547  00BB               	movwf	___xxtofl@arg+1
  2221  0548  0978               	comf	___xxtofl@val+2,w
  2222  0549  00BC               	movwf	___xxtofl@arg+2
  2223  054A  0979               	comf	___xxtofl@val+3,w
  2224  054B  00BD               	movwf	___xxtofl@arg+3
  2225  054C  0ABA               	incf	___xxtofl@arg,f
  2226  054D  1903               	skipnz
  2227  054E  0ABB               	incf	___xxtofl@arg+1,f
  2228  054F  1903               	skipnz
  2229  0550  0ABC               	incf	___xxtofl@arg+2,f
  2230  0551  1903               	skipnz
  2231  0552  0ABD               	incf	___xxtofl@arg+3,f
  2232  0553  2D5C               	goto	l712
  2233  0554                     l1547:	
  2234  0554  0879               	movf	___xxtofl@val+3,w
  2235  0555  00BD               	movwf	___xxtofl@arg+3
  2236  0556  0878               	movf	___xxtofl@val+2,w
  2237  0557  00BC               	movwf	___xxtofl@arg+2
  2238  0558  0877               	movf	___xxtofl@val+1,w
  2239  0559  00BB               	movwf	___xxtofl@arg+1
  2240  055A  0876               	movf	___xxtofl@val,w
  2241  055B  00BA               	movwf	___xxtofl@arg
  2242  055C                     l712:	
  2243  055C  0879               	movf	___xxtofl@val+3,w
  2244  055D  0478               	iorwf	___xxtofl@val+2,w
  2245  055E  0477               	iorwf	___xxtofl@val+1,w
  2246  055F  0476               	iorwf	___xxtofl@val,w
  2247  0560  1D03               	skipz
  2248  0561  2D63               	goto	u1111
  2249  0562  2D64               	goto	u1110
  2250  0563                     u1111:	
  2251  0563  2D6D               	goto	l1553
  2252  0564                     u1110:	
  2253  0564                     l1549:	
  2254  0564  3000               	movlw	0
  2255  0565  00F9               	movwf	?___xxtofl+3
  2256  0566  3000               	movlw	0
  2257  0567  00F8               	movwf	?___xxtofl+2
  2258  0568  3000               	movlw	0
  2259  0569  00F7               	movwf	?___xxtofl+1
  2260  056A  3000               	movlw	0
  2261  056B  00F6               	movwf	?___xxtofl
  2262  056C  2DF3               	goto	l714
  2263  056D                     l1553:	
  2264  056D  3096               	movlw	150
  2265  056E  00FA               	movwf	??___xxtofl
  2266  056F  087A               	movf	??___xxtofl,w
  2267  0570  00B9               	movwf	___xxtofl@exp
  2268  0571  2D7F               	goto	l1557
  2269  0572                     l1555:	
  2270  0572  3001               	movlw	1
  2271  0573  00FA               	movwf	??___xxtofl
  2272  0574  087A               	movf	??___xxtofl,w
  2273  0575  07B9               	addwf	___xxtofl@exp,f
  2274  0576  3001               	movlw	1
  2275  0577                     u1125:	
  2276  0577  1003               	clrc
  2277  0578  0CBD               	rrf	___xxtofl@arg+3,f
  2278  0579  0CBC               	rrf	___xxtofl@arg+2,f
  2279  057A  0CBB               	rrf	___xxtofl@arg+1,f
  2280  057B  0CBA               	rrf	___xxtofl@arg,f
  2281  057C  3EFF               	addlw	-1
  2282  057D  1D03               	skipz
  2283  057E  2D77               	goto	u1125
  2284  057F                     l1557:	
  2285  057F  30FE               	movlw	254
  2286  0580  053D               	andwf	___xxtofl@arg+3,w
  2287  0581  1D03               	btfss	3,2
  2288  0582  2D84               	goto	u1131
  2289  0583  2D85               	goto	u1130
  2290  0584                     u1131:	
  2291  0584  2D72               	goto	l1555
  2292  0585                     u1130:	
  2293  0585  2DA1               	goto	l718
  2294  0586                     l1559:	
  2295  0586  3001               	movlw	1
  2296  0587  00FA               	movwf	??___xxtofl
  2297  0588  087A               	movf	??___xxtofl,w
  2298  0589  07B9               	addwf	___xxtofl@exp,f
  2299  058A                     l1561:	
  2300  058A  3001               	movlw	1
  2301  058B  07BA               	addwf	___xxtofl@arg,f
  2302  058C  3000               	movlw	0
  2303  058D  1803               	skipnc
  2304  058E  3001               	movlw	1
  2305  058F  07BB               	addwf	___xxtofl@arg+1,f
  2306  0590  3000               	movlw	0
  2307  0591  1803               	skipnc
  2308  0592  3001               	movlw	1
  2309  0593  07BC               	addwf	___xxtofl@arg+2,f
  2310  0594  3000               	movlw	0
  2311  0595  1803               	skipnc
  2312  0596  3001               	movlw	1
  2313  0597  07BD               	addwf	___xxtofl@arg+3,f
  2314  0598                     l1563:	
  2315  0598  3001               	movlw	1
  2316  0599                     u1145:	
  2317  0599  1003               	clrc
  2318  059A  0CBD               	rrf	___xxtofl@arg+3,f
  2319  059B  0CBC               	rrf	___xxtofl@arg+2,f
  2320  059C  0CBB               	rrf	___xxtofl@arg+1,f
  2321  059D  0CBA               	rrf	___xxtofl@arg,f
  2322  059E  3EFF               	addlw	-1
  2323  059F  1D03               	skipz
  2324  05A0  2D99               	goto	u1145
  2325  05A1                     l718:	
  2326  05A1  30FF               	movlw	255
  2327  05A2  053D               	andwf	___xxtofl@arg+3,w
  2328  05A3  1D03               	btfss	3,2
  2329  05A4  2DA6               	goto	u1151
  2330  05A5  2DA7               	goto	u1150
  2331  05A6                     u1151:	
  2332  05A6  2D86               	goto	l1559
  2333  05A7                     u1150:	
  2334  05A7  2DB3               	goto	l1567
  2335  05A8                     l1565:	
  2336  05A8  3001               	movlw	1
  2337  05A9  02B9               	subwf	___xxtofl@exp,f
  2338  05AA  3001               	movlw	1
  2339  05AB  00FA               	movwf	??___xxtofl
  2340  05AC                     u1165:	
  2341  05AC  1003               	clrc
  2342  05AD  0DBA               	rlf	___xxtofl@arg,f
  2343  05AE  0DBB               	rlf	___xxtofl@arg+1,f
  2344  05AF  0DBC               	rlf	___xxtofl@arg+2,f
  2345  05B0  0DBD               	rlf	___xxtofl@arg+3,f
  2346  05B1  0BFA               	decfsz	??___xxtofl,f
  2347  05B2  2DAC               	goto	u1165
  2348  05B3                     l1567:	
  2349  05B3  1BBC               	btfsc	___xxtofl@arg+2,7
  2350  05B4  2DB6               	goto	u1171
  2351  05B5  2DB7               	goto	u1170
  2352  05B6                     u1171:	
  2353  05B6  2DBD               	goto	l725
  2354  05B7                     u1170:	
  2355  05B7                     l1569:	
  2356  05B7  3002               	movlw	2
  2357  05B8  0239               	subwf	___xxtofl@exp,w
  2358  05B9  1803               	skipnc
  2359  05BA  2DBC               	goto	u1181
  2360  05BB  2DBD               	goto	u1180
  2361  05BC                     u1181:	
  2362  05BC  2DA8               	goto	l1565
  2363  05BD                     u1180:	
  2364  05BD                     l725:	
  2365  05BD  1839               	btfsc	___xxtofl@exp,0
  2366  05BE  2DC0               	goto	u1191
  2367  05BF  2DC1               	goto	u1190
  2368  05C0                     u1191:	
  2369  05C0  2DC9               	goto	l726
  2370  05C1                     u1190:	
  2371  05C1                     l1571:	
  2372  05C1  30FF               	movlw	255
  2373  05C2  05BA               	andwf	___xxtofl@arg,f
  2374  05C3  30FF               	movlw	255
  2375  05C4  05BB               	andwf	___xxtofl@arg+1,f
  2376  05C5  307F               	movlw	127
  2377  05C6  05BC               	andwf	___xxtofl@arg+2,f
  2378  05C7  30FF               	movlw	255
  2379  05C8  05BD               	andwf	___xxtofl@arg+3,f
  2380  05C9                     l726:	
  2381  05C9  1003               	clrc
  2382  05CA  0CB9               	rrf	___xxtofl@exp,f
  2383  05CB                     l1573:	
  2384  05CB  0839               	movf	___xxtofl@exp,w
  2385  05CC  00FA               	movwf	??___xxtofl
  2386  05CD  01FB               	clrf	??___xxtofl+1
  2387  05CE  01FC               	clrf	??___xxtofl+2
  2388  05CF  01FD               	clrf	??___xxtofl+3
  2389  05D0  3018               	movlw	24
  2390  05D1                     u1205:	
  2391  05D1  1003               	clrc
  2392  05D2  0DFA               	rlf	??___xxtofl,f
  2393  05D3  0DFB               	rlf	??___xxtofl+1,f
  2394  05D4  0DFC               	rlf	??___xxtofl+2,f
  2395  05D5  0DFD               	rlf	??___xxtofl+3,f
  2396  05D6                     u1200:	
  2397  05D6  3EFF               	addlw	-1
  2398  05D7  1D03               	skipz
  2399  05D8  2DD1               	goto	u1205
  2400  05D9  087A               	movf	??___xxtofl,w
  2401  05DA  04BA               	iorwf	___xxtofl@arg,f
  2402  05DB  087B               	movf	??___xxtofl+1,w
  2403  05DC  04BB               	iorwf	___xxtofl@arg+1,f
  2404  05DD  087C               	movf	??___xxtofl+2,w
  2405  05DE  04BC               	iorwf	___xxtofl@arg+2,f
  2406  05DF  087D               	movf	??___xxtofl+3,w
  2407  05E0  04BD               	iorwf	___xxtofl@arg+3,f
  2408  05E1                     l1575:	
  2409  05E1  0838               	movf	___xxtofl@sign,w
  2410  05E2  1903               	btfsc	3,2
  2411  05E3  2DE5               	goto	u1211
  2412  05E4  2DE6               	goto	u1210
  2413  05E5                     u1211:	
  2414  05E5  2DEB               	goto	l1581
  2415  05E6                     u1210:	
  2416  05E6                     l1577:	
  2417  05E6  1FF9               	btfss	___xxtofl@val+3,7
  2418  05E7  2DE9               	goto	u1221
  2419  05E8  2DEA               	goto	u1220
  2420  05E9                     u1221:	
  2421  05E9  2DEB               	goto	l1581
  2422  05EA                     u1220:	
  2423  05EA                     l1579:	
  2424  05EA  17BD               	bsf	___xxtofl@arg+3,7
  2425  05EB                     l1581:	
  2426  05EB  083D               	movf	___xxtofl@arg+3,w
  2427  05EC  00F9               	movwf	?___xxtofl+3
  2428  05ED  083C               	movf	___xxtofl@arg+2,w
  2429  05EE  00F8               	movwf	?___xxtofl+2
  2430  05EF  083B               	movf	___xxtofl@arg+1,w
  2431  05F0  00F7               	movwf	?___xxtofl+1
  2432  05F1  083A               	movf	___xxtofl@arg,w
  2433  05F2  00F6               	movwf	?___xxtofl
  2434  05F3                     l714:	
  2435  05F3  0008               	return
  2436  05F4                     __end_of___xxtofl:	
  2437                           
  2438                           	psect	text10
  2439  04BE                     __ptext10:	
  2440 ;; *************** function ___fltol *****************
  2441 ;; Defined at:
  2442 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  f1              4    0[COMMON] unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  exp1            1   10[COMMON] unsigned char 
  2447 ;;  sign1           1    9[COMMON] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  4    0[COMMON] long 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         4       0       0       0       0
  2458 ;;      Locals:         2       0       0       0       0
  2459 ;;      Temps:          5       0       0       0       0
  2460 ;;      Totals:        11       0       0       0       0
  2461 ;;Total ram usage:       11 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function ___fltol
  2472  04BE                     ___fltol:	
  2473  04BE                     l1505:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2476                           
  2477  04BE  1003               	clrc
  2478  04BF  0D72               	rlf	___fltol@f1+2,w
  2479  04C0  0D73               	rlf	___fltol@f1+3,w
  2480  04C1  00F4               	movwf	??___fltol
  2481  04C2  0874               	movf	??___fltol,w
  2482  04C3  00FA               	movwf	___fltol@exp1
  2483  04C4  087A               	movf	___fltol@exp1,w
  2484  04C5  1D03               	btfss	3,2
  2485  04C6  2CC8               	goto	u991
  2486  04C7  2CC9               	goto	u990
  2487  04C8                     u991:	
  2488  04C8  2CD2               	goto	l1511
  2489  04C9                     u990:	
  2490  04C9                     l1507:	
  2491  04C9  3000               	movlw	0
  2492  04CA  00F3               	movwf	?___fltol+3
  2493  04CB  3000               	movlw	0
  2494  04CC  00F2               	movwf	?___fltol+2
  2495  04CD  3000               	movlw	0
  2496  04CE  00F1               	movwf	?___fltol+1
  2497  04CF  3000               	movlw	0
  2498  04D0  00F0               	movwf	?___fltol
  2499  04D1  2D37               	goto	l471
  2500  04D2                     l1511:	
  2501  04D2  0870               	movf	___fltol@f1,w
  2502  04D3  00F4               	movwf	??___fltol
  2503  04D4  0871               	movf	___fltol@f1+1,w
  2504  04D5  00F5               	movwf	??___fltol+1
  2505  04D6  0872               	movf	___fltol@f1+2,w
  2506  04D7  00F6               	movwf	??___fltol+2
  2507  04D8  0873               	movf	___fltol@f1+3,w
  2508  04D9  00F7               	movwf	??___fltol+3
  2509  04DA  301F               	movlw	31
  2510  04DB                     u1005:	
  2511  04DB  1003               	clrc
  2512  04DC  0CF7               	rrf	??___fltol+3,f
  2513  04DD  0CF6               	rrf	??___fltol+2,f
  2514  04DE  0CF5               	rrf	??___fltol+1,f
  2515  04DF  0CF4               	rrf	??___fltol,f
  2516  04E0                     u1000:	
  2517  04E0  3EFF               	addlw	-1
  2518  04E1  1D03               	skipz
  2519  04E2  2CDB               	goto	u1005
  2520  04E3  0874               	movf	??___fltol,w
  2521  04E4  00F8               	movwf	??___fltol+4
  2522  04E5  0878               	movf	??___fltol+4,w
  2523  04E6  00F9               	movwf	___fltol@sign1
  2524  04E7                     l1513:	
  2525  04E7  17F2               	bsf	___fltol@f1+2,7
  2526  04E8                     l1515:	
  2527  04E8  30FF               	movlw	255
  2528  04E9  05F0               	andwf	___fltol@f1,f
  2529  04EA  30FF               	movlw	255
  2530  04EB  05F1               	andwf	___fltol@f1+1,f
  2531  04EC  30FF               	movlw	255
  2532  04ED  05F2               	andwf	___fltol@f1+2,f
  2533  04EE  3000               	movlw	0
  2534  04EF  05F3               	andwf	___fltol@f1+3,f
  2535  04F0                     l1517:	
  2536  04F0  3096               	movlw	150
  2537  04F1  02FA               	subwf	___fltol@exp1,f
  2538  04F2                     l1519:	
  2539  04F2  1FFA               	btfss	___fltol@exp1,7
  2540  04F3  2CF5               	goto	u1011
  2541  04F4  2CF6               	goto	u1010
  2542  04F5                     u1011:	
  2543  04F5  2D10               	goto	l1529
  2544  04F6                     u1010:	
  2545  04F6                     l1521:	
  2546  04F6  087A               	movf	___fltol@exp1,w
  2547  04F7  3A80               	xorlw	128
  2548  04F8  3E97               	addlw	151
  2549  04F9  1803               	skipnc
  2550  04FA  2CFC               	goto	u1021
  2551  04FB  2CFD               	goto	u1020
  2552  04FC                     u1021:	
  2553  04FC  2CFE               	goto	l1527
  2554  04FD                     u1020:	
  2555  04FD  2CC9               	goto	l1507
  2556  04FE                     l1527:	
  2557  04FE  3001               	movlw	1
  2558  04FF                     u1035:	
  2559  04FF  1003               	clrc
  2560  0500  0CF3               	rrf	___fltol@f1+3,f
  2561  0501  0CF2               	rrf	___fltol@f1+2,f
  2562  0502  0CF1               	rrf	___fltol@f1+1,f
  2563  0503  0CF0               	rrf	___fltol@f1,f
  2564  0504  3EFF               	addlw	-1
  2565  0505  1D03               	skipz
  2566  0506  2CFF               	goto	u1035
  2567  0507  3001               	movlw	1
  2568  0508  00F4               	movwf	??___fltol
  2569  0509  0874               	movf	??___fltol,w
  2570  050A  07FA               	addwf	___fltol@exp1,f
  2571  050B  1D03               	btfss	3,2
  2572  050C  2D0E               	goto	u1041
  2573  050D  2D0F               	goto	u1040
  2574  050E                     u1041:	
  2575  050E  2CFE               	goto	l1527
  2576  050F                     u1040:	
  2577  050F  2D27               	goto	l1537
  2578  0510                     l1529:	
  2579  0510  3020               	movlw	32
  2580  0511  027A               	subwf	___fltol@exp1,w
  2581  0512  1C03               	skipc
  2582  0513  2D15               	goto	u1051
  2583  0514  2D16               	goto	u1050
  2584  0515                     u1051:	
  2585  0515  2D22               	goto	l478
  2586  0516                     u1050:	
  2587  0516  2CC9               	goto	l1507
  2588  0517                     l1535:	
  2589  0517  3001               	movlw	1
  2590  0518  00F4               	movwf	??___fltol
  2591  0519                     u1065:	
  2592  0519  1003               	clrc
  2593  051A  0DF0               	rlf	___fltol@f1,f
  2594  051B  0DF1               	rlf	___fltol@f1+1,f
  2595  051C  0DF2               	rlf	___fltol@f1+2,f
  2596  051D  0DF3               	rlf	___fltol@f1+3,f
  2597  051E  0BF4               	decfsz	??___fltol,f
  2598  051F  2D19               	goto	u1065
  2599  0520  3001               	movlw	1
  2600  0521  02FA               	subwf	___fltol@exp1,f
  2601  0522                     l478:	
  2602  0522  087A               	movf	___fltol@exp1,w
  2603  0523  1D03               	btfss	3,2
  2604  0524  2D26               	goto	u1071
  2605  0525  2D27               	goto	u1070
  2606  0526                     u1071:	
  2607  0526  2D17               	goto	l1535
  2608  0527                     u1070:	
  2609  0527                     l1537:	
  2610  0527  0879               	movf	___fltol@sign1,w
  2611  0528  1903               	btfsc	3,2
  2612  0529  2D2B               	goto	u1081
  2613  052A  2D2C               	goto	u1080
  2614  052B                     u1081:	
  2615  052B  2D37               	goto	l481
  2616  052C                     u1080:	
  2617  052C                     l1539:	
  2618  052C  09F0               	comf	___fltol@f1,f
  2619  052D  09F1               	comf	___fltol@f1+1,f
  2620  052E  09F2               	comf	___fltol@f1+2,f
  2621  052F  09F3               	comf	___fltol@f1+3,f
  2622  0530  0AF0               	incf	___fltol@f1,f
  2623  0531  1903               	skipnz
  2624  0532  0AF1               	incf	___fltol@f1+1,f
  2625  0533  1903               	skipnz
  2626  0534  0AF2               	incf	___fltol@f1+2,f
  2627  0535  1903               	skipnz
  2628  0536  0AF3               	incf	___fltol@f1+3,f
  2629  0537                     l481:	
  2630  0537                     l471:	
  2631  0537  0008               	return
  2632  0538                     __end_of___fltol:	
  2633                           
  2634                           	psect	text11
  2635  0187                     __ptext11:	
  2636 ;; *************** function _Write_I2C_Master *****************
  2637 ;; Defined at:
  2638 ;;		line 61 in file "I2C.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  a               2    0[COMMON] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         2       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         2       0       0       0       0
  2656 ;;Total ram usage:        2 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    1
  2659 ;; This function calls:
  2660 ;;		_Wait_I2C_Master
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Write_I2C_Master
  2668  0187                     _Write_I2C_Master:	
  2669  0187                     l1431:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _Write_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  2672                           
  2673                           
  2674                           ;I2C.c: 62:     Wait_I2C_Master();
  2675  0187  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  2676  018C                     l1433:	
  2677                           
  2678                           ;I2C.c: 63:     SSPBUF = a;
  2679  018C  0870               	movf	Write_I2C_Master@a,w
  2680  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2681  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2682  018F  0093               	movwf	19	;volatile
  2683  0190                     l194:	
  2684  0190  0008               	return
  2685  0191                     __end_of_Write_I2C_Master:	
  2686                           
  2687                           	psect	text12
  2688  017E                     __ptext12:	
  2689 ;; *************** function _Stop_I2C_Master *****************
  2690 ;; Defined at:
  2691 ;;		line 56 in file "I2C.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    1
  2712 ;; This function calls:
  2713 ;;		_Wait_I2C_Master
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _Stop_I2C_Master
  2721  017E                     _Stop_I2C_Master:	
  2722  017E                     l1451:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _Stop_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  2725                           
  2726                           
  2727                           ;I2C.c: 57:     Wait_I2C_Master();
  2728  017E  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  2729  0183                     l1453:	
  2730                           
  2731                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2732  0183  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0184  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0185  1511               	bsf	17,2	;volatile
  2735  0186                     l191:	
  2736  0186  0008               	return
  2737  0187                     __end_of_Stop_I2C_Master:	
  2738                           
  2739                           	psect	text13
  2740  0175                     __ptext13:	
  2741 ;; *************** function _Start_I2C_Master *****************
  2742 ;; Defined at:
  2743 ;;		line 46 in file "I2C.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, pclath, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0
  2760 ;;      Totals:         0       0       0       0       0
  2761 ;;Total ram usage:        0 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    1
  2764 ;; This function calls:
  2765 ;;		_Wait_I2C_Master
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _Start_I2C_Master
  2773  0175                     _Start_I2C_Master:	
  2774  0175                     l1427:	
  2775                           ;incstack = 0
  2776                           ; Regs used in _Start_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  2777                           
  2778                           
  2779                           ;I2C.c: 47:     Wait_I2C_Master();
  2780  0175  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  2781  017A                     l1429:	
  2782                           
  2783                           ;I2C.c: 48:     SSPCON2bits.SEN = 1;
  2784  017A  1683               	bsf	3,5	;RP0=1, select bank1
  2785  017B  1303               	bcf	3,6	;RP1=0, select bank1
  2786  017C  1411               	bsf	17,0	;volatile
  2787  017D                     l185:	
  2788  017D  0008               	return
  2789  017E                     __end_of_Start_I2C_Master:	
  2790                           
  2791                           	psect	text14
  2792  0217                     __ptext14:	
  2793 ;; *************** function _LCD_WRITE_STRING *****************
  2794 ;; Defined at:
  2795 ;;		line 70 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  a               1    wreg     PTR unsigned char 
  2798 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  a               1    5[COMMON] PTR unsigned char 
  2801 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  2802 ;;  i               2    3[COMMON] int 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         3       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0
  2815 ;;      Totals:         3       0       0       0       0
  2816 ;;Total ram usage:        3 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    1
  2819 ;; This function calls:
  2820 ;;		_LCD_WRITE_CHAR
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _LCD_WRITE_STRING
  2828  0217                     _LCD_WRITE_STRING:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2832                           ;LCD_WRITE_STRING@a stored from wreg
  2833  0217  00F5               	movwf	LCD_WRITE_STRING@a
  2834  0218                     l1497:	
  2835                           
  2836                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 71:     int i;;../Digital2_LabLCD/LCD_8bits_lib.c: 
      +                          72:     for(i=0; a[i]!='\0'; i++)
  2837  0218  01F3               	clrf	LCD_WRITE_STRING@i
  2838  0219  01F4               	clrf	LCD_WRITE_STRING@i+1
  2839  021A  2A2E               	goto	l1503
  2840  021B                     l1499:	
  2841                           
  2842                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 73:         LCD_WRITE_CHAR(a[i]);
  2843  021B  0873               	movf	LCD_WRITE_STRING@i,w
  2844  021C  0775               	addwf	LCD_WRITE_STRING@a,w
  2845  021D  0084               	movwf	4
  2846  021E  120A  118A  2003  120A  118A  	fcall	stringdir
  2847  0223  120A  118A  21C1  120A  118A  	fcall	_LCD_WRITE_CHAR
  2848  0228                     l1501:	
  2849  0228  3001               	movlw	1
  2850  0229  07F3               	addwf	LCD_WRITE_STRING@i,f
  2851  022A  1803               	skipnc
  2852  022B  0AF4               	incf	LCD_WRITE_STRING@i+1,f
  2853  022C  3000               	movlw	0
  2854  022D  07F4               	addwf	LCD_WRITE_STRING@i+1,f
  2855  022E                     l1503:	
  2856  022E  0873               	movf	LCD_WRITE_STRING@i,w
  2857  022F  0775               	addwf	LCD_WRITE_STRING@a,w
  2858  0230  0084               	movwf	4
  2859  0231  120A  118A  2003  120A  118A  	fcall	stringdir
  2860  0236  3A00               	xorlw	0
  2861  0237  1D03               	skipz
  2862  0238  2A3A               	goto	u981
  2863  0239  2A3B               	goto	u980
  2864  023A                     u981:	
  2865  023A  2A1B               	goto	l1499
  2866  023B                     u980:	
  2867  023B                     l142:	
  2868  023B  0008               	return
  2869  023C                     __end_of_LCD_WRITE_STRING:	
  2870                           
  2871                           	psect	text15
  2872  01C1                     __ptext15:	
  2873 ;; *************** function _LCD_WRITE_CHAR *****************
  2874 ;; Defined at:
  2875 ;;		line 61 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               1    wreg     unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  a               1    2[COMMON] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         1       0       0       0       0
  2891 ;;      Temps:          2       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;;		_LCD_WRITE_STRING
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _LCD_WRITE_CHAR
  2905  01C1                     _LCD_WRITE_CHAR:	
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
  2909                           ;LCD_WRITE_CHAR@a stored from wreg
  2910  01C1  00F2               	movwf	LCD_WRITE_CHAR@a
  2911  01C2                     l1243:	
  2912                           
  2913                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 62:     PORTDbits.RD5 = 1;
  2914  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2915  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2916  01C4  1688               	bsf	8,5	;volatile
  2917  01C5                     l1245:	
  2918                           
  2919                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 63:     PORTB = a;
  2920  01C5  0872               	movf	LCD_WRITE_CHAR@a,w
  2921  01C6  0086               	movwf	6	;volatile
  2922  01C7                     l1247:	
  2923                           
  2924                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 64:     PORTDbits.RD7 = 1;
  2925  01C7  1788               	bsf	8,7	;volatile
  2926                           
  2927                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 65:     _delay((unsigned long)((40)*(4000000/400000
      +                          0.0)));
  2928  01C8  300D               	movlw	13
  2929  01C9  00F0               	movwf	??_LCD_WRITE_CHAR
  2930  01CA                     u1237:	
  2931  01CA  0BF0               	decfsz	??_LCD_WRITE_CHAR,f
  2932  01CB  29CA               	goto	u1237
  2933  01CC                     l1249:	
  2934                           
  2935                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 66:     PORTDbits.RD7 = 0;
  2936  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2937  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2938  01CE  1388               	bcf	8,7	;volatile
  2939                           
  2940                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 67:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  2941  01CF  3007               	movlw	7
  2942  01D0  00F1               	movwf	??_LCD_WRITE_CHAR+1
  2943  01D1  307D               	movlw	125
  2944  01D2  00F0               	movwf	??_LCD_WRITE_CHAR
  2945  01D3                     u1247:	
  2946  01D3  0BF0               	decfsz	??_LCD_WRITE_CHAR,f
  2947  01D4  29D3               	goto	u1247
  2948  01D5  0BF1               	decfsz	??_LCD_WRITE_CHAR+1,f
  2949  01D6  29D3               	goto	u1247
  2950  01D7                     l136:	
  2951  01D7  0008               	return
  2952  01D8                     __end_of_LCD_WRITE_CHAR:	
  2953                           
  2954                           	psect	text16
  2955  01F3                     __ptext16:	
  2956 ;; *************** function _LCD_SET_CURSOR *****************
  2957 ;; Defined at:
  2958 ;;		line 29 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  a               1    wreg     unsigned char 
  2961 ;;  b               1    3[COMMON] unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  a               1    5[COMMON] unsigned char 
  2964 ;;  temporal        1    6[COMMON] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2974 ;;      Params:         1       0       0       0       0
  2975 ;;      Locals:         2       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0
  2977 ;;      Totals:         4       0       0       0       0
  2978 ;;Total ram usage:        4 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    1
  2981 ;; This function calls:
  2982 ;;		_LCD_CMD
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _LCD_SET_CURSOR
  2990  01F3                     _LCD_SET_CURSOR:	
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  2994                           ;LCD_SET_CURSOR@a stored from wreg
  2995  01F3  00F5               	movwf	LCD_SET_CURSOR@a
  2996  01F4                     l1485:	
  2997                           
  2998                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 30:     uint8_t temporal;;../Digital2_LabLCD/LCD_8b
      +                          its_lib.c: 31:     if (a == 1) {
  2999  01F4  0375               	decf	LCD_SET_CURSOR@a,w
  3000  01F5  1D03               	btfss	3,2
  3001  01F6  29F8               	goto	u961
  3002  01F7  29F9               	goto	u960
  3003  01F8                     u961:	
  3004  01F8  2A05               	goto	l1491
  3005  01F9                     u960:	
  3006  01F9                     l1487:	
  3007                           
  3008                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 32:         temporal = 0x80 + b - 1;
  3009  01F9  0873               	movf	LCD_SET_CURSOR@b,w
  3010  01FA  3E7F               	addlw	127
  3011  01FB  00F4               	movwf	??_LCD_SET_CURSOR
  3012  01FC  0874               	movf	??_LCD_SET_CURSOR,w
  3013  01FD  00F6               	movwf	LCD_SET_CURSOR@temporal
  3014  01FE                     l1489:	
  3015                           
  3016                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 33:         LCD_CMD(temporal);
  3017  01FE  0876               	movf	LCD_SET_CURSOR@temporal,w
  3018  01FF  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3019                           
  3020                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 34:     }
  3021  0204  2A16               	goto	l130
  3022  0205                     l1491:	
  3023  0205  3002               	movlw	2
  3024  0206  0675               	xorwf	LCD_SET_CURSOR@a,w
  3025  0207  1D03               	btfss	3,2
  3026  0208  2A0A               	goto	u971
  3027  0209  2A0B               	goto	u970
  3028  020A                     u971:	
  3029  020A  2A16               	goto	l130
  3030  020B                     u970:	
  3031  020B                     l1493:	
  3032                           
  3033                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 36:         temporal = 0xC0 + b - 1;
  3034  020B  0873               	movf	LCD_SET_CURSOR@b,w
  3035  020C  3EBF               	addlw	191
  3036  020D  00F4               	movwf	??_LCD_SET_CURSOR
  3037  020E  0874               	movf	??_LCD_SET_CURSOR,w
  3038  020F  00F6               	movwf	LCD_SET_CURSOR@temporal
  3039  0210                     l1495:	
  3040                           
  3041                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 37:         LCD_CMD(temporal);
  3042  0210  0876               	movf	LCD_SET_CURSOR@temporal,w
  3043  0211  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3044  0216                     l130:	
  3045  0216  0008               	return
  3046  0217                     __end_of_LCD_SET_CURSOR:	
  3047                           
  3048                           	psect	text17
  3049  0343                     __ptext17:	
  3050 ;; *************** function _LCD_INIT *****************
  3051 ;; Defined at:
  3052 ;;		line 41 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          2       0       0       0       0
  3069 ;;      Totals:         2       0       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		_LCD_CMD
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _LCD_INIT
  3082  0343                     _LCD_INIT:	
  3083  0343                     l1399:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  3086                           
  3087                           
  3088                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 42:     PORTB = 0;
  3089  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0345  0186               	clrf	6	;volatile
  3092  0346                     l1401:	
  3093                           
  3094                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 43:     _delay((unsigned long)((15)*(4000000/4000.0
      +                          )));
  3095  0346  3014               	movlw	20
  3096  0347  00F4               	movwf	??_LCD_INIT+1
  3097  0348  3079               	movlw	121
  3098  0349  00F3               	movwf	??_LCD_INIT
  3099  034A                     u1257:	
  3100  034A  0BF3               	decfsz	??_LCD_INIT,f
  3101  034B  2B4A               	goto	u1257
  3102  034C  0BF4               	decfsz	??_LCD_INIT+1,f
  3103  034D  2B4A               	goto	u1257
  3104  034E  2B4F               	nop2
  3105  034F                     l1403:	
  3106                           
  3107                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 44:     LCD_CMD(0x30);
  3108  034F  3030               	movlw	48
  3109  0350  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3110  0355                     l1405:	
  3111                           
  3112                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 45:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  3113  0355  3007               	movlw	7
  3114  0356  00F4               	movwf	??_LCD_INIT+1
  3115  0357  307D               	movlw	125
  3116  0358  00F3               	movwf	??_LCD_INIT
  3117  0359                     u1267:	
  3118  0359  0BF3               	decfsz	??_LCD_INIT,f
  3119  035A  2B59               	goto	u1267
  3120  035B  0BF4               	decfsz	??_LCD_INIT+1,f
  3121  035C  2B59               	goto	u1267
  3122  035D                     l1407:	
  3123                           
  3124                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 46:     LCD_CMD(0x30);
  3125  035D  3030               	movlw	48
  3126  035E  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3127  0363                     l1409:	
  3128                           
  3129                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 47:     _delay((unsigned long)((160)*(4000000/40000
      +                          00.0)));
  3130  0363  3035               	movlw	53
  3131  0364  00F3               	movwf	??_LCD_INIT
  3132  0365                     u1277:	
  3133  0365  0BF3               	decfsz	??_LCD_INIT,f
  3134  0366  2B65               	goto	u1277
  3135  0367                     l1411:	
  3136                           
  3137                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 48:     LCD_CMD(0x30);
  3138  0367  3030               	movlw	48
  3139  0368  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3140  036D                     l1413:	
  3141                           
  3142                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 49:     _delay((unsigned long)((160)*(4000000/40000
      +                          00.0)));
  3143  036D  3035               	movlw	53
  3144  036E  00F3               	movwf	??_LCD_INIT
  3145  036F                     u1287:	
  3146  036F  0BF3               	decfsz	??_LCD_INIT,f
  3147  0370  2B6F               	goto	u1287
  3148  0371                     l1415:	
  3149                           
  3150                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 52:     LCD_CMD(0x02);
  3151  0371  3002               	movlw	2
  3152  0372  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3153  0377                     l1417:	
  3154                           
  3155                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 53:     LCD_CMD(0x38);
  3156  0377  3038               	movlw	56
  3157  0378  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3158  037D                     l1419:	
  3159                           
  3160                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 54:     LCD_CMD(0x08);
  3161  037D  3008               	movlw	8
  3162  037E  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3163  0383                     l1421:	
  3164                           
  3165                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 55:     LCD_CMD(0x01);
  3166  0383  3001               	movlw	1
  3167  0384  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3168  0389                     l1423:	
  3169                           
  3170                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 56:     LCD_CMD(0x06);
  3171  0389  3006               	movlw	6
  3172  038A  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3173  038F                     l1425:	
  3174                           
  3175                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 57:     LCD_CMD(0x0C);
  3176  038F  300C               	movlw	12
  3177  0390  120A  118A  21AB  120A  118A  	fcall	_LCD_CMD
  3178  0395                     l133:	
  3179  0395  0008               	return
  3180  0396                     __end_of_LCD_INIT:	
  3181                           
  3182                           	psect	text18
  3183  01AB                     __ptext18:	
  3184 ;; *************** function _LCD_CMD *****************
  3185 ;; Defined at:
  3186 ;;		line 16 in file "../Digital2_LabLCD/LCD_8bits_lib.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  a               1    wreg     unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  a               1    2[COMMON] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3200 ;;      Params:         0       0       0       0       0
  3201 ;;      Locals:         1       0       0       0       0
  3202 ;;      Temps:          2       0       0       0       0
  3203 ;;      Totals:         3       0       0       0       0
  3204 ;;Total ram usage:        3 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_LCD_SET_CURSOR
  3210 ;;		_LCD_INIT
  3211 ;;		_LCD_CLR
  3212 ;;		_LCD_SHIFT_RIGHT
  3213 ;;		_LCD_SHIFT_LEFT
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _LCD_CMD
  3219  01AB                     _LCD_CMD:	
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _LCD_CMD: [wreg]
  3223                           ;LCD_CMD@a stored from wreg
  3224  01AB  00F2               	movwf	LCD_CMD@a
  3225  01AC                     l1251:	
  3226                           
  3227                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 17:     PORTDbits.RD5 = 0;
  3228  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3229  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3230  01AE  1288               	bcf	8,5	;volatile
  3231  01AF                     l1253:	
  3232                           
  3233                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 18:     PORTB = a;
  3234  01AF  0872               	movf	LCD_CMD@a,w
  3235  01B0  0086               	movwf	6	;volatile
  3236  01B1                     l1255:	
  3237                           
  3238                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 19:     PORTDbits.RD7 = 1;
  3239  01B1  1788               	bsf	8,7	;volatile
  3240  01B2                     l1257:	
  3241                           
  3242                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 20:     _delay((unsigned long)((5)*(4000000/4000000
      +                          .0)));
  3243  01B2  29B3               	nop2	;2 cycle nop
  3244  01B3  29B4               	nop2	;2 cycle nop
  3245  01B4  0000               	nop
  3246  01B5                     l1259:	
  3247                           
  3248                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 21:     PORTDbits.RD7 = 0;
  3249  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3250  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3251  01B7  1388               	bcf	8,7	;volatile
  3252                           
  3253                           ;../Digital2_LabLCD/LCD_8bits_lib.c: 22:     _delay((unsigned long)((5)*(4000000/4000.0)
      +                          ));
  3254  01B8  3007               	movlw	7
  3255  01B9  00F1               	movwf	??_LCD_CMD+1
  3256  01BA  307D               	movlw	125
  3257  01BB  00F0               	movwf	??_LCD_CMD
  3258  01BC                     u1297:	
  3259  01BC  0BF0               	decfsz	??_LCD_CMD,f
  3260  01BD  29BC               	goto	u1297
  3261  01BE  0BF1               	decfsz	??_LCD_CMD+1,f
  3262  01BF  29BC               	goto	u1297
  3263  01C0                     l121:	
  3264  01C0  0008               	return
  3265  01C1                     __end_of_LCD_CMD:	
  3266                           
  3267                           	psect	text19
  3268  019E                     __ptext19:	
  3269 ;; *************** function _Init_Port *****************
  3270 ;; Defined at:
  3271 ;;		line 106 in file "Main_master.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		status,2
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _Init_Port
  3300  019E                     _Init_Port:	
  3301  019E                     l1385:	
  3302                           ;incstack = 0
  3303                           ; Regs used in _Init_Port: [status,2]
  3304                           
  3305                           
  3306                           ;Main_master.c: 107:     ANSEL = 0;
  3307  019E  1683               	bsf	3,5	;RP0=1, select bank3
  3308  019F  1703               	bsf	3,6	;RP1=1, select bank3
  3309  01A0  0188               	clrf	8	;volatile
  3310                           
  3311                           ;Main_master.c: 108:     ANSELH = 0;
  3312  01A1  0189               	clrf	9	;volatile
  3313                           
  3314                           ;Main_master.c: 109:     TRISB = 0;
  3315  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  3316  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  3317  01A4  0186               	clrf	6	;volatile
  3318                           
  3319                           ;Main_master.c: 110:     TRISD = 0;
  3320  01A5  0188               	clrf	8	;volatile
  3321                           
  3322                           ;Main_master.c: 111:     PORTB = 0;
  3323  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3324  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  3325  01A8  0186               	clrf	6	;volatile
  3326                           
  3327                           ;Main_master.c: 112:     PORTD = 0;
  3328  01A9  0188               	clrf	8	;volatile
  3329  01AA                     l97:	
  3330  01AA  0008               	return
  3331  01AB                     __end_of_Init_Port:	
  3332                           
  3333                           	psect	text20
  3334  0307                     __ptext20:	
  3335 ;; *************** function _Init_I2C_Master *****************
  3336 ;; Defined at:
  3337 ;;		line 13 in file "I2C.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  b               4    0[BANK0 ] const unsigned long 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       4       0       0       0
  3352 ;;      Locals:         0       0       0       0       0
  3353 ;;      Temps:          0       4       0       0       0
  3354 ;;      Totals:         0       8       0       0       0
  3355 ;;Total ram usage:        8 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    1
  3358 ;; This function calls:
  3359 ;;		___lldiv
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _Init_I2C_Master
  3367  0307                     _Init_I2C_Master:	
  3368  0307                     l1387:	
  3369                           ;incstack = 0
  3370                           ; Regs used in _Init_I2C_Master: [wreg+status,2+status,0+pclath+cstack]
  3371                           
  3372                           
  3373                           ;I2C.c: 14:     SSPCONbits.SSPM0 = 0;
  3374  0307  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0308  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0309  1014               	bcf	20,0	;volatile
  3377                           
  3378                           ;I2C.c: 15:     SSPCONbits.SSPM1 = 0;
  3379  030A  1094               	bcf	20,1	;volatile
  3380                           
  3381                           ;I2C.c: 16:     SSPCONbits.SSPM2 = 0;
  3382  030B  1114               	bcf	20,2	;volatile
  3383                           
  3384                           ;I2C.c: 17:     SSPCONbits.SSPM3 = 1;
  3385  030C  1594               	bsf	20,3	;volatile
  3386                           
  3387                           ;I2C.c: 19:     SSPCONbits.CKP = 0;
  3388  030D  1214               	bcf	20,4	;volatile
  3389                           
  3390                           ;I2C.c: 20:     SSPCONbits.SSPEN = 1;
  3391  030E  1694               	bsf	20,5	;volatile
  3392  030F                     l1389:	
  3393                           
  3394                           ;I2C.c: 21:     SSPCON2 = 0;
  3395  030F  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0310  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0311  0191               	clrf	17	;volatile
  3398  0312                     l1391:	
  3399                           
  3400                           ;I2C.c: 22:     SSPADD = (4000000/(4*b)) - 1;
  3401  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3403  0314  0838               	movf	Init_I2C_Master@b,w
  3404  0315  00BC               	movwf	??_Init_I2C_Master
  3405  0316  0839               	movf	Init_I2C_Master@b+1,w
  3406  0317  00BD               	movwf	??_Init_I2C_Master+1
  3407  0318  083A               	movf	Init_I2C_Master@b+2,w
  3408  0319  00BE               	movwf	??_Init_I2C_Master+2
  3409  031A  083B               	movf	Init_I2C_Master@b+3,w
  3410  031B  00BF               	movwf	??_Init_I2C_Master+3
  3411  031C  3002               	movlw	2
  3412  031D                     u945:	
  3413  031D  1003               	clrc
  3414  031E  0DBC               	rlf	??_Init_I2C_Master,f
  3415  031F  0DBD               	rlf	??_Init_I2C_Master+1,f
  3416  0320  0DBE               	rlf	??_Init_I2C_Master+2,f
  3417  0321  0DBF               	rlf	??_Init_I2C_Master+3,f
  3418  0322                     u940:	
  3419  0322  3EFF               	addlw	-1
  3420  0323  1D03               	skipz
  3421  0324  2B1D               	goto	u945
  3422  0325  083F               	movf	??_Init_I2C_Master+3,w
  3423  0326  00F3               	movwf	___lldiv@divisor+3
  3424  0327  083E               	movf	??_Init_I2C_Master+2,w
  3425  0328  00F2               	movwf	___lldiv@divisor+2
  3426  0329  083D               	movf	??_Init_I2C_Master+1,w
  3427  032A  00F1               	movwf	___lldiv@divisor+1
  3428  032B  083C               	movf	??_Init_I2C_Master,w
  3429  032C  00F0               	movwf	___lldiv@divisor
  3430  032D  3000               	movlw	0
  3431  032E  00F7               	movwf	___lldiv@dividend+3
  3432  032F  303D               	movlw	61
  3433  0330  00F6               	movwf	___lldiv@dividend+2
  3434  0331  3009               	movlw	9
  3435  0332  00F5               	movwf	___lldiv@dividend+1
  3436  0333  3000               	movlw	0
  3437  0334  00F4               	movwf	___lldiv@dividend
  3438  0335  120A  118A  23F1  120A  118A  	fcall	___lldiv
  3439  033A  0870               	movf	?___lldiv,w
  3440  033B  3EFF               	addlw	255
  3441  033C  1683               	bsf	3,5	;RP0=1, select bank1
  3442  033D  1303               	bcf	3,6	;RP1=0, select bank1
  3443  033E  0093               	movwf	19	;volatile
  3444  033F                     l1393:	
  3445                           
  3446                           ;I2C.c: 23:     SSPSTAT = 0;
  3447  033F  0194               	clrf	20	;volatile
  3448  0340                     l1395:	
  3449                           
  3450                           ;I2C.c: 24:     TRISCbits.TRISC3 = 1;
  3451  0340  1587               	bsf	7,3	;volatile
  3452  0341                     l1397:	
  3453                           
  3454                           ;I2C.c: 25:     TRISCbits.TRISC4 = 1;
  3455  0341  1607               	bsf	7,4	;volatile
  3456  0342                     l173:	
  3457  0342  0008               	return
  3458  0343                     __end_of_Init_I2C_Master:	
  3459                           
  3460                           	psect	text21
  3461  03F1                     __ptext21:	
  3462 ;; *************** function ___lldiv *****************
  3463 ;; Defined at:
  3464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  divisor         4    0[COMMON] unsigned long 
  3467 ;;  dividend        4    4[COMMON] unsigned long 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  quotient        4    9[COMMON] unsigned long 
  3470 ;;  counter         1   13[COMMON] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  4    0[COMMON] unsigned long 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         8       0       0       0       0
  3481 ;;      Locals:         5       0       0       0       0
  3482 ;;      Temps:          1       0       0       0       0
  3483 ;;      Totals:        14       0       0       0       0
  3484 ;;Total ram usage:       14 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_Init_I2C_Master
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function ___lldiv
  3495  03F1                     ___lldiv:	
  3496  03F1                     l1279:	
  3497                           ;incstack = 0
  3498                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3499                           
  3500  03F1  3000               	movlw	0
  3501  03F2  00FC               	movwf	___lldiv@quotient+3
  3502  03F3  3000               	movlw	0
  3503  03F4  00FB               	movwf	___lldiv@quotient+2
  3504  03F5  3000               	movlw	0
  3505  03F6  00FA               	movwf	___lldiv@quotient+1
  3506  03F7  3000               	movlw	0
  3507  03F8  00F9               	movwf	___lldiv@quotient
  3508  03F9  0873               	movf	___lldiv@divisor+3,w
  3509  03FA  0472               	iorwf	___lldiv@divisor+2,w
  3510  03FB  0471               	iorwf	___lldiv@divisor+1,w
  3511  03FC  0470               	iorwf	___lldiv@divisor,w
  3512  03FD  1903               	skipnz
  3513  03FE  2C00               	goto	u681
  3514  03FF  2C01               	goto	u680
  3515  0400                     u681:	
  3516  0400  2C4E               	goto	l1299
  3517  0401                     u680:	
  3518  0401                     l1281:	
  3519  0401  01FD               	clrf	___lldiv@counter
  3520  0402  0AFD               	incf	___lldiv@counter,f
  3521  0403  2C11               	goto	l1285
  3522  0404                     l1283:	
  3523  0404  3001               	movlw	1
  3524  0405  00F8               	movwf	??___lldiv
  3525  0406                     u695:	
  3526  0406  1003               	clrc
  3527  0407  0DF0               	rlf	___lldiv@divisor,f
  3528  0408  0DF1               	rlf	___lldiv@divisor+1,f
  3529  0409  0DF2               	rlf	___lldiv@divisor+2,f
  3530  040A  0DF3               	rlf	___lldiv@divisor+3,f
  3531  040B  0BF8               	decfsz	??___lldiv,f
  3532  040C  2C06               	goto	u695
  3533  040D  3001               	movlw	1
  3534  040E  00F8               	movwf	??___lldiv
  3535  040F  0878               	movf	??___lldiv,w
  3536  0410  07FD               	addwf	___lldiv@counter,f
  3537  0411                     l1285:	
  3538  0411  1FF3               	btfss	___lldiv@divisor+3,7
  3539  0412  2C14               	goto	u701
  3540  0413  2C15               	goto	u700
  3541  0414                     u701:	
  3542  0414  2C04               	goto	l1283
  3543  0415                     u700:	
  3544  0415                     l1287:	
  3545  0415  3001               	movlw	1
  3546  0416  00F8               	movwf	??___lldiv
  3547  0417                     u715:	
  3548  0417  1003               	clrc
  3549  0418  0DF9               	rlf	___lldiv@quotient,f
  3550  0419  0DFA               	rlf	___lldiv@quotient+1,f
  3551  041A  0DFB               	rlf	___lldiv@quotient+2,f
  3552  041B  0DFC               	rlf	___lldiv@quotient+3,f
  3553  041C  0BF8               	decfsz	??___lldiv,f
  3554  041D  2C17               	goto	u715
  3555  041E                     l1289:	
  3556  041E  0873               	movf	___lldiv@divisor+3,w
  3557  041F  0277               	subwf	___lldiv@dividend+3,w
  3558  0420  1D03               	skipz
  3559  0421  2C2C               	goto	u725
  3560  0422  0872               	movf	___lldiv@divisor+2,w
  3561  0423  0276               	subwf	___lldiv@dividend+2,w
  3562  0424  1D03               	skipz
  3563  0425  2C2C               	goto	u725
  3564  0426  0871               	movf	___lldiv@divisor+1,w
  3565  0427  0275               	subwf	___lldiv@dividend+1,w
  3566  0428  1D03               	skipz
  3567  0429  2C2C               	goto	u725
  3568  042A  0870               	movf	___lldiv@divisor,w
  3569  042B  0274               	subwf	___lldiv@dividend,w
  3570  042C                     u725:	
  3571  042C  1C03               	skipc
  3572  042D  2C2F               	goto	u721
  3573  042E  2C30               	goto	u720
  3574  042F                     u721:	
  3575  042F  2C3F               	goto	l1295
  3576  0430                     u720:	
  3577  0430                     l1291:	
  3578  0430  0870               	movf	___lldiv@divisor,w
  3579  0431  02F4               	subwf	___lldiv@dividend,f
  3580  0432  0871               	movf	___lldiv@divisor+1,w
  3581  0433  1C03               	skipc
  3582  0434  0F71               	incfsz	___lldiv@divisor+1,w
  3583  0435  02F5               	subwf	___lldiv@dividend+1,f
  3584  0436  0872               	movf	___lldiv@divisor+2,w
  3585  0437  1C03               	skipc
  3586  0438  0F72               	incfsz	___lldiv@divisor+2,w
  3587  0439  02F6               	subwf	___lldiv@dividend+2,f
  3588  043A  0873               	movf	___lldiv@divisor+3,w
  3589  043B  1C03               	skipc
  3590  043C  0F73               	incfsz	___lldiv@divisor+3,w
  3591  043D  02F7               	subwf	___lldiv@dividend+3,f
  3592  043E                     l1293:	
  3593  043E  1479               	bsf	___lldiv@quotient,0
  3594  043F                     l1295:	
  3595  043F  3001               	movlw	1
  3596  0440                     u735:	
  3597  0440  1003               	clrc
  3598  0441  0CF3               	rrf	___lldiv@divisor+3,f
  3599  0442  0CF2               	rrf	___lldiv@divisor+2,f
  3600  0443  0CF1               	rrf	___lldiv@divisor+1,f
  3601  0444  0CF0               	rrf	___lldiv@divisor,f
  3602  0445  3EFF               	addlw	-1
  3603  0446  1D03               	skipz
  3604  0447  2C40               	goto	u735
  3605  0448                     l1297:	
  3606  0448  3001               	movlw	1
  3607  0449  02FD               	subwf	___lldiv@counter,f
  3608  044A  1D03               	btfss	3,2
  3609  044B  2C4D               	goto	u741
  3610  044C  2C4E               	goto	u740
  3611  044D                     u741:	
  3612  044D  2C15               	goto	l1287
  3613  044E                     u740:	
  3614  044E                     l1299:	
  3615  044E  087C               	movf	___lldiv@quotient+3,w
  3616  044F  00F3               	movwf	?___lldiv+3
  3617  0450  087B               	movf	___lldiv@quotient+2,w
  3618  0451  00F2               	movwf	?___lldiv+2
  3619  0452  087A               	movf	___lldiv@quotient+1,w
  3620  0453  00F1               	movwf	?___lldiv+1
  3621  0454  0879               	movf	___lldiv@quotient,w
  3622  0455  00F0               	movwf	?___lldiv
  3623  0456                     l321:	
  3624  0456  0008               	return
  3625  0457                     __end_of___lldiv:	
  3626                           
  3627                           	psect	text22
  3628  02D9                     __ptext22:	
  3629 ;; *************** function _I2C_Master_Read *****************
  3630 ;; Defined at:
  3631 ;;		line 66 in file "I2C.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  a               2    0[COMMON] unsigned short 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  temporal        2    4[COMMON] unsigned short 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2    0[COMMON] unsigned short 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         2       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0
  3647 ;;      Temps:          2       0       0       0       0
  3648 ;;      Totals:         6       0       0       0       0
  3649 ;;Total ram usage:        6 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		_Wait_I2C_Master
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _I2C_Master_Read
  3661  02D9                     _I2C_Master_Read:	
  3662  02D9                     l1435:	
  3663                           ;incstack = 0
  3664                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3665                           
  3666                           
  3667                           ;I2C.c: 67:     unsigned short temporal;;I2C.c: 68:     Wait_I2C_Master();
  3668  02D9  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  3669  02DE                     l1437:	
  3670                           
  3671                           ;I2C.c: 69:     SSPCON2bits.RCEN = 1;
  3672  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3673  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3674  02E0  1591               	bsf	17,3	;volatile
  3675                           
  3676                           ;I2C.c: 70:     Wait_I2C_Master();
  3677  02E1  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  3678  02E6                     l1439:	
  3679                           
  3680                           ;I2C.c: 71:     temporal = SSPBUF;
  3681  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3682  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3683  02E8  0813               	movf	19,w	;volatile
  3684  02E9  00F2               	movwf	??_I2C_Master_Read
  3685  02EA  01F3               	clrf	??_I2C_Master_Read+1
  3686  02EB  0872               	movf	??_I2C_Master_Read,w
  3687  02EC  00F4               	movwf	I2C_Master_Read@temporal
  3688  02ED  0873               	movf	??_I2C_Master_Read+1,w
  3689  02EE  00F5               	movwf	I2C_Master_Read@temporal+1
  3690  02EF                     l1441:	
  3691                           
  3692                           ;I2C.c: 72:     Wait_I2C_Master();
  3693  02EF  120A  118A  2191  120A  118A  	fcall	_Wait_I2C_Master
  3694  02F4                     l1443:	
  3695                           
  3696                           ;I2C.c: 74:     if (a == 1){
  3697  02F4  0370               	decf	I2C_Master_Read@a,w
  3698  02F5  0471               	iorwf	I2C_Master_Read@a+1,w
  3699  02F6  1D03               	btfss	3,2
  3700  02F7  2AF9               	goto	u951
  3701  02F8  2AFA               	goto	u950
  3702  02F9                     u951:	
  3703  02F9  2AFE               	goto	l197
  3704  02FA                     u950:	
  3705  02FA                     l1445:	
  3706                           
  3707                           ;I2C.c: 75:         SSPCON2bits.ACKDT = 0;
  3708  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  3709  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  3710  02FC  1291               	bcf	17,5	;volatile
  3711                           
  3712                           ;I2C.c: 76:     }else{
  3713  02FD  2B01               	goto	l198
  3714  02FE                     l197:	
  3715                           
  3716                           ;I2C.c: 77:         SSPCON2bits.ACKDT = 1;
  3717  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3718  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3719  0300  1691               	bsf	17,5	;volatile
  3720  0301                     l198:	
  3721                           ;I2C.c: 78:     }
  3722                           
  3723                           
  3724                           ;I2C.c: 79:     SSPCON2bits.ACKEN = 1;
  3725  0301  1611               	bsf	17,4	;volatile
  3726  0302                     l1447:	
  3727                           
  3728                           ;I2C.c: 80:     return temporal;
  3729  0302  0875               	movf	I2C_Master_Read@temporal+1,w
  3730  0303  00F1               	movwf	?_I2C_Master_Read+1
  3731  0304  0874               	movf	I2C_Master_Read@temporal,w
  3732  0305  00F0               	movwf	?_I2C_Master_Read
  3733  0306                     l199:	
  3734  0306  0008               	return
  3735  0307                     __end_of_I2C_Master_Read:	
  3736                           
  3737                           	psect	text23
  3738  0191                     __ptext23:	
  3739 ;; *************** function _Wait_I2C_Master *****************
  3740 ;; Defined at:
  3741 ;;		line 42 in file "I2C.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3755 ;;      Params:         0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_Start_I2C_Master
  3765 ;;		_Stop_I2C_Master
  3766 ;;		_Write_I2C_Master
  3767 ;;		_I2C_Master_Read
  3768 ;;		_Restart_I2C
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _Wait_I2C_Master
  3774  0191                     _Wait_I2C_Master:	
  3775  0191                     l1261:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _Wait_I2C_Master: [wreg+status,2]
  3778                           
  3779  0191                     l179:	
  3780                           ;I2C.c: 43:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3781                           
  3782  0191  1683               	bsf	3,5	;RP0=1, select bank1
  3783  0192  1303               	bcf	3,6	;RP1=0, select bank1
  3784  0193  1914               	btfsc	20,2	;volatile
  3785  0194  2996               	goto	u621
  3786  0195  2997               	goto	u620
  3787  0196                     u621:	
  3788  0196  2991               	goto	l179
  3789  0197                     u620:	
  3790  0197                     l1263:	
  3791  0197  0811               	movf	17,w	;volatile
  3792  0198  391F               	andlw	31
  3793  0199  1D03               	btfss	3,2
  3794  019A  299C               	goto	u631
  3795  019B  299D               	goto	u630
  3796  019C                     u631:	
  3797  019C  2991               	goto	l179
  3798  019D                     u630:	
  3799  019D                     l182:	
  3800  019D  0008               	return
  3801  019E                     __end_of_Wait_I2C_Master:	
  3802  007E                     btemp	set	126	;btemp
  3803  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    0
    Data        4
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WRITE_STRING@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _obtener_unidades->___awmod
    _obtener_decimal_2->___awmod
    _obtener_decimal_1->___awmod
    _obtener_decenas->___awmod
    ___awmod->___awdiv
    ___xxtofl->___wmul
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD
    _Init_I2C_Master->___lldiv

Critical Paths under _main in BANK0

    _main->_Init_I2C_Master
    _obtener_unidades->___awmod
    _obtener_decimal_2->___awmod
    _obtener_decimal_1->___awmod
    _obtener_decenas->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8646
                                              8 BANK0      2     2      0
                    _I2C_Master_Read
                    _Init_I2C_Master
                          _Init_Port
                           _LCD_INIT
                     _LCD_SET_CURSOR
                     _LCD_WRITE_CHAR
                   _LCD_WRITE_STRING
                   _Start_I2C_Master
                    _Stop_I2C_Master
                   _Write_I2C_Master
                            ___fltol
                             ___wmul
                           ___xxtofl
                  _convertir_a_ascii
                    _obtener_decenas
                  _obtener_decimal_1
                  _obtener_decimal_2
                   _obtener_unidades
 ---------------------------------------------------------------------------------
 (1) _obtener_unidades                                     5     5      0     949
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _obtener_decimal_2                                    5     5      0    1497
                                              2 BANK0      5     5      0
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _obtener_decimal_1                                    5     5      0    1497
                                              2 BANK0      5     5      0
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _obtener_decenas                                      5     5      0    1401
                                              2 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _convertir_a_ascii                                    3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     661
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _Write_I2C_Master                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (1) _Stop_I2C_Master                                      0     0      0       0
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (1) _Start_I2C_Master                                     0     0      0       0
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     3     3      0     211
                                              3 COMMON     3     3      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     460
                                              3 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init_Port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_I2C_Master                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _Wait_I2C_Master
 ---------------------------------------------------------------------------------
 (2) _Wait_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _Wait_I2C_Master
   _Init_I2C_Master
     ___lldiv
   _Init_Port
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_CHAR
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Start_I2C_Master
     _Wait_I2C_Master
   _Stop_I2C_Master
     _Wait_I2C_Master
   _Write_I2C_Master
     _Wait_I2C_Master
   ___fltol
   ___wmul
   ___xxtofl
     ___wmul (ARG)
   _convertir_a_ascii
   _obtener_decenas
     ___awdiv
     ___awmod
       ___awdiv (ARG)
       ___wmul (ARG)
   _obtener_decimal_1
     ___awmod
       ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul
   _obtener_decimal_2
     ___awmod
       ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul
   _obtener_unidades
     ___awmod
       ___awdiv (ARG)
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34      12        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 13:21:51 2020

           ?_LCD_WRITE_CHAR 0070                           pc 0002                 __CFG_CP$OFF 0000  
                        l97 01AA                ___awdiv@sign 0076                          fsr 0004  
       ___wmul@multiplicand 0072           ?_LCD_WRITE_STRING 0070                         l100 01F2  
                       l103 0288                         l112 016C                         l121 01C0  
                       l130 0216                         l106 02B0                         l133 0395  
                       l109 02D8                         l142 023B                         l136 01D7  
                       l321 0456                         l173 0342                         l182 019D  
                       l191 0186                         l185 017D                         l194 0190  
                       l179 0191                         l451 03F0                         l197 02FE  
                       l285 0248                         l198 0301                         l438 04BD  
                       l199 0306                         l471 0537                         l287 0260  
                       l712 055C                         l481 0537                         l714 05F3  
                       l725 05BD                         l478 0522                         l726 05C9  
                       l718 05A1                __CFG_CPD$OFF 0000                         u620 0197  
                       u700 0415                         u621 0196                         u701 0414  
                       u630 019D                         u631 019C                         u720 0430  
                       u640 0242                         u721 042F                         u641 0241  
                       u810 049B                         u715 0417                         u811 049A  
                       u740 044E                         u900 03CF                         u741 044D  
                       u725 042C                         u805 048B                         u901 03CE  
                       u830 04AF                         u750 045C                         u670 025C  
                       u735 0440                         u831 04AE                         u815 0497  
                       u751 045B                         u671 025B                         u655 0249  
                       u680 0401                         u840 04B4                         u760 0467  
                       u920 03E2                         u681 0400                         u841 04B3  
                       u825 04A3                         u761 0466                         u921 03E1  
                       u905 03CB                         u665 0250                         u770 0478  
                       u930 03E7                         u850 039D                         u771 0477  
                       u931 03E6                         u915 03D6                         u851 039C  
                       u940 0322                         u860 03A8                         u861 03A7  
                       u950 02FA                         u790 048A                         u870 03B3  
                       u951 02F9                         u695 0406                         u791 0489  
                       u871 03B2                         u960 01F9                         u945 031D  
                       u961 01F8                         u785 047C                         u970 020B  
                       u890 03C5                         u971 020A                         u891 03C4  
                       u980 023B                         u981 023A                         u885 03B7  
                       u990 04C9                         u991 04C8                         _pot 0036  
                       fsr0 0004          ??_LCD_WRITE_STRING 0073                         indf 0000  
              ___awmod@sign 0039             __end_of_LCD_CMD 01C1                __CFG_LVP$OFF 0000  
              ___fltol@exp1 007A                        l1311 0463                        l1303 0457  
                      l1401 0346                        l1321 0478                        l1313 0467  
                      l1305 0458                        l1251 01AC                        l1411 0367  
                      l1403 034F                        l1243 01C2                        l1331 049B  
                      l1323 047B                        l1315 046C                        l1307 045C  
                      l1261 0191                        l1253 01AF                        l1421 0383  
                      l1413 036D                        l1405 0355                        l1245 01C5  
                      l1501 0228                        l1341 04B4                        l1333 04A1  
                      l1325 0482                        l1317 0470                        l1309 0461  
                      l1263 0197                        l1255 01B1                        l1423 0389  
                      l1415 0371                        l1407 035D                        l1247 01C7  
                      l1503 022E                        l1431 0187                        l1511 04D2  
                      l1343 04B9                        l1335 04A2                        l1327 0486  
                      l1319 0472                        l1351 039D                        l1271 024F  
                      l1441 02EF                        l1281 0401                        l1257 01B2  
                      l1425 038F                        l1417 0377                        l1409 0363  
                      l1249 01CC                        l1433 018C                        l1521 04F6  
                      l1513 04E7                        l1505 04BE                        l1337 04A9  
                      l1329 048A                        l1361 03B3                        l1353 03A2  
                      l1273 0256                        l1265 023C                        l1601 0640  
                      l1443 02F4                        l1435 02D9                        l1291 0430  
                      l1283 0404                        l1259 01B5                        l1419 037D  
                      l1427 0175                        l1451 017E                        l1515 04E8  
                      l1507 04C9                        l1339 04AF                        l1371 03CF  
                      l1363 03B6                        l1355 03A4                        l1347 0396  
                      l1275 025C                        l1267 023E                        l1611 0691  
                      l1603 0649                        l1445 02FA                        l1437 02DE  
                      l1293 043E                        l1285 0411                        l1429 017A  
                      l1453 0183                        l1517 04F0                        l1541 053B  
                      l1381 03EC                        l1373 03D5                        l1365 03BD  
                      l1357 03A8                        l1349 0399                        l1269 0242  
                      l1461 028C                        l1621 06EF                        l1613 069C  
                      l1605 0657                        l1447 0302                        l1439 02E6  
                      l1295 043F                        l1287 0415                        l1279 03F1  
                      l1391 0312                        l1535 0517                        l1527 04FE  
                      l1519 04F2                        l1543 0540                        l1375 03DC  
                      l1367 03C1                        l1359 03AD                        l1463 02AF  
                      l1455 01DB                        l1631 0726                        l1623 06FA  
                      l1615 06A7                        l1607 065C                        l1297 0448  
                      l1289 041E                        l1393 033F                        l1385 019E  
                      l1537 0527                        l1529 0510                        l1561 058A  
                      l1553 056D                        l1545 0544                        l1481 016B  
                      l1369 03C5                        l1377 03E2                        l1473 0264  
                      l1457 01F1                        l1641 075D                        l1633 0731  
                      l1625 0705                        l1617 06BF                        l1609 0686  
                      l1299 044E                        l1395 0340                        l1387 0307  
                      l1491 0205                        l1539 052C                        l1571 05C1  
                      l1563 0598                        l1555 0572                        l1547 0554  
                      l1379 03E7                        l1475 0287                        l1467 02B4  
                      l1651 0781                        l1643 0765                        l1635 073C  
                      l1627 0710                        l1619 06D7                        l1397 0341  
                      l1389 030F                        l1493 020B                        l1485 01F4  
                      l1581 05EB                        l1573 05CB                        l1565 05A8  
                      l1557 057F                        l1549 0564                        l1469 02D7  
                      l1661 07AB                        l1653 0789                        l1645 076B  
                      l1637 0747                        l1629 071B                        l1399 0343  
                      l1495 0210                        l1487 01F9                        l1575 05E1  
                      l1567 05B3                        l1559 0586                        l1479 0166  
                      l1663 07B3                        l1655 0791                        l1647 0773  
                      l1639 0752                        l1591 060D                        l1489 01FE  
                      l1497 0218                        l1577 05E6                        l1569 05B7  
                      l1665 07BB                        l1657 079D                        l1649 077B  
                      l1593 0612                        l1585 05F4                        l1499 021B  
                      l1579 05EA                        l1667 07C7                        l1659 07A5  
                      l1595 061B                        l1587 05F9                        l1669 07CF  
                      l1597 0629                        l1589 0608                        l1599 0632  
                      STR_1 0009                        STR_2 001A                        STR_3 001A  
                      STR_4 001C                        u1000 04E0                        u1010 04F6  
                      u1011 04F5                        u1020 04FD                        u1100 0544  
                      u1021 04FC                        u1005 04DB                        u1101 0543  
                      u1110 0564                        u1111 0563                        u1040 050F  
                      u1200 05D6                        u1041 050E                        u1050 0516  
                      u1210 05E6                        u1130 0585                        u1051 0515  
                      u1035 04FF                        u1211 05E5                        u1131 0584  
                      u1220 05EA                        u1221 05E9                        u1205 05D1  
                      u1125 0577                        u1070 0527                        u1150 05A7  
                      u1071 0526                        u1151 05A6                        u1080 052C  
                      u1081 052B                        u1065 0519                        u1145 0599  
                      u1170 05B7                        u1090 0540                        u1171 05B6  
                      u1091 053F                        u1180 05BD                        u1237 01CA  
                      u1181 05BC                        u1165 05AC                        u1190 05C1  
                      u1247 01D3                        u1191 05C0                        u1257 034A  
                      u1267 0359                        u1277 0365                        u1287 036F  
                      u1297 01BC                __CFG_WRT$OFF 0000                        _cont 0034  
                      _main 05F4                        _foto 0035                        _potf 0042  
                      btemp 007E     __end_of_Init_I2C_Master 0343                        start 0000  
             __CFG_IESO$OFF 0000            __end_of_LCD_INIT 0396            ?_I2C_Master_Read 0070  
         Write_I2C_Master@a 0070               ___fltol@sign1 0079                       ?_main 0070  
           __end_of___awdiv 04BE               __CFG_WDTE$OFF 0000             __end_of___awmod 03F1  
           __end_of___fltol 0538                       _ANSEL 0188             __end_of___lldiv 0457  
   __end_of_Wait_I2C_Master 019E             ___awdiv@divisor 0070    __end_of_Start_I2C_Master 017E  
           ___awdiv@counter 0075                       _PORTB 0006                       _PORTD 0008  
                     _TRISB 0086                       _TRISD 0088              __CFG_FCMEN$OFF 0000  
                     _fotof 0020              __CFG_BOREN$OFF 0000                       pclath 000A  
                     status 0003                       wtemp0 007E              __CFG_MCLRE$OFF 0000  
           __initialization 07DB                __end_of_main 07DB                      ??_main 0040  
                 ??_LCD_CMD 0070            ___awdiv@dividend 0072                      _ANSELH 0189  
                    _SSPADD 0093                      _SSPCON 0014                      _SSPBUF 0013  
        __size_of_Init_Port 000D            __end_of___xxtofl 05F4            _Write_I2C_Master 0187  
          ?_Init_I2C_Master 0038              __CFG_PWRTE$OFF 0000   convertir_a_ascii@temporal 0072  
          ??_LCD_SET_CURSOR 0074                      ___wmul 023C                   ??___awdiv 0074  
                 ??___awmod 007D                   ??___fltol 0074                   ??___lldiv 0078  
 __size_of_obtener_unidades 001B            ___awdiv@quotient 0077             ___awmod@divisor 0079  
           ___awmod@counter 0038                      _unipot 0033            ?_Wait_I2C_Master 0070  
              ___xxtofl@arg 003A                   ?_LCD_INIT 0070                ___xxtofl@exp 0039  
              ___xxtofl@val 0076     __end_of__initialization 07FC            ??_LCD_WRITE_CHAR 0070  
                ___fltol@f1 0070              __pcstackCOMMON 0070                __pidataBANK0 0161  
  __size_of_obtener_decenas 0028           __end_of_Init_Port 01AB     obtener_decenas@temporal 003E  
 obtener_decimal_1@temporal 003E   obtener_decimal_2@temporal 003E                  __pbssBANK0 0020  
                ??_LCD_INIT 0073   __size_of_LCD_WRITE_STRING 0025                  __pmaintext 05F4  
  __size_of_Stop_I2C_Master 0009                     ?___wmul 0070                     _LCD_CMD 01AB  
         ?_Start_I2C_Master 0070                   ?___xxtofl 0076             LCD_SET_CURSOR@a 0075  
           LCD_SET_CURSOR@b 0073          ??_Start_I2C_Master 0070          convertir_a_ascii@a 0071  
   I2C_Master_Read@temporal 0074                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 0003           LCD_WRITE_STRING@a 0075           LCD_WRITE_STRING@i 0073  
                   ___awdiv 0457                     ___awmod 0396                     ___fltol 04BE  
                   ___lldiv 03F1             __size_of___wmul 0025            _obtener_unidades 01D8  
                   _address 0037                     __ptext1 01D8                     __ptext2 02B1  
                   __ptext3 0289                     __ptext4 023C                     __ptext5 0261  
                   __ptext6 0396                     __ptext7 0457                     __ptext8 0165  
                   __ptext9 0538    __end_of_Write_I2C_Master 0191                  ??___xxtofl 007A  
          ___awmod@dividend 007B           _convertir_a_ascii 0165    __size_of_I2C_Master_Read 002E  
         ??_obtener_decenas 003A                     _unicont 002D                     _unifoto 0030  
        ?_convertir_a_ascii 0070                     clrloop0 016E        end_of_initialization 07FC  
       ??_convertir_a_ascii 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
          I2C_Master_Read@a 0070                   _PORTDbits 0008           ??_Stop_I2C_Master 0070  
 __end_of_convertir_a_ascii 016D               ___xxtofl@sign 0038                   _TRISCbits 0087  
          _LCD_WRITE_STRING 0217           __size_of_LCD_INIT 0053          obtener_decimal_1@a 003D  
        obtener_decimal_2@a 003D    __size_of_Init_I2C_Master 003C              __end_of___wmul 0261  
       start_initialization 07DB                   _Init_Port 019E    __size_of_Wait_I2C_Master 000D  
           LCD_WRITE_CHAR@a 0072           ??_I2C_Master_Read 0072    __CFG_FOSC$INTRC_NOCLKOUT 0000  
  obtener_unidades@temporal 003E                    ??___wmul 0074                 __pdataBANK0 0042  
                  LCD_CMD@a 0072                    ?_LCD_CMD 0070     __size_of_LCD_SET_CURSOR 0024  
__size_of_convertir_a_ascii 0008                   ___latbits 0002               __pcstackBANK0 0038  
                ?_Init_Port 0070           __size_of___xxtofl 00BC                   _deci1foto 002F  
                 _deci2foto 002E    __end_of_obtener_unidades 01F3   __size_of_Start_I2C_Master 0009  
                 _charcont1 0025                   _charcont2 0024                   _charfoto1 002B  
                 _charfoto2 0029                   _charfoto3 0027                    ?___awdiv 0070  
                  ?___awmod 0079                    ?___fltol 0070                    ?___lldiv 0070  
   __size_of_LCD_WRITE_CHAR 0017             _obtener_decenas 0261                   __pstrings 0003  
         ?_Write_I2C_Master 0070           ??_Init_I2C_Master 003C          ??_Write_I2C_Master 0072  
    LCD_SET_CURSOR@temporal 0076                    _LCD_INIT 0343              ___wmul@product 0074  
                 clear_ram0 016D                    _PIE1bits 008C           _obtener_decimal_1 0289  
         _obtener_decimal_2 02B1           ??_Wait_I2C_Master 0070             _Stop_I2C_Master 017E  
                  _PIR1bits 000C          ?_obtener_decimal_1 0070          ?_obtener_decimal_2 0070  
  __end_of_LCD_WRITE_STRING 023C         ??_obtener_decimal_1 003A         ??_obtener_decimal_2 003A  
               __stringbase 0008           ___wmul@multiplier 0070            __size_of_LCD_CMD 0016  
               ??_Init_Port 0070   __end_of_obtener_decimal_1 02B1   __end_of_obtener_decimal_2 02D9  
   __end_of_obtener_decenas 0289            __size_of___awdiv 0067            __size_of___awmod 005B  
          __size_of___fltol 007A            __size_of___lldiv 0066          __end_of__stringtab 0009  
            _LCD_SET_CURSOR 01F3                    _deci1pot 0032                    _deci2pot 0031  
                  _dececont 002C             _I2C_Master_Read 02D9                    ___xxtofl 0538  
                  _charpot1 002A                    _charpot2 0028                    _charpot3 0026  
                  __ptext10 04BE                    __ptext11 0187                    __ptext20 0307  
                  __ptext12 017E                    __ptext21 03F1                    __ptext13 0175  
                  __ptext22 02D9                    __ptext14 0217                    __ptext23 0191  
                  __ptext15 01C1                    __ptext16 01F3                    __ptext17 0343  
                  __ptext18 01AB                    __ptext19 019E           __CFG_BOR4V$BOR40V 0000  
   __end_of_Stop_I2C_Master 0187               __size_of_main 01E7            _Start_I2C_Master 0175  
            _LCD_WRITE_CHAR 01C1      __end_of_LCD_SET_CURSOR 0217            obtener_decenas@a 003D  
                _INTCONbits 000B           ?_obtener_unidades 0070  __size_of_obtener_decimal_1 0028  
__size_of_obtener_decimal_2 0028            ___lldiv@dividend 0074            Init_I2C_Master@b 0038  
        ??_obtener_unidades 003A                   stringcode 0003            ?_obtener_decenas 0070  
    __end_of_LCD_WRITE_CHAR 01D8             _Init_I2C_Master 0307     __end_of_I2C_Master_Read 0307  
           ?_LCD_SET_CURSOR 0073           obtener_unidades@a 003D            ___lldiv@quotient 0079  
                  stringdir 0003                    stringtab 0003                 _SSPCON2bits 0091  
           _Wait_I2C_Master 0191            ?_Stop_I2C_Master 0070   __size_of_Write_I2C_Master 000A  
                _SSPCONbits 0014  
